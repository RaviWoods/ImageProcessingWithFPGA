// ----------------------------------------------------------------------
//  HLS HDL:        Verilog Netlister
//  HLS Version:    2011a.126 Production Release
//  HLS Date:       Wed Aug  8 00:52:07 PDT 2012
// 
//  Generated by:   jb914@EEWS104A-029
//  Generated date: Mon May 11 14:22:45 2015
// ----------------------------------------------------------------------

// 
// ------------------------------------------------------------------
//  Design Unit:    static_anaglyph_core
// ------------------------------------------------------------------


module static_anaglyph_core (
  clk, en, arst_n, video_in_rsc_mgc_in_wire_d, video_out_rsc_mgc_out_stdreg_d, avg_rsc_mgc_in_wire_d,
      div_mgc_div_b, div_mgc_div_z, div_mgc_div_1_b, div_mgc_div_1_z
);
  input clk;
  input en;
  input arst_n;
  input [599:0] video_in_rsc_mgc_in_wire_d;
  output [29:0] video_out_rsc_mgc_out_stdreg_d;
  reg [29:0] video_out_rsc_mgc_out_stdreg_d;
  input [9:0] avg_rsc_mgc_in_wire_d;
  output [9:0] div_mgc_div_b;
  reg [9:0] div_mgc_div_b;
  input [9:0] div_mgc_div_z;
  output [9:0] div_mgc_div_1_b;
  reg [9:0] div_mgc_div_1_b;
  input [9:0] div_mgc_div_1_z;



  // Interconnect Declarations for Component Instantiations 
  always @(*)
  begin : core
    // Interconnect Declarations
    reg [599:0] io_read_video_in_rsc_d_cse_sva;
    reg [11:0] acc_idiv_sva;
    reg [3:0] acc_imod_sva;
    reg [2:0] acc_imod_1_sva;
    reg [9:0] acc_5_cse_sva;
    reg [7:0] ac_int_cctor_1_sva;
    reg slc_svs;
    reg [10:0] if_acc_psp_sva;
    reg [5:0] shift_1_sva_1;
    reg [1:0] shift_sg1_lpi_dfm;
    reg [5:0] shift_1_lpi_dfm;
    reg [11:0] left_adjust_sg1_sva;
    reg [12:0] acc_20_psp_sva;
    reg div_2cyc;
    reg [7:0] div_tmp_duc;
    reg [9:0] acc_5_cse_sva_mut;
    reg [9:0] acc_5_cse_sva_mut_1;
    reg [5:0] shift_1_sva_2;
    reg [599:0] io_read_video_in_rsc_d_cse_sva_1;
    reg [599:0] io_read_video_in_rsc_d_cse_sva_2;
    reg slc_svs_1;
    reg slc_svs_2;
    reg [9:0] acc_5_cse_sva_mut_2;
    reg [9:0] acc_5_cse_sva_mut_3;
    reg [1:0] if_acc_3_itm;
    reg [1:0] if_acc_3_itm_1;
    reg [5:0] if_slc_conc_idiv_5_itm;
    reg [5:0] if_slc_conc_idiv_5_itm_1;
    reg div_2cyc_st_1;
    reg div_2cyc_st_2;
    reg slc_svs_st_1;
    reg main_stage_0_2;
    reg main_stage_0_3;

    begin : mainExit
      forever begin : main
        // C-Step 0 of Loop 'main'
        begin : waitLoop0Exit
          forever begin : waitLoop0
            @(posedge clk or negedge ( arst_n ));
            if ( ~ arst_n )
              disable mainExit;
            if ( en )
              disable waitLoop0Exit;
          end
        end
        // C-Step 1 of Loop 'main'
        div_mgc_div_b <= 10'b0;
        div_mgc_div_1_b <= 10'b0;
        if ( main_stage_0_3 ) begin
          if ( div_2cyc_st_2 ) begin
            div_tmp_duc = div_mgc_div_z[7:0];
          end
          else begin
            div_tmp_duc = div_mgc_div_1_z[7:0];
          end
          ac_int_cctor_1_sva = (~ div_tmp_duc) + 8'b1011;
          shift_sg1_lpi_dfm = (ac_int_cctor_1_sva[7:6]) & (signext_2_1(~ slc_svs_2));
          shift_1_lpi_dfm = MUX_v_6_2_2({(ac_int_cctor_1_sva[5:0]) , shift_1_sva_2},
              slc_svs_2);
          left_adjust_sg1_sva = conv_s2u_9_12({1'b1 , (~ shift_sg1_lpi_dfm) , (~
              shift_1_lpi_dfm)}) + ({shift_sg1_lpi_dfm , shift_1_lpi_dfm , 4'b1});
          acc_20_psp_sva = ({1'b1 , (~ left_adjust_sg1_sva)}) + 13'b100101101;
          video_out_rsc_mgc_out_stdreg_d <= {(fslr_10_600_13(io_read_video_in_rsc_d_cse_sva_2,
              ({((left_adjust_sg1_sva[11:1]) + 11'b101) , (left_adjust_sg1_sva[0])
              , 1'b0}))) , (fslr_10_600_17(io_read_video_in_rsc_d_cse_sva_2, ({(conv_u2u_15_16({{2{acc_20_psp_sva[12]}},
              acc_20_psp_sva}) + 16'b101) , 1'b0}))) , (readslicef_11_10_1((conv_u2u_10_11(fslr_10_600_13(io_read_video_in_rsc_d_cse_sva_2,
              ({left_adjust_sg1_sva , 1'b0}))) + conv_u2u_10_11(fslr_10_600_16(io_read_video_in_rsc_d_cse_sva_2,
              (signext_16_14({acc_20_psp_sva , 1'b0})))))))};
        end
        if ( main_stage_0_2 ) begin
          shift_1_sva_1 = 6'b0;
          if ( div_2cyc_st_1 ) begin
            div_mgc_div_b <= acc_5_cse_sva_mut_2;
          end
          else begin
            div_mgc_div_1_b <= acc_5_cse_sva_mut_3;
          end
          if ( slc_svs_st_1 ) begin
            shift_1_sva_1 = conv_s2u_2_6(if_acc_3_itm_1) + if_slc_conc_idiv_5_itm_1;
          end
        end
        io_read_video_in_rsc_d_cse_sva = video_in_rsc_mgc_in_wire_d;
        acc_idiv_sva = conv_u2u_11_12(conv_u2u_10_11(io_read_video_in_rsc_d_cse_sva[319:310])
            + conv_u2u_10_11(io_read_video_in_rsc_d_cse_sva[329:320])) + conv_u2u_10_12(io_read_video_in_rsc_d_cse_sva[309:300]);
        acc_imod_sva = (readslicef_5_4_1((conv_u2u_4_5({(readslicef_4_3_1((conv_u2u_3_4({(readslicef_3_2_1((conv_u2u_2_3({(~
            (acc_idiv_sva[3])) , 1'b1}) + conv_u2u_2_3({(acc_idiv_sva[4]) , (acc_idiv_sva[8])}))))
            , 1'b1}) + conv_u2u_3_4({(readslicef_3_2_1((conv_u2u_2_3({(~ (acc_idiv_sva[5]))
            , 1'b1}) + conv_u2u_2_3({(acc_idiv_sva[6]) , (~ (acc_idiv_sva[7]))}))))
            , (acc_idiv_sva[10])})))) , 1'b1}) + conv_u2u_3_5({(readslicef_3_2_1((conv_u2u_2_3({(~
            (acc_idiv_sva[1])) , 1'b1}) + conv_u2u_2_3({(acc_idiv_sva[2]) , (~ (acc_idiv_sva[9]))}))))
            , (~ (acc_idiv_sva[11]))})))) + ({3'b101 , (acc_idiv_sva[0])});
        acc_imod_1_sva = conv_s2s_2_3(conv_s2s_1_2(~ (acc_imod_sva[3])) + conv_u2s_1_2(acc_imod_sva[0]))
            + conv_u2s_2_3(conv_u2u_1_2(~ (acc_imod_sva[1])) + conv_u2u_1_2(acc_imod_sva[2]));
        acc_5_cse_sva = readslicef_11_10_1((({(acc_idiv_sva[11]) , (readslicef_10_9_1((conv_u2u_9_10({(acc_idiv_sva[11])
            , 1'b0 , (acc_idiv_sva[11]) , 1'b0 , (acc_idiv_sva[11]) , 1'b0 , (signext_2_1(acc_idiv_sva[11]))
            , 1'b1}) + conv_u2u_9_10({(readslicef_9_8_1((({(acc_idiv_sva[9]) , 1'b0
            , (acc_idiv_sva[9]) , 1'b0 , (acc_idiv_sva[9]) , 1'b0 , (signext_2_1(acc_idiv_sva[9]))
            , 1'b1}) + conv_u2u_8_9({(readslicef_8_7_1((conv_u2u_7_8({(acc_idiv_sva[7])
            , 1'b0 , (acc_idiv_sva[7]) , 1'b0 , (signext_2_1(acc_idiv_sva[7])) ,
            1'b1}) + conv_u2u_6_8({(acc_idiv_sva[6]) , 1'b0 , (acc_idiv_sva[6]) ,
            1'b0 , (acc_idiv_sva[6]) , (acc_idiv_sva[4])})))) , (acc_imod_sva[2])}))))
            , (acc_imod_1_sva[1])})))) , 1'b1}) + ({(readslicef_11_10_1((conv_u2s_10_11({(acc_idiv_sva[10])
            , 1'b0 , (acc_idiv_sva[10]) , 1'b0 , (acc_idiv_sva[10]) , 1'b0 , (acc_idiv_sva[10])
            , 1'b0 , (acc_idiv_sva[10]) , 1'b1}) + conv_s2s_9_11({(readslicef_9_8_1((conv_u2s_8_9({(acc_idiv_sva[8])
            , 1'b0 , (acc_idiv_sva[8]) , 1'b0 , (acc_idiv_sva[8]) , 1'b0 , (acc_idiv_sva[8])
            , 1'b1}) + conv_s2s_7_9({(readslicef_7_6_1((conv_s2s_5_7({(readslicef_5_4_1((({1'b1
            , (acc_idiv_sva[4:3]) , (acc_idiv_sva[1]) , 1'b1}) + conv_u2s_4_5({(~
            (acc_imod_sva[3])) , 1'b1 , (~ (acc_imod_1_sva[2])) , (acc_idiv_sva[2])}))))
            , 1'b1}) + conv_u2s_5_7({(acc_idiv_sva[5]) , 1'b0 , (signext_2_1(acc_idiv_sva[5]))
            , (acc_idiv_sva[3])})))) , (acc_imod_sva[1])})))) , (acc_imod_sva[3])}))))
            , (~ (readslicef_3_1_2((({1'b1 , (acc_imod_1_sva[0]) , 1'b1}) + conv_u2s_2_3({(~
            (acc_imod_1_sva[1])) , (~ (acc_imod_1_sva[2]))})))))})));
        div_2cyc = ~ div_2cyc;
        if ( div_2cyc ) begin
          acc_5_cse_sva_mut = acc_5_cse_sva;
          div_mgc_div_b <= acc_5_cse_sva;
        end
        else begin
          acc_5_cse_sva_mut_1 = acc_5_cse_sva;
          div_mgc_div_1_b <= acc_5_cse_sva;
        end
        slc_svs = readslicef_11_1_10((({1'b1 , (~ avg_rsc_mgc_in_wire_d)}) + 11'b11110001));
        if ( slc_svs ) begin
          if_acc_psp_sva = conv_u2u_8_11(acc_5_cse_sva[9:2]) + conv_u2u_10_11(acc_5_cse_sva);
          if_acc_3_itm = conv_s2s_1_2(readslicef_9_1_8((conv_u2s_8_9({(~ (if_acc_psp_sva[4]))
              , (if_acc_psp_sva[3:0]) , (acc_5_cse_sva[1:0]) , (readslicef_2_1_1((conv_u2u_1_2(if_acc_psp_sva[4])
              + 2'b1)))}) + conv_s2s_8_9({2'b10 , (if_acc_psp_sva[10:5])})))) + conv_u2s_1_2(if_acc_psp_sva[4]);
          if_slc_conc_idiv_5_itm = if_acc_psp_sva[10:5];
        end
        shift_1_sva_2 = shift_1_sva_1;
        io_read_video_in_rsc_d_cse_sva_2 = io_read_video_in_rsc_d_cse_sva_1;
        io_read_video_in_rsc_d_cse_sva_1 = io_read_video_in_rsc_d_cse_sva;
        slc_svs_2 = slc_svs_1;
        slc_svs_1 = slc_svs;
        acc_5_cse_sva_mut_2 = acc_5_cse_sva_mut;
        acc_5_cse_sva_mut_3 = acc_5_cse_sva_mut_1;
        if_acc_3_itm_1 = if_acc_3_itm;
        if_slc_conc_idiv_5_itm_1 = if_slc_conc_idiv_5_itm;
        div_2cyc_st_2 = div_2cyc_st_1;
        div_2cyc_st_1 = div_2cyc;
        slc_svs_st_1 = slc_svs;
        main_stage_0_3 = main_stage_0_2;
        main_stage_0_2 = 1'b1;
      end
    end
    main_stage_0_3 = 1'b0;
    main_stage_0_2 = 1'b0;
    slc_svs_st_1 = 1'b0;
    div_2cyc_st_2 = 1'b0;
    div_2cyc_st_1 = 1'b0;
    if_slc_conc_idiv_5_itm_1 = 6'b0;
    if_slc_conc_idiv_5_itm = 6'b0;
    if_acc_3_itm_1 = 2'b0;
    if_acc_3_itm = 2'b0;
    acc_5_cse_sva_mut_3 = 10'b0;
    acc_5_cse_sva_mut_2 = 10'b0;
    slc_svs_2 = 1'b0;
    slc_svs_1 = 1'b0;
    io_read_video_in_rsc_d_cse_sva_2 = 600'b0;
    io_read_video_in_rsc_d_cse_sva_1 = 600'b0;
    shift_1_sva_2 = 6'b0;
    acc_5_cse_sva_mut_1 = 10'b0;
    acc_5_cse_sva_mut = 10'b0;
    div_tmp_duc = 8'b0;
    div_2cyc = 1'b0;
    acc_20_psp_sva = 13'b0;
    left_adjust_sg1_sva = 12'b0;
    shift_1_lpi_dfm = 6'b0;
    shift_sg1_lpi_dfm = 2'b0;
    shift_1_sva_1 = 6'b0;
    if_acc_psp_sva = 11'b0;
    slc_svs = 1'b0;
    ac_int_cctor_1_sva = 8'b0;
    acc_5_cse_sva = 10'b0;
    acc_imod_1_sva = 3'b0;
    acc_imod_sva = 4'b0;
    acc_idiv_sva = 12'b0;
    io_read_video_in_rsc_d_cse_sva = 600'b0;
    div_mgc_div_1_b <= 10'b0;
    div_mgc_div_b <= 10'b0;
    video_out_rsc_mgc_out_stdreg_d <= 30'b0;
    div_2cyc = 1'b0;
    main_stage_0_2 = 1'b0;
    main_stage_0_3 = 1'b0;
    div_mgc_div_b <= 10'b0;
    div_mgc_div_1_b <= 10'b0;
  end


  function [1:0] signext_2_1;
    input [0:0] vector;
  begin
    signext_2_1= {{1{vector[0]}}, vector};
  end
  endfunction


  function [5:0] MUX_v_6_2_2;
    input [11:0] inputs;
    input [0:0] sel;
    reg [5:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = inputs[11:6];
      end
      1'b1 : begin
        result = inputs[5:0];
      end
      default : begin
        result = inputs[11:6];
      end
    endcase
    MUX_v_6_2_2 = result;
  end
  endfunction


  function [9:0] fslr_10_600_13;
    input [599:0] data;
    input [12:0] shft;
  begin
    fslr_10_600_13 = data >> shft;
  end
  endfunction


  function [9:0] fslr_10_600_17;
    input [599:0] data;
    input [16:0] shft;
  begin
    fslr_10_600_17 = data >> shft;
  end
  endfunction


  function [9:0] readslicef_11_10_1;
    input [10:0] vector;
    reg [10:0] tmp;
  begin
    tmp = vector >> 1;
    readslicef_11_10_1 = tmp[9:0];
  end
  endfunction


  function [9:0] fslr_10_600_16;
    input [599:0] data;
    input [15:0] shft;
  begin
    fslr_10_600_16 = data >> shft;
  end
  endfunction


  function [15:0] signext_16_14;
    input [13:0] vector;
  begin
    signext_16_14= {{2{vector[13]}}, vector};
  end
  endfunction


  function [3:0] readslicef_5_4_1;
    input [4:0] vector;
    reg [4:0] tmp;
  begin
    tmp = vector >> 1;
    readslicef_5_4_1 = tmp[3:0];
  end
  endfunction


  function [2:0] readslicef_4_3_1;
    input [3:0] vector;
    reg [3:0] tmp;
  begin
    tmp = vector >> 1;
    readslicef_4_3_1 = tmp[2:0];
  end
  endfunction


  function [1:0] readslicef_3_2_1;
    input [2:0] vector;
    reg [2:0] tmp;
  begin
    tmp = vector >> 1;
    readslicef_3_2_1 = tmp[1:0];
  end
  endfunction


  function [8:0] readslicef_10_9_1;
    input [9:0] vector;
    reg [9:0] tmp;
  begin
    tmp = vector >> 1;
    readslicef_10_9_1 = tmp[8:0];
  end
  endfunction


  function [7:0] readslicef_9_8_1;
    input [8:0] vector;
    reg [8:0] tmp;
  begin
    tmp = vector >> 1;
    readslicef_9_8_1 = tmp[7:0];
  end
  endfunction


  function [6:0] readslicef_8_7_1;
    input [7:0] vector;
    reg [7:0] tmp;
  begin
    tmp = vector >> 1;
    readslicef_8_7_1 = tmp[6:0];
  end
  endfunction


  function [5:0] readslicef_7_6_1;
    input [6:0] vector;
    reg [6:0] tmp;
  begin
    tmp = vector >> 1;
    readslicef_7_6_1 = tmp[5:0];
  end
  endfunction


  function [0:0] readslicef_3_1_2;
    input [2:0] vector;
    reg [2:0] tmp;
  begin
    tmp = vector >> 2;
    readslicef_3_1_2 = tmp[0:0];
  end
  endfunction


  function [0:0] readslicef_11_1_10;
    input [10:0] vector;
    reg [10:0] tmp;
  begin
    tmp = vector >> 10;
    readslicef_11_1_10 = tmp[0:0];
  end
  endfunction


  function [0:0] readslicef_9_1_8;
    input [8:0] vector;
    reg [8:0] tmp;
  begin
    tmp = vector >> 8;
    readslicef_9_1_8 = tmp[0:0];
  end
  endfunction


  function [0:0] readslicef_2_1_1;
    input [1:0] vector;
    reg [1:0] tmp;
  begin
    tmp = vector >> 1;
    readslicef_2_1_1 = tmp[0:0];
  end
  endfunction


  function  [11:0] conv_s2u_9_12 ;
    input signed [8:0]  vector ;
  begin
    conv_s2u_9_12 = {{3{vector[8]}}, vector};
  end
  endfunction


  function  [15:0] conv_u2u_15_16 ;
    input [14:0]  vector ;
  begin
    conv_u2u_15_16 = {1'b0, vector};
  end
  endfunction


  function  [10:0] conv_u2u_10_11 ;
    input [9:0]  vector ;
  begin
    conv_u2u_10_11 = {1'b0, vector};
  end
  endfunction


  function  [5:0] conv_s2u_2_6 ;
    input signed [1:0]  vector ;
  begin
    conv_s2u_2_6 = {{4{vector[1]}}, vector};
  end
  endfunction


  function  [11:0] conv_u2u_11_12 ;
    input [10:0]  vector ;
  begin
    conv_u2u_11_12 = {1'b0, vector};
  end
  endfunction


  function  [11:0] conv_u2u_10_12 ;
    input [9:0]  vector ;
  begin
    conv_u2u_10_12 = {{2{1'b0}}, vector};
  end
  endfunction


  function  [4:0] conv_u2u_4_5 ;
    input [3:0]  vector ;
  begin
    conv_u2u_4_5 = {1'b0, vector};
  end
  endfunction


  function  [3:0] conv_u2u_3_4 ;
    input [2:0]  vector ;
  begin
    conv_u2u_3_4 = {1'b0, vector};
  end
  endfunction


  function  [2:0] conv_u2u_2_3 ;
    input [1:0]  vector ;
  begin
    conv_u2u_2_3 = {1'b0, vector};
  end
  endfunction


  function  [4:0] conv_u2u_3_5 ;
    input [2:0]  vector ;
  begin
    conv_u2u_3_5 = {{2{1'b0}}, vector};
  end
  endfunction


  function signed [2:0] conv_s2s_2_3 ;
    input signed [1:0]  vector ;
  begin
    conv_s2s_2_3 = {vector[1], vector};
  end
  endfunction


  function signed [1:0] conv_s2s_1_2 ;
    input signed [0:0]  vector ;
  begin
    conv_s2s_1_2 = {vector[0], vector};
  end
  endfunction


  function signed [1:0] conv_u2s_1_2 ;
    input [0:0]  vector ;
  begin
    conv_u2s_1_2 = {1'b0, vector};
  end
  endfunction


  function signed [2:0] conv_u2s_2_3 ;
    input [1:0]  vector ;
  begin
    conv_u2s_2_3 = {1'b0, vector};
  end
  endfunction


  function  [1:0] conv_u2u_1_2 ;
    input [0:0]  vector ;
  begin
    conv_u2u_1_2 = {1'b0, vector};
  end
  endfunction


  function  [9:0] conv_u2u_9_10 ;
    input [8:0]  vector ;
  begin
    conv_u2u_9_10 = {1'b0, vector};
  end
  endfunction


  function  [8:0] conv_u2u_8_9 ;
    input [7:0]  vector ;
  begin
    conv_u2u_8_9 = {1'b0, vector};
  end
  endfunction


  function  [7:0] conv_u2u_7_8 ;
    input [6:0]  vector ;
  begin
    conv_u2u_7_8 = {1'b0, vector};
  end
  endfunction


  function  [7:0] conv_u2u_6_8 ;
    input [5:0]  vector ;
  begin
    conv_u2u_6_8 = {{2{1'b0}}, vector};
  end
  endfunction


  function signed [10:0] conv_u2s_10_11 ;
    input [9:0]  vector ;
  begin
    conv_u2s_10_11 = {1'b0, vector};
  end
  endfunction


  function signed [10:0] conv_s2s_9_11 ;
    input signed [8:0]  vector ;
  begin
    conv_s2s_9_11 = {{2{vector[8]}}, vector};
  end
  endfunction


  function signed [8:0] conv_u2s_8_9 ;
    input [7:0]  vector ;
  begin
    conv_u2s_8_9 = {1'b0, vector};
  end
  endfunction


  function signed [8:0] conv_s2s_7_9 ;
    input signed [6:0]  vector ;
  begin
    conv_s2s_7_9 = {{2{vector[6]}}, vector};
  end
  endfunction


  function signed [6:0] conv_s2s_5_7 ;
    input signed [4:0]  vector ;
  begin
    conv_s2s_5_7 = {{2{vector[4]}}, vector};
  end
  endfunction


  function signed [4:0] conv_u2s_4_5 ;
    input [3:0]  vector ;
  begin
    conv_u2s_4_5 = {1'b0, vector};
  end
  endfunction


  function signed [6:0] conv_u2s_5_7 ;
    input [4:0]  vector ;
  begin
    conv_u2s_5_7 = {{2{1'b0}}, vector};
  end
  endfunction


  function  [10:0] conv_u2u_8_11 ;
    input [7:0]  vector ;
  begin
    conv_u2u_8_11 = {{3{1'b0}}, vector};
  end
  endfunction


  function signed [8:0] conv_s2s_8_9 ;
    input signed [7:0]  vector ;
  begin
    conv_s2s_8_9 = {vector[7], vector};
  end
  endfunction

endmodule

// ------------------------------------------------------------------
//  Design Unit:    static_anaglyph
//  Generated from file(s):
//    3) $PROJECT_HOME/blur.c
// ------------------------------------------------------------------


module static_anaglyph (
  video_in_rsc_z, video_out_rsc_z, avg_rsc_z, clk, en, arst_n
);
  input [599:0] video_in_rsc_z;
  output [29:0] video_out_rsc_z;
  input [9:0] avg_rsc_z;
  input clk;
  input en;
  input arst_n;


  // Interconnect Declarations
  wire [599:0] video_in_rsc_mgc_in_wire_d;
  wire [29:0] video_out_rsc_mgc_out_stdreg_d;
  wire [9:0] avg_rsc_mgc_in_wire_d;
  wire [9:0] div_mgc_div_b;
  wire [9:0] div_mgc_div_z;
  wire [9:0] div_mgc_div_1_b;
  wire [9:0] div_mgc_div_1_z;


  // Interconnect Declarations for Component Instantiations 
  mgc_in_wire #(.rscid(1),
  .width(600)) video_in_rsc_mgc_in_wire (
      .d(video_in_rsc_mgc_in_wire_d),
      .z(video_in_rsc_z)
    );
  mgc_out_stdreg #(.rscid(2),
  .width(30)) video_out_rsc_mgc_out_stdreg (
      .d(video_out_rsc_mgc_out_stdreg_d),
      .z(video_out_rsc_z)
    );
  mgc_in_wire #(.rscid(3),
  .width(10)) avg_rsc_mgc_in_wire (
      .d(avg_rsc_mgc_in_wire_d),
      .z(avg_rsc_z)
    );
  mgc_div #(.width_a(10),
  .width_b(10),
  .signd(0)) div_mgc_div (
      .a(10'b11111111),
      .b(div_mgc_div_b),
      .z(div_mgc_div_z)
    );
  mgc_div #(.width_a(10),
  .width_b(10),
  .signd(0)) div_mgc_div_1 (
      .a(10'b11111111),
      .b(div_mgc_div_1_b),
      .z(div_mgc_div_1_z)
    );
  static_anaglyph_core static_anaglyph_core_inst (
      .clk(clk),
      .en(en),
      .arst_n(arst_n),
      .video_in_rsc_mgc_in_wire_d(video_in_rsc_mgc_in_wire_d),
      .video_out_rsc_mgc_out_stdreg_d(video_out_rsc_mgc_out_stdreg_d),
      .avg_rsc_mgc_in_wire_d(avg_rsc_mgc_in_wire_d),
      .div_mgc_div_b(div_mgc_div_b),
      .div_mgc_div_z(div_mgc_div_z),
      .div_mgc_div_1_b(div_mgc_div_1_b),
      .div_mgc_div_1_z(div_mgc_div_1_z)
    );
endmodule



