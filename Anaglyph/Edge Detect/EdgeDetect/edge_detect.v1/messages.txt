
# Messages from "go new"

Creating project directory 'C:\eie\Anaglyph day\Edge Detect\EdgeDetect'. (PRJ-1)

# Messages from "go analyze"

Front End called with arguments: -- {C:\eie\Anaglyph day\Edge Detect\shift_class.h} {C:\eie\Anaglyph day\Edge Detect\edge_detection.c} {C:\eie\Anaglyph day\Edge Detect\edge.h} (CIN-69)
Edison Design Group C++/C Front End - Version 3.10.1 (CIN-1)
Pragma 'hls_design<top>' detected on routine 'absmax' (CIN-6)
Source file analysis completed (CIN-68)
Starting transformation 'analyze' on solution 'solution.v1' (SOL-8)
Completed transformation 'analyze' on solution 'solution.v1': elapsed time 1.81 seconds, memory usage 243752kB, peak memory usage 329960kB (SOL-9)
$PROJECT_HOME/edge_detection.c(215): last line of file ends without a newline (CRD-1)
          detected during compilation of secondary translation unit "C:\eie\Anaglyph day\Edge Detect\edge_detection.c"

# Messages from "go compile"

Reading component library '$MGC_HOME\pkgs\siflibs\mgc_busdefs.lib' [mgc_busdefs]... (LIB-49)
Reading component library '$MGC_HOME\pkgs\siflibs\stdops.lib' [STDOPS]... (LIB-49)
Reading component library '$MGC_HOME\pkgs\siflibs\mgc_ioport.lib' [mgc_ioport]... (LIB-49)
Reading component library '$MGC_HOME\pkgs\ccs_altera\Altera_accel_CycloneIII.lib' [Altera_accel_CycloneIII]... (LIB-49)
Reading component library '$MGC_HOME\pkgs\siflibs\psr2010a_up2\mgc_Altera-Cyclone-III-6_beh_psr.lib' [mgc_Altera-Cyclone-III-6_beh_psr]... (LIB-49)
Starting transformation 'compile' on solution 'solution.v1' (SOL-8)
Generating synthesis internal form... (CIN-3)
Found top design routine 'edge_detect' specified by directive (CIN-52)
Synthesizing routine 'edge_detect' (CIN-13)
Inlining routine 'edge_detect' (CIN-14)
Inlining member function 'shift_class<ac_int<90, false>, 3>::shift_class' on object 'regs' (CIN-64)
Inlining member function 'shift_class<ac_int<90, false>, 3>::operator<<' on object 'regs' (CIN-64)
Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
Inlining routine 'absmax' (CIN-14)
Inlining routine 'absmax' (CIN-14)
Inlining routine 'absmax' (CIN-14)
Inlining routine 'absmax' (CIN-14)
Optimizing block '/edge_detect' ... (CIN-4)
Inout port 'vin' is only used as an input. (OPT-10)
Inout port 'vout' is only used as an output. (OPT-11)
Loop '/edge_detect/core/RESET' iterated at most 3 times. (LOOP-2)
Loop '/edge_detect/core/SHIFT' iterated at most 3 times. (LOOP-2)
Loop '/edge_detect/core/ACC1' iterated at most 3 times. (LOOP-2)
Loop '/edge_detect/core/ACC2' iterated at most 3 times. (LOOP-2)
Loop '/edge_detect/core/ACC3' iterated at most 3 times. (LOOP-2)
Loop '/edge_detect/core/ACC4' iterated at most 3 times. (LOOP-2)
Loop '/edge_detect/core/FRAME' iterated at most 1 times. (LOOP-2)
Detected constant initialization of array 'rx', optimizing loop 'RESET' (LOOP-12)
Detected constant initialization of array 'gx', optimizing loop 'RESET' (LOOP-12)
Detected constant initialization of array 'bx', optimizing loop 'RESET' (LOOP-12)
Detected constant initialization of array 'ry', optimizing loop 'RESET' (LOOP-12)
Detected constant initialization of array 'gy', optimizing loop 'RESET' (LOOP-12)
Detected constant initialization of array 'by', optimizing loop 'RESET' (LOOP-12)
Design 'edge_detect' was read (SOL-1)
Optimizing partition '/edge_detect': (Total ops = 948, Real ops = 197, Vars = 254) (SOL-10)
Optimizing partition '/edge_detect/core': (Total ops = 948, Real ops = 197, Vars = 252) (SOL-10)
Optimizing partition '/edge_detect/core': (Total ops = 948, Real ops = 197, Vars = 252) (SOL-10)
Optimizing partition '/edge_detect': (Total ops = 948, Real ops = 197, Vars = 254) (SOL-10)
Optimizing partition '/edge_detect': (Total ops = 948, Real ops = 197, Vars = 254) (SOL-10)
Optimizing partition '/edge_detect/core': (Total ops = 948, Real ops = 197, Vars = 252) (SOL-10)
Optimizing partition '/edge_detect/core': (Total ops = 827, Real ops = 194, Vars = 222) (SOL-10)
Optimizing partition '/edge_detect/core': (Total ops = 765, Real ops = 194, Vars = 221) (SOL-10)
Optimizing partition '/edge_detect/core': (Total ops = 765, Real ops = 194, Vars = 221) (SOL-10)
Optimizing partition '/edge_detect': (Total ops = 765, Real ops = 194, Vars = 223) (SOL-10)
Optimizing partition '/edge_detect': (Total ops = 765, Real ops = 194, Vars = 223) (SOL-10)
Optimizing partition '/edge_detect/core': (Total ops = 709, Real ops = 194, Vars = 333) (SOL-10)
Optimizing partition '/edge_detect/core': (Total ops = 756, Real ops = 140, Vars = 26) (SOL-10)
Optimizing partition '/edge_detect': (Total ops = 756, Real ops = 140, Vars = 28) (SOL-10)
Optimizing partition '/edge_detect/core': (Total ops = 756, Real ops = 140, Vars = 26) (SOL-10)
Optimizing partition '/edge_detect': (Total ops = 756, Real ops = 140, Vars = 28) (SOL-10)
Optimizing partition '/edge_detect': (Total ops = 756, Real ops = 140, Vars = 28) (SOL-10)
Optimizing partition '/edge_detect/core': (Total ops = 756, Real ops = 140, Vars = 26) (SOL-10)
Optimizing partition '/edge_detect/core': (Total ops = 510, Real ops = 137, Vars = 25) (SOL-10)
Optimizing partition '/edge_detect/core': (Total ops = 448, Real ops = 123, Vars = 24) (SOL-10)
Optimizing partition '/edge_detect/core': (Total ops = 444, Real ops = 123, Vars = 24) (SOL-10)
Optimizing partition '/edge_detect': (Total ops = 444, Real ops = 123, Vars = 26) (SOL-10)
Optimizing partition '/edge_detect/core': (Total ops = 438, Real ops = 123, Vars = 29) (SOL-10)
Optimizing partition '/edge_detect/core': (Total ops = 434, Real ops = 123, Vars = 24) (SOL-10)
Optimizing partition '/edge_detect': (Total ops = 434, Real ops = 123, Vars = 26) (SOL-10)
Optimizing partition '/edge_detect/core': (Total ops = 434, Real ops = 123, Vars = 24) (SOL-10)
Optimizing partition '/edge_detect': (Total ops = 434, Real ops = 123, Vars = 26) (SOL-10)
Completed transformation 'compile' on solution 'edge_detect.v1': elapsed time 2.17 seconds, memory usage 251072kB, peak memory usage 329960kB (SOL-9)

# Messages from "go architect"

Starting transformation 'architect' on solution 'edge_detect.v1' (SOL-8)
Loop '/edge_detect/core/SHIFT' is left rolled. (LOOP-4)
Loop '/edge_detect/core/ACC1' is left rolled. (LOOP-4)
Loop '/edge_detect/core/ACC2' is left rolled. (LOOP-4)
Loop '/edge_detect/core/ACC3' is left rolled. (LOOP-4)
Loop '/edge_detect/core/ACC4' is left rolled. (LOOP-4)
Loop '/edge_detect/core/main' is left rolled. (LOOP-4)
Loop 'ACC3' is merged and folded into Loop 'ACC2' (LOOP-9)
Optimizing partition '/edge_detect/core': (Total ops = 440, Real ops = 125, Vars = 26) (SOL-10)
Optimizing partition '/edge_detect/core': (Total ops = 438, Real ops = 125, Vars = 26) (SOL-10)
Optimizing partition '/edge_detect/core': (Total ops = 434, Real ops = 123, Vars = 24) (SOL-10)
Optimizing partition '/edge_detect': (Total ops = 434, Real ops = 123, Vars = 29) (SOL-10)
Optimizing partition '/edge_detect/core': (Total ops = 434, Real ops = 123, Vars = 24) (SOL-10)
I/O-Port inferred - resource 'vin:rsc' (from var: vin) mapped to 'mgc_ioport.mgc_in_wire' (size: 90). (MEM-2)
I/O-Port inferred - resource 'vout:rsc' (from var: vout) mapped to 'mgc_ioport.mgc_out_stdreg' (size: 30). (MEM-2)
Optimizing partition '/edge_detect': (Total ops = 436, Real ops = 123, Vars = 29) (SOL-10)
Optimizing partition '/edge_detect/core': (Total ops = 436, Real ops = 123, Vars = 24) (SOL-10)
Optimizing partition '/edge_detect/core': (Total ops = 435, Real ops = 123, Vars = 24) (SOL-10)
Optimizing partition '/edge_detect': (Total ops = 435, Real ops = 123, Vars = 29) (SOL-10)
Optimizing partition '/edge_detect': (Total ops = 428, Real ops = 126, Vars = 46) (SOL-10)
Optimizing partition '/edge_detect/core': (Total ops = 425, Real ops = 126, Vars = 43) (SOL-10)
Optimizing partition '/edge_detect/core': (Total ops = 404, Real ops = 125, Vars = 33) (SOL-10)
Optimizing partition '/edge_detect': (Total ops = 404, Real ops = 125, Vars = 38) (SOL-10)
Optimizing partition '/edge_detect/core': (Total ops = 404, Real ops = 125, Vars = 33) (SOL-10)
Optimizing partition '/edge_detect': (Total ops = 404, Real ops = 125, Vars = 38) (SOL-10)
Design 'edge_detect' contains '266' real operations. (SOL-11)
Optimizing partition '/edge_detect/core': (Total ops = 414, Real ops = 125, Vars = 37) (SOL-10)
Optimizing partition '/edge_detect/core': (Total ops = 570, Real ops = 125, Vars = 37) (SOL-10)
Optimizing partition '/edge_detect/core': (Total ops = 402, Real ops = 124, Vars = 37) (SOL-10)
Optimizing partition '/edge_detect/core': (Total ops = 1093, Real ops = 302, Vars = 441) (SOL-10)
Optimizing partition '/edge_detect/core': (Total ops = 646, Real ops = 236, Vars = 143) (SOL-10)
Optimizing partition '/edge_detect/core': (Total ops = 645, Real ops = 236, Vars = 142) (SOL-10)
Completed transformation 'architect' on solution 'edge_detect.v1': elapsed time 3.99 seconds, memory usage 251532kB, peak memory usage 329960kB (SOL-9)

# Messages from "go allocate"

Performing concurrent resource allocation and scheduling on '/edge_detect/core' (CRAAS-1)
Prescheduled LOOP 'main' (3 c-steps) (SCHD-7)
Prescheduled LOOP 'core:rlp' (0 c-steps) (SCHD-7)
Prescheduled SEQUENTIAL 'core' (total length 3 c-steps) (SCHD-8)
At least one feasible schedule exists. (CRAAS-9)
Resource allocation and scheduling done. (CRAAS-2)
Netlist written to file 'schedule.gnt' (NET-4)
Starting transformation 'allocate' on solution 'edge_detect.v1' (SOL-8)
Select qualified components for data operations ... (CRAAS-3)
Apply resource constraints on data operations ... (CRAAS-4)
Initial schedule of SEQUENTIAL 'core': Latency = 13, Area (Datapath, Register, Total) = 2814.12, 0.00, 2814.12 (CRAAS-11)
Optimized LOOP 'main': Latency = 13, Area (Datapath, Register, Total) = 2811.85, 0.00, 2811.85 (CRAAS-10)
Optimized LOOP 'main': Latency = 13, Area (Datapath, Register, Total) = 2805.97, 0.00, 2805.97 (CRAAS-10)
Optimized LOOP 'main': Latency = 13, Area (Datapath, Register, Total) = 2803.45, 0.00, 2803.45 (CRAAS-10)
Final schedule of SEQUENTIAL 'core': Latency = 13, Area (Datapath, Register, Total) = 2803.45, 0.00, 2803.45 (CRAAS-12)
Completed transformation 'allocate' on solution 'edge_detect.v1': elapsed time 1.12 seconds, memory usage 251668kB, peak memory usage 329960kB (SOL-9)

# Messages from "go schedule"

Performing concurrent resource allocation and scheduling on '/edge_detect/core' (CRAAS-1)
Global signal 'vin:rsc.z' added to design 'edge_detect' for component 'vin:rsc:mgc_in_wire' (LIB-3)
Global signal 'vout:rsc.z' added to design 'edge_detect' for component 'vout:rsc:mgc_out_stdreg' (LIB-3)
Netlist written to file 'cycle.v' (NET-4)
Starting transformation 'schedule' on solution 'edge_detect.v1' (SOL-8)
Optimizing partition '/edge_detect': (Total ops = 917, Real ops = 267, Vars = 270) (SOL-10)
Optimizing partition '/edge_detect/edge_detect:core': (Total ops = 907, Real ops = 266, Vars = 262) (SOL-10)
Optimizing partition '/edge_detect/edge_detect:core/core': (Total ops = 1067, Real ops = 403, Vars = 412) (SOL-10)
Optimizing partition '/edge_detect/edge_detect:core/core': (Total ops = 892, Real ops = 320, Vars = 273) (SOL-10)
Optimizing partition '/edge_detect/edge_detect:core/core': (Total ops = 894, Real ops = 322, Vars = 275) (SOL-10)
Optimizing partition '/edge_detect': (Total ops = 908, Real ops = 322, Vars = 287) (SOL-10)
Optimizing partition '/edge_detect/edge_detect:core': (Total ops = 899, Real ops = 322, Vars = 280) (SOL-10)
Optimizing partition '/edge_detect/edge_detect:core/core': (Total ops = 891, Real ops = 322, Vars = 277) (SOL-10)
Optimizing partition '/edge_detect/edge_detect:core/core': (Total ops = 891, Real ops = 322, Vars = 275) (SOL-10)
Optimizing partition '/edge_detect': (Total ops = 905, Real ops = 322, Vars = 287) (SOL-10)
Optimizing partition '/edge_detect/edge_detect:core': (Total ops = 896, Real ops = 322, Vars = 280) (SOL-10)
Optimizing partition '/edge_detect/edge_detect:core/core': (Total ops = 891, Real ops = 322, Vars = 275) (SOL-10)
Optimizing partition '/edge_detect': (Total ops = 905, Real ops = 322, Vars = 287) (SOL-10)
Optimizing partition '/edge_detect/edge_detect:core': (Total ops = 896, Real ops = 322, Vars = 280) (SOL-10)
Completed transformation 'schedule' on solution 'edge_detect.v1': elapsed time 5.04 seconds, memory usage 258444kB, peak memory usage 329960kB (SOL-9)
Cannot build distributed pipeline in process 'core' because of missing handshake for resource 'vout:rsc' (SCHD-15)

# Messages from "go dpfsm"

Performing FSM extraction... (FSM-1)
Starting transformation 'dpfsm' on solution 'edge_detect.v1' (SOL-8)
Optimizing partition '/edge_detect': (Total ops = 1150, Real ops = 435, Vars = 1191) (SOL-10)
Optimizing partition '/edge_detect/edge_detect:core': (Total ops = 1141, Real ops = 435, Vars = 1184) (SOL-10)
Optimizing partition '/edge_detect': (Total ops = 1309, Real ops = 424, Vars = 187) (SOL-10)
Optimizing partition '/edge_detect/edge_detect:core': (Total ops = 1300, Real ops = 424, Vars = 180) (SOL-10)
Optimizing partition '/edge_detect': (Total ops = 784, Real ops = 398, Vars = 185) (SOL-10)
Optimizing partition '/edge_detect/edge_detect:core': (Total ops = 775, Real ops = 398, Vars = 178) (SOL-10)
Optimizing partition '/edge_detect': (Total ops = 784, Real ops = 398, Vars = 185) (SOL-10)
Optimizing partition '/edge_detect/edge_detect:core': (Total ops = 775, Real ops = 398, Vars = 178) (SOL-10)
Optimizing partition '/edge_detect/edge_detect:core': (Total ops = 775, Real ops = 398, Vars = 178) (SOL-10)
Optimizing partition '/edge_detect': (Total ops = 784, Real ops = 398, Vars = 185) (SOL-10)
Optimizing partition '/edge_detect': (Total ops = 784, Real ops = 398, Vars = 185) (SOL-10)
Optimizing partition '/edge_detect/edge_detect:core': (Total ops = 775, Real ops = 398, Vars = 178) (SOL-10)
Optimizing partition '/edge_detect': (Total ops = 873, Real ops = 468, Vars = 282) (SOL-10)
Optimizing partition '/edge_detect/edge_detect:core': (Total ops = 864, Real ops = 468, Vars = 275) (SOL-10)
Optimizing partition '/edge_detect': (Total ops = 808, Real ops = 418, Vars = 200) (SOL-10)
Optimizing partition '/edge_detect/edge_detect:core': (Total ops = 799, Real ops = 418, Vars = 193) (SOL-10)
Optimizing partition '/edge_detect': (Total ops = 811, Real ops = 419, Vars = 196) (SOL-10)
Optimizing partition '/edge_detect/edge_detect:core': (Total ops = 802, Real ops = 419, Vars = 189) (SOL-10)
Optimizing partition '/edge_detect': (Total ops = 807, Real ops = 416, Vars = 191) (SOL-10)
Optimizing partition '/edge_detect/edge_detect:core': (Total ops = 798, Real ops = 416, Vars = 184) (SOL-10)
Optimizing partition '/edge_detect': (Total ops = 806, Real ops = 415, Vars = 191) (SOL-10)
Optimizing partition '/edge_detect/edge_detect:core': (Total ops = 797, Real ops = 415, Vars = 184) (SOL-10)
Completed transformation 'dpfsm' on solution 'edge_detect.v1': elapsed time 1.79 seconds, memory usage 258576kB, peak memory usage 329960kB (SOL-9)

# Messages from "go extract"

Netlist written to file 'schematic.nlv' (NET-4)
Starting transformation 'extract' on solution 'edge_detect.v1' (SOL-8)
Optimizing partition '/edge_detect': (Total ops = 834, Real ops = 432, Vars = 831) (SOL-10)
Optimizing partition '/edge_detect/edge_detect:core': (Total ops = 825, Real ops = 432, Vars = 824) (SOL-10)
Optimizing partition '/edge_detect': (Total ops = 780, Real ops = 407, Vars = 189) (SOL-10)
Optimizing partition '/edge_detect/edge_detect:core': (Total ops = 771, Real ops = 407, Vars = 182) (SOL-10)
Optimizing partition '/edge_detect': (Total ops = 780, Real ops = 407, Vars = 189) (SOL-10)
Optimizing partition '/edge_detect/edge_detect:core': (Total ops = 771, Real ops = 407, Vars = 182) (SOL-10)
Optimizing partition '/edge_detect/edge_detect:core': (Total ops = 771, Real ops = 407, Vars = 182) (SOL-10)
Optimizing partition '/edge_detect': (Total ops = 780, Real ops = 407, Vars = 189) (SOL-10)
Optimizing partition '/edge_detect': (Total ops = 780, Real ops = 407, Vars = 189) (SOL-10)
Optimizing partition '/edge_detect/edge_detect:core': (Total ops = 771, Real ops = 407, Vars = 182) (SOL-10)
Optimizing partition '/edge_detect': (Total ops = 780, Real ops = 407, Vars = 189) (SOL-10)
Optimizing partition '/edge_detect/edge_detect:core': (Total ops = 771, Real ops = 407, Vars = 182) (SOL-10)
Optimizing partition '/edge_detect': (Total ops = 810, Real ops = 425, Vars = 807) (SOL-10)
Optimizing partition '/edge_detect/edge_detect:core': (Total ops = 801, Real ops = 425, Vars = 800) (SOL-10)
Reassigned operation FRAME:avg:acc#14:mgc_Altera-Cyclone-III-6_beh_psr.mgc_add(6,0,6,0,7) to mgc_Altera-Cyclone-III-6_beh_psr.mgc_add(5,0,4,0,5) (ASG-1)
Reassigned operation ACC4:acc:mgc_Altera-Cyclone-III-6_beh_psr.mgc_add(3,0,3,0,3) to mgc_Altera-Cyclone-III-6_beh_psr.mgc_add(2,0,1,0,2) (ASG-1)
Reassigned operation ACC2:acc:mgc_Altera-Cyclone-III-6_beh_psr.mgc_add(3,0,3,0,3) to mgc_Altera-Cyclone-III-6_beh_psr.mgc_add(2,0,1,0,2) (ASG-1)
Reassigned operation ACC3:acc:mgc_Altera-Cyclone-III-6_beh_psr.mgc_add(3,0,3,0,3) to mgc_Altera-Cyclone-III-6_beh_psr.mgc_add(2,0,1,0,2) (ASG-1)
Reassigned operation ACC1:acc:mgc_Altera-Cyclone-III-6_beh_psr.mgc_add(3,0,3,0,3) to mgc_Altera-Cyclone-III-6_beh_psr.mgc_add(2,0,1,0,2) (ASG-1)
Netlist written to file 'rtl.v' (NET-4)
Optimizing partition '/edge_detect': (Total ops = 810, Real ops = 425, Vars = 807) (SOL-10)
Optimizing partition '/edge_detect/edge_detect:core': (Total ops = 801, Real ops = 425, Vars = 800) (SOL-10)
Optimizing partition '/edge_detect': (Total ops = 759, Real ops = 407, Vars = 189) (SOL-10)
Optimizing partition '/edge_detect/edge_detect:core': (Total ops = 750, Real ops = 407, Vars = 182) (SOL-10)
Optimizing partition '/edge_detect': (Total ops = 759, Real ops = 407, Vars = 189) (SOL-10)
Optimizing partition '/edge_detect/edge_detect:core': (Total ops = 750, Real ops = 407, Vars = 182) (SOL-10)
Completed transformation 'extract' on solution 'edge_detect.v1': elapsed time 3.82 seconds, memory usage 258668kB, peak memory usage 329960kB (SOL-9)
