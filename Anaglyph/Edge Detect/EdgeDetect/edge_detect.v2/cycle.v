// ----------------------------------------------------------------------
//  HLS HDL:        Verilog Netlister
//  HLS Version:    2011a.126 Production Release
//  HLS Date:       Wed Aug  8 00:52:07 PDT 2012
// 
//  Generated by:   jb914@EEWS104A-029
//  Generated date: Mon May 11 14:45:14 2015
// ----------------------------------------------------------------------

// 
// ------------------------------------------------------------------
//  Design Unit:    edge_detect_core
// ------------------------------------------------------------------


module edge_detect_core (
  clk, en, arst_n, vin_rsc_mgc_in_wire_d, vout_rsc_mgc_out_stdreg_d
);
  input clk;
  input en;
  input arst_n;
  input [89:0] vin_rsc_mgc_in_wire_d;
  output [9:0] vout_rsc_mgc_out_stdreg_d;
  reg [9:0] vout_rsc_mgc_out_stdreg_d;



  // Interconnect Declarations for Component Instantiations 
  always @(*)
  begin : core
    // Interconnect Declarations
    reg [15:0] red_lpi_1;
    reg [15:0] green_lpi_1;
    reg [15:0] blue_lpi_1;
    reg exit_ACC2_lpi_1;
    reg exit_ACC1_lpi_1;
    reg exit_SHIFT_lpi_1;
    reg [1:0] i_5_lpi_1;
    reg [1:0] i_7_lpi_1;
    reg [1:0] i_8_lpi_1;
    reg [1:0] i_6_lpi_1;
    reg exit_ACC4_sva;
    reg [89:0] regs_operator_din_sva;
    reg [15:0] red_lpi_1_dfm;
    reg [15:0] green_lpi_1_dfm;
    reg [15:0] blue_lpi_1_dfm;
    reg exit_ACC2_lpi_1_dfm;
    reg exit_ACC1_lpi_1_dfm;
    reg exit_SHIFT_lpi_1_dfm;
    reg [15:0] red_sva_1;
    reg [15:0] green_sva_1;
    reg [15:0] blue_sva_1;
    reg [1:0] i_5_sva;
    reg exit_ACC4_sva_2;
    reg absmax_slc_svs;
    reg absmax_else_slc_svs;
    reg [15:0] absmax_absmax_return_sva_2;
    reg absmax_1_slc_svs;
    reg absmax_1_else_slc_svs;
    reg [15:0] absmax_absmax_return_1_sva_2;
    reg absmax_2_slc_svs;
    reg absmax_2_else_slc_svs;
    reg [15:0] absmax_absmax_return_2_sva_2;
    reg [16:0] acc_psp_sva;
    reg [4:0] acc_imod_sva;
    reg [2:0] acc_imod_1_sva;
    reg [15:0] FRAME_avg_sva;
    reg absmax_3_slc_svs;
    reg absmax_3_else_slc_svs;
    reg [9:0] absmax_absmax_return_4_sva_2;
    reg [15:0] red_sva_2;
    reg [15:0] green_sva_2;
    reg [15:0] blue_sva_2;
    reg [1:0] i_7_sva;
    reg [15:0] ry_0_sva_1;
    reg [15:0] gy_0_sva_1;
    reg [15:0] by_0_sva_1;
    reg [15:0] ry_2_sva_1;
    reg [15:0] gy_2_sva_1;
    reg [15:0] by_2_sva_1;
    reg equal_tmp;
    reg equal_tmp_1;
    reg [15:0] ry_0_sva_3;
    reg [15:0] gy_0_sva_3;
    reg [15:0] by_0_sva_3;
    reg [15:0] ry_2_sva_3;
    reg [15:0] gy_2_sva_3;
    reg [15:0] by_2_sva_3;
    reg nor_tmp;
    reg [1:0] i_8_sva;
    reg exit_ACC2_sva_1;
    reg [1:0] i_5_lpi_1_dfm;
    reg [15:0] rx_0_sva_1;
    reg [15:0] gx_0_sva_1;
    reg [15:0] bx_0_sva_1;
    reg [15:0] rx_2_sva_1;
    reg [15:0] gx_2_sva_1;
    reg [15:0] bx_2_sva_1;
    reg equal_tmp_2;
    reg equal_tmp_3;
    reg [15:0] rx_0_sva_3;
    reg [15:0] gx_0_sva_3;
    reg [15:0] bx_0_sva_3;
    reg [15:0] rx_2_sva_3;
    reg [15:0] gx_2_sva_3;
    reg [15:0] bx_2_sva_3;
    reg nor_tmp_1;
    reg [1:0] i_6_sva;
    reg exit_ACC1_sva_1;
    reg [1:0] i_7_lpi_1_dfm_1;
    reg [1:0] i_8_lpi_1_dfm_1;
    reg unequal_tmp;
    reg [1:0] i_6_lpi_1_dfm_1;
    reg [1:0] SHIFT_acc_1_psp;
    reg SHIFT_nand_tmp;
    reg SHIFT_and_26_m1c;
    reg exit_ACC1_lpi_1_dfm_st;
    reg exit_ACC2_lpi_1_dfm_st;
    reg exit_ACC4_sva_2_st;
    reg [2:0] FRAME_avg_slc_10_itm;
    reg [2:0] FRAME_avg_slc_10_itm_1;
    reg FRAME_avg_slc_acc_imod_itm;
    reg FRAME_avg_slc_acc_imod_itm_1;
    reg [15:0] FRAME_avg_acc_25_itm;
    reg [15:0] FRAME_avg_acc_25_itm_1;
    reg FRAME_avg_slc_acc_idiv_85_itm;
    reg FRAME_avg_slc_acc_idiv_85_itm_1;
    reg FRAME_avg_slc_acc_idiv_86_itm;
    reg FRAME_avg_slc_acc_idiv_86_itm_1;
    reg FRAME_avg_slc_acc_idiv_87_itm;
    reg FRAME_avg_slc_acc_idiv_87_itm_1;
    reg FRAME_avg_slc_acc_idiv_88_itm;
    reg FRAME_avg_slc_acc_idiv_88_itm_1;
    reg FRAME_avg_slc_acc_idiv_89_itm;
    reg FRAME_avg_slc_acc_idiv_89_itm_1;
    reg FRAME_avg_slc_acc_idiv_90_itm;
    reg FRAME_avg_slc_acc_idiv_90_itm_1;
    reg FRAME_avg_slc_acc_idiv_49_itm;
    reg FRAME_avg_slc_acc_idiv_49_itm_1;
    reg FRAME_avg_slc_acc_idiv_75_itm;
    reg FRAME_avg_slc_acc_idiv_75_itm_1;
    reg FRAME_avg_slc_acc_idiv_76_itm;
    reg FRAME_avg_slc_acc_idiv_76_itm_1;
    reg FRAME_avg_slc_acc_idiv_77_itm;
    reg FRAME_avg_slc_acc_idiv_77_itm_1;
    reg FRAME_avg_slc_acc_idiv_78_itm;
    reg FRAME_avg_slc_acc_idiv_78_itm_1;
    reg FRAME_avg_slc_acc_idiv_79_itm;
    reg FRAME_avg_slc_acc_idiv_79_itm_1;
    reg FRAME_avg_slc_acc_idiv_47_itm;
    reg FRAME_avg_slc_acc_idiv_47_itm_1;
    reg FRAME_avg_slc_acc_idiv_67_itm;
    reg FRAME_avg_slc_acc_idiv_67_itm_1;
    reg FRAME_avg_slc_acc_idiv_68_itm;
    reg FRAME_avg_slc_acc_idiv_68_itm_1;
    reg FRAME_avg_slc_acc_idiv_69_itm;
    reg FRAME_avg_slc_acc_idiv_69_itm_1;
    reg FRAME_avg_slc_acc_idiv_70_itm;
    reg FRAME_avg_slc_acc_idiv_70_itm_1;
    reg FRAME_avg_slc_acc_idiv_45_itm;
    reg FRAME_avg_slc_acc_idiv_45_itm_1;
    reg FRAME_avg_slc_acc_idiv_61_itm;
    reg FRAME_avg_slc_acc_idiv_61_itm_1;
    reg FRAME_avg_slc_acc_idiv_62_itm;
    reg FRAME_avg_slc_acc_idiv_62_itm_1;
    reg FRAME_avg_slc_acc_idiv_63_itm;
    reg FRAME_avg_slc_acc_idiv_63_itm_1;
    reg FRAME_avg_slc_acc_idiv_43_itm;
    reg FRAME_avg_slc_acc_idiv_43_itm_1;
    reg [5:0] FRAME_avg_slc_13_itm;
    reg [5:0] FRAME_avg_slc_13_itm_1;
    reg FRAME_avg_slc_acc_idiv_80_itm;
    reg FRAME_avg_slc_acc_idiv_80_itm_1;
    reg FRAME_avg_slc_acc_idiv_81_itm;
    reg FRAME_avg_slc_acc_idiv_81_itm_1;
    reg FRAME_avg_slc_acc_idiv_82_itm;
    reg FRAME_avg_slc_acc_idiv_82_itm_1;
    reg FRAME_avg_slc_acc_idiv_83_itm;
    reg FRAME_avg_slc_acc_idiv_83_itm_1;
    reg FRAME_avg_slc_acc_idiv_84_itm;
    reg FRAME_avg_slc_acc_idiv_84_itm_1;
    reg FRAME_avg_slc_acc_idiv_48_itm;
    reg FRAME_avg_slc_acc_idiv_48_itm_1;
    reg FRAME_avg_slc_acc_idiv_71_itm;
    reg FRAME_avg_slc_acc_idiv_71_itm_1;
    reg FRAME_avg_slc_acc_idiv_72_itm;
    reg FRAME_avg_slc_acc_idiv_72_itm_1;
    reg FRAME_avg_slc_acc_idiv_73_itm;
    reg FRAME_avg_slc_acc_idiv_73_itm_1;
    reg FRAME_avg_slc_acc_idiv_74_itm;
    reg FRAME_avg_slc_acc_idiv_74_itm_1;
    reg FRAME_avg_slc_acc_idiv_46_itm;
    reg FRAME_avg_slc_acc_idiv_46_itm_1;
    reg FRAME_avg_slc_acc_idiv_64_itm;
    reg FRAME_avg_slc_acc_idiv_64_itm_1;
    reg FRAME_avg_slc_acc_idiv_65_itm;
    reg FRAME_avg_slc_acc_idiv_65_itm_1;
    reg FRAME_avg_slc_acc_idiv_66_itm;
    reg FRAME_avg_slc_acc_idiv_66_itm_1;
    reg FRAME_avg_slc_acc_idiv_44_itm;
    reg FRAME_avg_slc_acc_idiv_44_itm_1;
    reg FRAME_avg_slc_acc_idiv_59_itm;
    reg FRAME_avg_slc_acc_idiv_59_itm_1;
    reg FRAME_avg_slc_acc_idiv_60_itm;
    reg FRAME_avg_slc_acc_idiv_60_itm_1;
    reg FRAME_avg_slc_acc_idiv_42_itm;
    reg FRAME_avg_slc_acc_idiv_42_itm_1;
    reg FRAME_avg_slc_acc_imod_7_itm;
    reg FRAME_avg_slc_acc_imod_7_itm_1;
    reg exit_SHIFT_lpi_1_dfm_st_1;
    reg exit_ACC1_lpi_1_dfm_st_1;
    reg exit_ACC2_lpi_1_dfm_st_1;
    reg exit_ACC4_sva_2_st_1;
    reg main_stage_0_2;
    reg [14:0] by_0_lpi_1_sg1;
    reg by_0_lpi_3;
    reg [14:0] by_2_lpi_1_sg1;
    reg by_2_lpi_3;
    reg [14:0] gy_0_lpi_1_sg1;
    reg gy_0_lpi_3;
    reg [14:0] gy_2_lpi_1_sg1;
    reg gy_2_lpi_3;
    reg SHIFT_or_ssc;
    reg ACC2_and_1_ssc;
    reg ACC2_and_2_ssc;
    reg ACC2_and_3_ssc;
    reg [14:0] ry_0_lpi_1_sg1;
    reg ry_0_lpi_3;
    reg [14:0] ry_2_lpi_1_sg1;
    reg ry_2_lpi_3;
    reg [14:0] bx_0_lpi_1_sg1;
    reg bx_0_lpi_3;
    reg [14:0] bx_2_lpi_1_sg1;
    reg bx_2_lpi_3;
    reg [14:0] gx_0_lpi_1_sg1;
    reg gx_0_lpi_3;
    reg [14:0] gx_2_lpi_1_sg1;
    reg gx_2_lpi_3;
    reg SHIFT_nand_16_ssc;
    reg ACC1_and_13_ssc;
    reg ACC1_and_14_ssc;
    reg ACC1_and_15_ssc;
    reg [14:0] rx_0_lpi_1_sg1;
    reg rx_0_lpi_3;
    reg [14:0] rx_2_lpi_1_sg1;
    reg rx_2_lpi_3;
    reg [1:0] SHIFT_i_1_lpi_3;
    reg SHIFT_and_44_ssc;
    reg [29:0] regs_regs_1_sva_sg2;
    reg [29:0] regs_regs_1_sva_2;
    reg SHIFT_or_7_ssc;
    reg [29:0] regs_regs_0_sva_sg2;
    reg [29:0] regs_regs_0_sva_2;
    reg SHIFT_and_45_ssc;
    reg [29:0] regs_regs_2_sva_sg2;
    reg [29:0] regs_regs_2_sva_2;
    reg [14:0] rx_0_lpi_1_dfm_sg1;
    reg rx_0_lpi_1_dfm_4;
    reg [14:0] rx_2_lpi_1_dfm_sg1;
    reg rx_2_lpi_1_dfm_4;
    reg [14:0] gx_0_lpi_1_dfm_sg1;
    reg gx_0_lpi_1_dfm_4;
    reg [14:0] gx_2_lpi_1_dfm_sg1;
    reg gx_2_lpi_1_dfm_4;
    reg [14:0] bx_0_lpi_1_dfm_sg1;
    reg bx_0_lpi_1_dfm_4;
    reg [14:0] bx_2_lpi_1_dfm_sg1;
    reg bx_2_lpi_1_dfm_4;
    reg [14:0] ry_0_lpi_1_dfm_sg1;
    reg ry_0_lpi_1_dfm_5;
    reg [14:0] ry_2_lpi_1_dfm_sg1;
    reg ry_2_lpi_1_dfm_5;
    reg [14:0] gy_0_lpi_1_dfm_sg1;
    reg gy_0_lpi_1_dfm_5;
    reg [14:0] gy_2_lpi_1_dfm_sg1;
    reg gy_2_lpi_1_dfm_5;
    reg [14:0] by_0_lpi_1_dfm_sg1;
    reg by_0_lpi_1_dfm_5;
    reg [14:0] by_2_lpi_1_dfm_sg1;
    reg by_2_lpi_1_dfm_5;
    reg [29:0] regs_operator_din_lpi_1_dfm_sg2;
    reg [29:0] regs_operator_din_lpi_1_dfm_1;
    reg [1:0] SHIFT_i_1_lpi_1_dfm_2;
    reg [14:0] ry_0_sva_2_sg1;
    reg [14:0] gy_0_sva_2_sg1;
    reg [14:0] by_0_sva_2_sg1;
    reg [14:0] ry_2_sva_2_sg1;
    reg [14:0] gy_2_sva_2_sg1;
    reg [14:0] by_2_sva_2_sg1;
    reg [14:0] rx_0_sva_2_sg1;
    reg [14:0] gx_0_sva_2_sg1;
    reg [14:0] bx_0_sva_2_sg1;
    reg [14:0] rx_2_sva_2_sg1;
    reg [14:0] gx_2_sva_2_sg1;
    reg [14:0] bx_2_sva_2_sg1;
    reg [29:0] SHIFT_if_else_else_else_slc_regs_regs_ctmp_sva_sg2;
    reg [29:0] SHIFT_if_else_else_else_slc_regs_regs_ctmp_sva_1;
    reg ACC1_and_7_cse;
    reg ACC1_and_8_cse;
    reg SHIFT_and_42_cse;
    reg SHIFT_nand_12_cse;
    reg SHIFT_or_19_cse;
    reg SHIFT_or_25_cse;
    reg [3:0] FRAME_avg_slc_14_itm_2;
    reg [3:0] FRAME_avg_slc_14_itm_3;

    reg[9:0] absmax_3_else_mux_nl;
    reg[14:0] ACC4_mux_nl;
    reg[0:0] ACC4_mux_10_nl;
    reg[14:0] ACC4_mux_8_nl;
    reg[0:0] ACC4_mux_11_nl;
    reg[14:0] ACC4_mux_9_nl;
    reg[0:0] ACC4_mux_12_nl;
    reg[15:0] absmax_1_mux1h_nl;
    reg[15:0] absmax_2_mux1h_nl;
    reg[15:0] absmax_mux1h_nl;
    reg[14:0] ACC2_mux_nl;
    reg[0:0] ACC2_mux_25_nl;
    reg[14:0] ACC2_mux_23_nl;
    reg[0:0] ACC2_mux_26_nl;
    reg[14:0] ACC2_mux_24_nl;
    reg[0:0] ACC2_mux_27_nl;
    reg[0:0] ACC1_mux_28_nl;
    reg[0:0] ACC2_mux_20_nl;
    reg[0:0] ACC1_mux_29_nl;
    begin : core_rlpExit
      forever begin : core_rlp
        // C-Step 0 of Loop 'core_rlp'
        i_6_lpi_1 = 2'b0;
        i_8_lpi_1 = 2'b0;
        i_7_lpi_1 = 2'b0;
        i_5_lpi_1 = 2'b0;
        exit_SHIFT_lpi_1 = 1'b0;
        exit_ACC1_lpi_1 = 1'b0;
        exit_ACC2_lpi_1 = 1'b0;
        SHIFT_i_1_lpi_3 = 2'b0;
        rx_2_lpi_3 = 1'b0;
        rx_2_lpi_1_sg1 = 15'b0;
        rx_0_lpi_3 = 1'b0;
        rx_0_lpi_1_sg1 = 15'b0;
        gx_2_lpi_3 = 1'b0;
        gx_2_lpi_1_sg1 = 15'b0;
        gx_0_lpi_3 = 1'b0;
        gx_0_lpi_1_sg1 = 15'b0;
        bx_2_lpi_3 = 1'b0;
        bx_2_lpi_1_sg1 = 15'b0;
        bx_0_lpi_3 = 1'b0;
        bx_0_lpi_1_sg1 = 15'b0;
        ry_2_lpi_3 = 1'b0;
        ry_2_lpi_1_sg1 = 15'b0;
        ry_0_lpi_3 = 1'b0;
        ry_0_lpi_1_sg1 = 15'b0;
        gy_2_lpi_3 = 1'b0;
        gy_2_lpi_1_sg1 = 15'b0;
        gy_0_lpi_3 = 1'b0;
        gy_0_lpi_1_sg1 = 15'b0;
        by_2_lpi_3 = 1'b0;
        by_2_lpi_1_sg1 = 15'b0;
        by_0_lpi_3 = 1'b0;
        by_0_lpi_1_sg1 = 15'b0;
        blue_lpi_1 = 16'b0;
        green_lpi_1 = 16'b0;
        red_lpi_1 = 16'b0;
        regs_regs_1_sva_2 = 30'b0;
        regs_regs_1_sva_sg2 = 30'b0;
        regs_regs_0_sva_2 = 30'b0;
        regs_regs_0_sva_sg2 = 30'b0;
        regs_regs_2_sva_2 = 30'b0;
        regs_regs_2_sva_sg2 = 30'b0;
        exit_ACC4_sva = 1'b1;
        main_stage_0_2 = 1'b0;
        begin : mainExit
          forever begin : main
            // C-Step 0 of Loop 'main'
            begin : waitLoop0Exit
              forever begin : waitLoop0
                @(posedge clk or negedge ( arst_n ));
                if ( ~ arst_n )
                  disable core_rlpExit;
                if ( en )
                  disable waitLoop0Exit;
              end
            end
            // C-Step 1 of Loop 'main'
            if ( main_stage_0_2 ) begin
              absmax_absmax_return_4_sva_2 = 10'b0;
              if ( exit_SHIFT_lpi_1_dfm_st_1 ) begin
                if ( exit_ACC1_lpi_1_dfm_st_1 ) begin
                  if ( exit_ACC2_lpi_1_dfm_st_1 ) begin
                    if ( exit_ACC4_sva_2_st_1 ) begin
                      acc_imod_1_sva = FRAME_avg_slc_10_itm_1 + ({2'b10 , FRAME_avg_slc_acc_imod_itm_1});
                      FRAME_avg_sva = FRAME_avg_acc_25_itm_1 + conv_s2u_15_16(conv_u2s_13_15({FRAME_avg_slc_acc_idiv_85_itm_1
                          , (conv_u2u_9_12({FRAME_avg_slc_acc_idiv_76_itm_1 , 1'b0
                          , FRAME_avg_slc_acc_idiv_88_itm_1 , 1'b0 , FRAME_avg_slc_acc_idiv_89_itm_1
                          , 1'b0 , FRAME_avg_slc_acc_idiv_90_itm_1 , 1'b0 , FRAME_avg_slc_acc_idiv_49_itm_1})
                          + conv_u2u_11_12({FRAME_avg_slc_acc_idiv_86_itm_1 , 1'b0
                          , FRAME_avg_slc_acc_idiv_67_itm_1 , (readslicef_9_8_1((conv_u2u_8_9({FRAME_avg_slc_acc_idiv_68_itm_1
                          , 1'b0 , FRAME_avg_slc_acc_idiv_69_itm_1 , 1'b0 , FRAME_avg_slc_acc_idiv_70_itm_1
                          , 1'b0 , FRAME_avg_slc_acc_idiv_45_itm_1 , 1'b1}) + conv_u2u_8_9({(readslicef_8_7_1((({FRAME_avg_slc_acc_idiv_61_itm_1
                          , 1'b0 , FRAME_avg_slc_acc_idiv_62_itm_1 , 1'b0 , FRAME_avg_slc_acc_idiv_63_itm_1
                          , 1'b0 , FRAME_avg_slc_acc_idiv_43_itm_1 , 1'b1}) + conv_u2u_7_8({FRAME_avg_slc_13_itm_1
                          , (acc_imod_1_sva[1])})))) , (~ (readslicef_3_1_2((({1'b1
                          , (acc_imod_1_sva[0]) , 1'b1}) + conv_u2s_2_3({(~ (acc_imod_1_sva[1]))
                          , (~ (acc_imod_1_sva[2]))})))))}))))}) + conv_u2u_11_12({FRAME_avg_slc_acc_idiv_75_itm_1
                          , 1'b0 , FRAME_avg_slc_acc_idiv_87_itm_1 , 1'b0 , FRAME_avg_slc_acc_idiv_77_itm_1
                          , 1'b0 , FRAME_avg_slc_acc_idiv_78_itm_1 , 1'b0 , FRAME_avg_slc_acc_idiv_79_itm_1
                          , 1'b0 , FRAME_avg_slc_acc_idiv_47_itm_1}))}) + conv_s2s_13_15(conv_u2s_12_13({FRAME_avg_slc_acc_idiv_80_itm_1
                          , 1'b0 , FRAME_avg_slc_acc_idiv_81_itm_1 , 1'b0 , FRAME_avg_slc_acc_idiv_82_itm_1
                          , 1'b0 , FRAME_avg_slc_acc_idiv_83_itm_1 , 1'b0 , FRAME_avg_slc_acc_idiv_84_itm_1
                          , 1'b0 , ({{1{FRAME_avg_slc_acc_idiv_48_itm_1}}, FRAME_avg_slc_acc_idiv_48_itm_1})})
                          + conv_s2s_11_13(conv_u2s_10_11({FRAME_avg_slc_acc_idiv_71_itm_1
                          , 1'b0 , FRAME_avg_slc_acc_idiv_72_itm_1 , 1'b0 , FRAME_avg_slc_acc_idiv_73_itm_1
                          , 1'b0 , FRAME_avg_slc_acc_idiv_74_itm_1 , 1'b0 , ({{1{FRAME_avg_slc_acc_idiv_46_itm_1}},
                          FRAME_avg_slc_acc_idiv_46_itm_1})}) + conv_s2s_9_11(readslicef_10_9_1((conv_u2s_9_10({FRAME_avg_slc_acc_idiv_64_itm_1
                          , 1'b0 , FRAME_avg_slc_acc_idiv_65_itm_1 , 1'b0 , FRAME_avg_slc_acc_idiv_66_itm_1
                          , 1'b0 , ({{1{FRAME_avg_slc_acc_idiv_44_itm_1}}, FRAME_avg_slc_acc_idiv_44_itm_1})
                          , 1'b1}) + conv_s2s_8_10({(readslicef_8_7_1((conv_u2s_7_8({FRAME_avg_slc_acc_idiv_59_itm_1
                          , 1'b0 , FRAME_avg_slc_acc_idiv_60_itm_1 , 1'b0 , ({{1{FRAME_avg_slc_acc_idiv_42_itm_1}},
                          FRAME_avg_slc_acc_idiv_42_itm_1}) , 1'b1}) + conv_s2s_5_8({FRAME_avg_slc_14_itm_3
                          , FRAME_avg_slc_acc_imod_7_itm_1})))) , (~ (acc_imod_1_sva[2]))})))))));
                      absmax_3_slc_svs = readslicef_7_1_6((conv_s2u_6_7(~ (FRAME_avg_sva[15:10]))
                          + 7'b1));
                      if ( absmax_3_slc_svs ) begin
                      end
                      else begin
                        absmax_3_else_slc_svs = readslicef_17_1_16((conv_s2s_16_17(~
                            FRAME_avg_sva) + 17'b1));
                        if ( absmax_3_else_slc_svs ) begin
                        end
                        else begin
                          absmax_absmax_return_4_sva_2 = (~ (FRAME_avg_sva[9:0]))
                              + 10'b1;
                        end
                      end
                      absmax_3_else_mux_nl = MUX_v_10_2_2({absmax_absmax_return_4_sva_2
                          , (FRAME_avg_sva[9:0])}, absmax_3_else_slc_svs);
                      vout_rsc_mgc_out_stdreg_d <= (absmax_3_else_mux_nl) | ({{9{absmax_3_slc_svs}},
                          absmax_3_slc_svs});
                    end
                  end
                end
              end
            end
            unequal_tmp = 1'b0;
            SHIFT_if_else_else_else_slc_regs_regs_ctmp_sva_1 = 30'b0;
            SHIFT_if_else_else_else_slc_regs_regs_ctmp_sva_sg2 = 30'b0;
            absmax_2_else_slc_svs = 1'b0;
            absmax_1_else_slc_svs = 1'b0;
            absmax_else_slc_svs = 1'b0;
            SHIFT_acc_1_psp = 2'b0;
            nor_tmp_1 = 1'b0;
            equal_tmp_3 = 1'b0;
            equal_tmp_2 = 1'b0;
            nor_tmp = 1'b0;
            equal_tmp_1 = 1'b0;
            equal_tmp = 1'b0;
            i_6_lpi_1_dfm_1 = 2'b0;
            i_8_lpi_1_dfm_1 = 2'b0;
            i_7_lpi_1_dfm_1 = 2'b0;
            exit_ACC1_sva_1 = 1'b0;
            i_6_sva = 2'b0;
            bx_2_sva_3 = 16'b0;
            gx_2_sva_3 = 16'b0;
            rx_2_sva_3 = 16'b0;
            bx_0_sva_3 = 16'b0;
            gx_0_sva_3 = 16'b0;
            rx_0_sva_3 = 16'b0;
            bx_2_sva_2_sg1 = 15'b0;
            gx_2_sva_2_sg1 = 15'b0;
            rx_2_sva_2_sg1 = 15'b0;
            bx_0_sva_2_sg1 = 15'b0;
            gx_0_sva_2_sg1 = 15'b0;
            rx_0_sva_2_sg1 = 15'b0;
            bx_2_sva_1 = 16'b0;
            gx_2_sva_1 = 16'b0;
            rx_2_sva_1 = 16'b0;
            bx_0_sva_1 = 16'b0;
            gx_0_sva_1 = 16'b0;
            rx_0_sva_1 = 16'b0;
            i_5_lpi_1_dfm = 2'b0;
            exit_ACC2_sva_1 = 1'b0;
            i_8_sva = 2'b0;
            by_2_sva_3 = 16'b0;
            gy_2_sva_3 = 16'b0;
            ry_2_sva_3 = 16'b0;
            by_0_sva_3 = 16'b0;
            gy_0_sva_3 = 16'b0;
            ry_0_sva_3 = 16'b0;
            by_2_sva_2_sg1 = 15'b0;
            gy_2_sva_2_sg1 = 15'b0;
            ry_2_sva_2_sg1 = 15'b0;
            by_0_sva_2_sg1 = 15'b0;
            gy_0_sva_2_sg1 = 15'b0;
            ry_0_sva_2_sg1 = 15'b0;
            by_2_sva_1 = 16'b0;
            gy_2_sva_1 = 16'b0;
            ry_2_sva_1 = 16'b0;
            by_0_sva_1 = 16'b0;
            gy_0_sva_1 = 16'b0;
            ry_0_sva_1 = 16'b0;
            i_7_sva = 2'b0;
            blue_sva_2 = 16'b0;
            green_sva_2 = 16'b0;
            red_sva_2 = 16'b0;
            absmax_absmax_return_2_sva_2 = 16'b0;
            absmax_absmax_return_1_sva_2 = 16'b0;
            absmax_absmax_return_sva_2 = 16'b0;
            exit_ACC4_sva_2 = 1'b0;
            i_5_sva = 2'b0;
            blue_sva_1 = 16'b0;
            green_sva_1 = 16'b0;
            red_sva_1 = 16'b0;
            regs_operator_din_sva = 90'b0;
            if ( exit_ACC4_sva ) begin
              regs_operator_din_sva = vin_rsc_mgc_in_wire_d;
            end
            red_lpi_1_dfm = red_lpi_1 & (signext_16_1(~ exit_ACC4_sva));
            green_lpi_1_dfm = green_lpi_1 & (signext_16_1(~ exit_ACC4_sva));
            blue_lpi_1_dfm = blue_lpi_1 & (signext_16_1(~ exit_ACC4_sva));
            rx_0_lpi_1_dfm_4 = rx_0_lpi_3 & (~ exit_ACC4_sva);
            rx_0_lpi_1_dfm_sg1 = rx_0_lpi_1_sg1 & (signext_15_1(~ exit_ACC4_sva));
            rx_2_lpi_1_dfm_4 = rx_2_lpi_3 & (~ exit_ACC4_sva);
            rx_2_lpi_1_dfm_sg1 = rx_2_lpi_1_sg1 & (signext_15_1(~ exit_ACC4_sva));
            gx_0_lpi_1_dfm_4 = gx_0_lpi_3 & (~ exit_ACC4_sva);
            gx_0_lpi_1_dfm_sg1 = gx_0_lpi_1_sg1 & (signext_15_1(~ exit_ACC4_sva));
            gx_2_lpi_1_dfm_4 = gx_2_lpi_3 & (~ exit_ACC4_sva);
            gx_2_lpi_1_dfm_sg1 = gx_2_lpi_1_sg1 & (signext_15_1(~ exit_ACC4_sva));
            bx_0_lpi_1_dfm_4 = bx_0_lpi_3 & (~ exit_ACC4_sva);
            bx_0_lpi_1_dfm_sg1 = bx_0_lpi_1_sg1 & (signext_15_1(~ exit_ACC4_sva));
            bx_2_lpi_1_dfm_4 = bx_2_lpi_3 & (~ exit_ACC4_sva);
            bx_2_lpi_1_dfm_sg1 = bx_2_lpi_1_sg1 & (signext_15_1(~ exit_ACC4_sva));
            ry_0_lpi_1_dfm_5 = ry_0_lpi_3 & (~ exit_ACC4_sva);
            ry_0_lpi_1_dfm_sg1 = ry_0_lpi_1_sg1 & (signext_15_1(~ exit_ACC4_sva));
            ry_2_lpi_1_dfm_5 = ry_2_lpi_3 & (~ exit_ACC4_sva);
            ry_2_lpi_1_dfm_sg1 = ry_2_lpi_1_sg1 & (signext_15_1(~ exit_ACC4_sva));
            gy_0_lpi_1_dfm_5 = gy_0_lpi_3 & (~ exit_ACC4_sva);
            gy_0_lpi_1_dfm_sg1 = gy_0_lpi_1_sg1 & (signext_15_1(~ exit_ACC4_sva));
            gy_2_lpi_1_dfm_5 = gy_2_lpi_3 & (~ exit_ACC4_sva);
            gy_2_lpi_1_dfm_sg1 = gy_2_lpi_1_sg1 & (signext_15_1(~ exit_ACC4_sva));
            by_0_lpi_1_dfm_5 = by_0_lpi_3 & (~ exit_ACC4_sva);
            by_0_lpi_1_dfm_sg1 = by_0_lpi_1_sg1 & (signext_15_1(~ exit_ACC4_sva));
            by_2_lpi_1_dfm_5 = by_2_lpi_3 & (~ exit_ACC4_sva);
            by_2_lpi_1_dfm_sg1 = by_2_lpi_1_sg1 & (signext_15_1(~ exit_ACC4_sva));
            regs_operator_din_lpi_1_dfm_1 = MUX_v_30_2_2({regs_operator_din_lpi_1_dfm_1
                , (regs_operator_din_sva[29:0])}, exit_ACC4_sva);
            regs_operator_din_lpi_1_dfm_sg2 = MUX_v_30_2_2({regs_operator_din_lpi_1_dfm_sg2
                , (regs_operator_din_sva[89:60])}, exit_ACC4_sva);
            SHIFT_i_1_lpi_1_dfm_2 = MUX_v_2_2_2({SHIFT_i_1_lpi_3 , 2'b10}, exit_ACC4_sva);
            exit_ACC2_lpi_1_dfm = exit_ACC2_lpi_1 & (~ exit_ACC4_sva);
            exit_ACC1_lpi_1_dfm = exit_ACC1_lpi_1 & (~ exit_ACC4_sva);
            exit_SHIFT_lpi_1_dfm = exit_SHIFT_lpi_1 & (~ exit_ACC4_sva);
            if ( exit_SHIFT_lpi_1_dfm ) begin
              exit_ACC1_lpi_1_dfm_st = exit_ACC1_lpi_1_dfm;
              if ( exit_ACC1_lpi_1_dfm ) begin
                exit_ACC2_lpi_1_dfm_st = exit_ACC2_lpi_1_dfm;
                if ( exit_ACC2_lpi_1_dfm ) begin
                  ACC4_mux_nl = MUX_v_15_4_2({ry_0_lpi_1_dfm_sg1 , 15'b0 , ry_2_lpi_1_dfm_sg1
                      , 15'b0}, i_5_lpi_1);
                  ACC4_mux_10_nl = MUX_s_1_4_2({ry_0_lpi_1_dfm_5 , 1'b0 , ry_2_lpi_1_dfm_5
                      , 1'b0}, i_5_lpi_1);
                  red_sva_1 = red_lpi_1_dfm + ({(ACC4_mux_nl) , (ACC4_mux_10_nl)});
                  ACC4_mux_8_nl = MUX_v_15_4_2({gy_0_lpi_1_dfm_sg1 , 15'b0 , gy_2_lpi_1_dfm_sg1
                      , 15'b0}, i_5_lpi_1);
                  ACC4_mux_11_nl = MUX_s_1_4_2({gy_0_lpi_1_dfm_5 , 1'b0 , gy_2_lpi_1_dfm_5
                      , 1'b0}, i_5_lpi_1);
                  green_sva_1 = green_lpi_1_dfm + ({(ACC4_mux_8_nl) , (ACC4_mux_11_nl)});
                  ACC4_mux_9_nl = MUX_v_15_4_2({by_0_lpi_1_dfm_sg1 , 15'b0 , by_2_lpi_1_dfm_sg1
                      , 15'b0}, i_5_lpi_1);
                  ACC4_mux_12_nl = MUX_s_1_4_2({by_0_lpi_1_dfm_5 , 1'b0 , by_2_lpi_1_dfm_5
                      , 1'b0}, i_5_lpi_1);
                  blue_sva_1 = blue_lpi_1_dfm + ({(ACC4_mux_9_nl) , (ACC4_mux_12_nl)});
                  i_5_sva = i_5_lpi_1 + 2'b1;
                  exit_ACC4_sva_2 = ~ (readslicef_3_1_2((({1'b1 , i_5_sva}) + 3'b1)));
                  exit_ACC4_sva_2_st = exit_ACC4_sva_2;
                  if ( exit_ACC4_sva_2 ) begin
                    absmax_slc_svs = readslicef_7_1_6((conv_s2u_6_7(~ (red_sva_1[15:10]))
                        + 7'b1));
                    if ( absmax_slc_svs ) begin
                    end
                    else begin
                      absmax_else_slc_svs = readslicef_17_1_16((conv_s2s_16_17(~
                          red_sva_1) + 17'b1));
                      if ( absmax_else_slc_svs ) begin
                      end
                      else begin
                        absmax_absmax_return_sva_2 = (~ red_sva_1) + 16'b1;
                      end
                    end
                    absmax_1_slc_svs = readslicef_7_1_6((conv_s2u_6_7(~ (green_sva_1[15:10]))
                        + 7'b1));
                    if ( absmax_1_slc_svs ) begin
                    end
                    else begin
                      absmax_1_else_slc_svs = readslicef_17_1_16((conv_s2s_16_17(~
                          green_sva_1) + 17'b1));
                      if ( absmax_1_else_slc_svs ) begin
                      end
                      else begin
                        absmax_absmax_return_1_sva_2 = (~ green_sva_1) + 16'b1;
                      end
                    end
                    absmax_2_slc_svs = readslicef_7_1_6((conv_s2u_6_7(~ (blue_sva_1[15:10]))
                        + 7'b1));
                    if ( absmax_2_slc_svs ) begin
                    end
                    else begin
                      absmax_2_else_slc_svs = readslicef_17_1_16((conv_s2s_16_17(~
                          blue_sva_1) + 17'b1));
                      if ( absmax_2_else_slc_svs ) begin
                      end
                      else begin
                        absmax_absmax_return_2_sva_2 = (~ blue_sva_1) + 16'b1;
                      end
                    end
                    absmax_1_mux1h_nl = MUX1HOT_v_16_3_2({absmax_absmax_return_1_sva_2
                        , ({6'b0, green_sva_1[9:0]}) , 16'b1111111111}, {(~(absmax_1_else_slc_svs
                        | absmax_1_slc_svs)) , (absmax_1_else_slc_svs & (~ absmax_1_slc_svs))
                        , absmax_1_slc_svs});
                    absmax_2_mux1h_nl = MUX1HOT_v_16_3_2({absmax_absmax_return_2_sva_2
                        , ({6'b0, blue_sva_1[9:0]}) , 16'b1111111111}, {(~(absmax_2_else_slc_svs
                        | absmax_2_slc_svs)) , (absmax_2_else_slc_svs & (~ absmax_2_slc_svs))
                        , absmax_2_slc_svs});
                    absmax_mux1h_nl = MUX1HOT_v_16_3_2({absmax_absmax_return_sva_2
                        , ({6'b0, red_sva_1[9:0]}) , 16'b1111111111}, {(~(absmax_else_slc_svs
                        | absmax_slc_svs)) , (absmax_else_slc_svs & (~ absmax_slc_svs))
                        , absmax_slc_svs});
                    acc_psp_sva = (conv_u2u_16_17(absmax_1_mux1h_nl) + conv_u2u_16_17(absmax_2_mux1h_nl))
                        + conv_u2u_16_17(absmax_mux1h_nl);
                    acc_imod_sva = readslicef_6_5_1((conv_u2s_5_6({(readslicef_5_4_1((conv_u2u_4_5({(readslicef_4_3_1((conv_u2u_3_4({(readslicef_3_2_1((conv_u2u_2_3({(~
                        (acc_psp_sva[1])) , 1'b1}) + conv_u2u_2_3({(acc_psp_sva[2])
                        , (acc_psp_sva[12])})))) , 1'b1}) + conv_u2u_3_4({(readslicef_3_2_1((conv_u2u_2_3({(~
                        (acc_psp_sva[3])) , 1'b1}) + conv_u2u_2_3({(acc_psp_sva[4])
                        , (~ (acc_psp_sva[11]))})))) , (acc_psp_sva[14])})))) , 1'b1})
                        + conv_u2u_4_5({(readslicef_4_3_1((conv_u2u_3_4({(readslicef_3_2_1((conv_u2u_2_3({(~
                        (acc_psp_sva[5])) , 1'b1}) + conv_u2u_2_3({(acc_psp_sva[6])
                        , (acc_psp_sva[10])})))) , 1'b1}) + conv_u2u_3_4({(readslicef_3_2_1((conv_u2u_2_3({(~
                        (acc_psp_sva[7])) , 1'b1}) + conv_u2u_2_3({(acc_psp_sva[8])
                        , (~ (acc_psp_sva[9]))})))) , (~ (acc_psp_sva[13]))}))))
                        , (~ (acc_psp_sva[15]))})))) , 1'b1}) + conv_s2s_5_6({3'b100
                        , (acc_psp_sva[0]) , (acc_psp_sva[16])})));
                    FRAME_avg_slc_10_itm = readslicef_4_3_1((conv_u2u_3_4({(readslicef_3_2_1((conv_u2u_2_3({(acc_imod_sva[2])
                        , 1'b1}) + conv_u2u_2_3({(~ (acc_imod_sva[3])) , 1'b1}))))
                        , 1'b1}) + conv_u2u_2_4({(~ (acc_imod_sva[1])) , (~ (acc_imod_sva[4]))})));
                    FRAME_avg_slc_acc_imod_itm = acc_imod_sva[0];
                    FRAME_avg_acc_25_itm = conv_u2u_15_16({(acc_psp_sva[16]) , 1'b0
                        , (acc_psp_sva[16]) , 1'b0 , (acc_psp_sva[16]) , 1'b0 , (acc_psp_sva[16])
                        , 1'b0 , (acc_psp_sva[16]) , 1'b0 , (acc_psp_sva[16]) , 1'b0
                        , (acc_psp_sva[16]) , 1'b0 , (acc_psp_sva[16])}) + conv_u2u_14_16({(acc_psp_sva[15])
                        , 1'b0 , (acc_psp_sva[15]) , 1'b0 , (acc_psp_sva[15]) , 1'b0
                        , (acc_psp_sva[15]) , 1'b0 , (acc_psp_sva[15]) , 1'b0 , (acc_psp_sva[15])
                        , 1'b0 , (signext_2_1(acc_psp_sva[15]))});
                    FRAME_avg_slc_acc_idiv_85_itm = acc_psp_sva[14];
                    FRAME_avg_slc_acc_idiv_86_itm = acc_psp_sva[14];
                    FRAME_avg_slc_acc_idiv_87_itm = acc_psp_sva[14];
                    FRAME_avg_slc_acc_idiv_88_itm = acc_psp_sva[14];
                    FRAME_avg_slc_acc_idiv_89_itm = acc_psp_sva[14];
                    FRAME_avg_slc_acc_idiv_90_itm = acc_psp_sva[14];
                    FRAME_avg_slc_acc_idiv_49_itm = acc_psp_sva[14];
                    FRAME_avg_slc_acc_idiv_75_itm = acc_psp_sva[12];
                    FRAME_avg_slc_acc_idiv_76_itm = acc_psp_sva[12];
                    FRAME_avg_slc_acc_idiv_77_itm = acc_psp_sva[12];
                    FRAME_avg_slc_acc_idiv_78_itm = acc_psp_sva[12];
                    FRAME_avg_slc_acc_idiv_79_itm = acc_psp_sva[12];
                    FRAME_avg_slc_acc_idiv_47_itm = acc_psp_sva[12];
                    FRAME_avg_slc_acc_idiv_67_itm = acc_psp_sva[10];
                    FRAME_avg_slc_acc_idiv_68_itm = acc_psp_sva[10];
                    FRAME_avg_slc_acc_idiv_69_itm = acc_psp_sva[10];
                    FRAME_avg_slc_acc_idiv_70_itm = acc_psp_sva[10];
                    FRAME_avg_slc_acc_idiv_45_itm = acc_psp_sva[10];
                    FRAME_avg_slc_acc_idiv_61_itm = acc_psp_sva[8];
                    FRAME_avg_slc_acc_idiv_62_itm = acc_psp_sva[8];
                    FRAME_avg_slc_acc_idiv_63_itm = acc_psp_sva[8];
                    FRAME_avg_slc_acc_idiv_43_itm = acc_psp_sva[8];
                    FRAME_avg_slc_13_itm = readslicef_7_6_1((conv_u2u_6_7({(readslicef_6_5_1((conv_u2u_5_6({(acc_psp_sva[5])
                        , 1'b0 , (signext_2_1(acc_psp_sva[5])) , 1'b1}) + conv_u2u_4_6({(acc_psp_sva[4:2])
                        , (acc_psp_sva[4])})))) , 1'b1}) + conv_u2u_6_7({(acc_psp_sva[6])
                        , 1'b0 , (acc_psp_sva[6]) , 1'b0 , (acc_psp_sva[6]) , (acc_imod_sva[2])})));
                    FRAME_avg_slc_acc_idiv_80_itm = acc_psp_sva[13];
                    FRAME_avg_slc_acc_idiv_81_itm = acc_psp_sva[13];
                    FRAME_avg_slc_acc_idiv_82_itm = acc_psp_sva[13];
                    FRAME_avg_slc_acc_idiv_83_itm = acc_psp_sva[13];
                    FRAME_avg_slc_acc_idiv_84_itm = acc_psp_sva[13];
                    FRAME_avg_slc_acc_idiv_48_itm = acc_psp_sva[13];
                    FRAME_avg_slc_acc_idiv_71_itm = acc_psp_sva[11];
                    FRAME_avg_slc_acc_idiv_72_itm = acc_psp_sva[11];
                    FRAME_avg_slc_acc_idiv_73_itm = acc_psp_sva[11];
                    FRAME_avg_slc_acc_idiv_74_itm = acc_psp_sva[11];
                    FRAME_avg_slc_acc_idiv_46_itm = acc_psp_sva[11];
                    FRAME_avg_slc_acc_idiv_64_itm = acc_psp_sva[9];
                    FRAME_avg_slc_acc_idiv_65_itm = acc_psp_sva[9];
                    FRAME_avg_slc_acc_idiv_66_itm = acc_psp_sva[9];
                    FRAME_avg_slc_acc_idiv_44_itm = acc_psp_sva[9];
                    FRAME_avg_slc_acc_idiv_59_itm = acc_psp_sva[7];
                    FRAME_avg_slc_acc_idiv_60_itm = acc_psp_sva[7];
                    FRAME_avg_slc_acc_idiv_42_itm = acc_psp_sva[7];
                    FRAME_avg_slc_14_itm_2 = readslicef_5_4_1((conv_u2s_4_5({2'b11
                        , (acc_psp_sva[3]) , 1'b1}) + ({(readslicef_5_4_1((conv_u2u_4_5({(~
                        (acc_imod_sva[4])) , 1'b1 , (~ (acc_imod_sva[4])) , 1'b1})
                        + conv_u2u_3_5({(acc_imod_sva[3]) , (acc_psp_sva[1]) , 1'b1}))))
                        , (acc_imod_sva[1])})));
                    FRAME_avg_slc_acc_imod_7_itm = acc_imod_sva[3];
                  end
                end
                else begin
                  ACC2_mux_nl = MUX_v_15_4_2({rx_0_lpi_1_dfm_sg1 , 15'b0 , rx_2_lpi_1_dfm_sg1
                      , 15'b0}, i_7_lpi_1);
                  ACC2_mux_25_nl = MUX_s_1_4_2({rx_0_lpi_1_dfm_4 , 1'b0 , rx_2_lpi_1_dfm_4
                      , 1'b0}, i_7_lpi_1);
                  red_sva_2 = red_lpi_1_dfm + ({(ACC2_mux_nl) , (ACC2_mux_25_nl)});
                  ACC2_mux_23_nl = MUX_v_15_4_2({gx_0_lpi_1_dfm_sg1 , 15'b0 , gx_2_lpi_1_dfm_sg1
                      , 15'b0}, i_7_lpi_1);
                  ACC2_mux_26_nl = MUX_s_1_4_2({gx_0_lpi_1_dfm_4 , 1'b0 , gx_2_lpi_1_dfm_4
                      , 1'b0}, i_7_lpi_1);
                  green_sva_2 = green_lpi_1_dfm + ({(ACC2_mux_23_nl) , (ACC2_mux_26_nl)});
                  ACC2_mux_24_nl = MUX_v_15_4_2({bx_0_lpi_1_dfm_sg1 , 15'b0 , bx_2_lpi_1_dfm_sg1
                      , 15'b0}, i_7_lpi_1);
                  ACC2_mux_27_nl = MUX_s_1_4_2({bx_0_lpi_1_dfm_4 , 1'b0 , bx_2_lpi_1_dfm_4
                      , 1'b0}, i_7_lpi_1);
                  blue_sva_2 = blue_lpi_1_dfm + ({(ACC2_mux_24_nl) , (ACC2_mux_27_nl)});
                  i_7_sva = i_7_lpi_1 + 2'b1;
                  equal_tmp = (i_8_lpi_1[0]) & (~ (i_8_lpi_1[1]));
                  equal_tmp_1 = (i_8_lpi_1[1]) & (~ (i_8_lpi_1[0]));
                  nor_tmp = ~((~((i_8_lpi_1[1]) | (i_8_lpi_1[0]))) | equal_tmp |
                      equal_tmp_1);
                  case (i_8_lpi_1)
                    2'b0 : begin
                      ry_0_sva_1 = readslicef_17_16_1((conv_s2s_12_17({1'b1 , (~
                          (regs_regs_0_sva_2[29:20])) , 1'b1}) + ({ry_0_lpi_1_dfm_sg1
                          , ry_0_lpi_1_dfm_5 , 1'b1})));
                      gy_0_sva_1 = readslicef_17_16_1((conv_s2s_12_17({1'b1 , (~
                          (regs_regs_0_sva_2[19:10])) , 1'b1}) + ({gy_0_lpi_1_dfm_sg1
                          , gy_0_lpi_1_dfm_5 , 1'b1})));
                      by_0_sva_1 = readslicef_17_16_1((conv_s2s_12_17({1'b1 , (~
                          (regs_regs_0_sva_2[9:0])) , 1'b1}) + ({by_0_lpi_1_dfm_sg1
                          , by_0_lpi_1_dfm_5 , 1'b1})));
                      ry_2_sva_1 = ({ry_2_lpi_1_dfm_sg1 , ry_2_lpi_1_dfm_5}) + conv_u2s_10_16(regs_regs_0_sva_sg2[29:20]);
                      gy_2_sva_1 = ({gy_2_lpi_1_dfm_sg1 , gy_2_lpi_1_dfm_5}) + conv_u2s_10_16(regs_regs_0_sva_sg2[19:10]);
                      by_2_sva_1 = ({by_2_lpi_1_dfm_sg1 , by_2_lpi_1_dfm_5}) + conv_u2s_10_16(regs_regs_0_sva_sg2[9:0]);
                    end
                    2'b1 : begin
                      ry_0_sva_2_sg1 = readslicef_16_15_1((conv_s2u_12_16({1'b1 ,
                          (~ (regs_regs_1_sva_2[29:20])) , 1'b1}) + ({ry_0_lpi_1_dfm_sg1
                          , 1'b1})));
                      gy_0_sva_2_sg1 = readslicef_16_15_1((conv_s2u_12_16({1'b1 ,
                          (~ (regs_regs_1_sva_2[19:10])) , 1'b1}) + ({gy_0_lpi_1_dfm_sg1
                          , 1'b1})));
                      by_0_sva_2_sg1 = readslicef_16_15_1((conv_s2u_12_16({1'b1 ,
                          (~ (regs_regs_1_sva_2[9:0])) , 1'b1}) + ({by_0_lpi_1_dfm_sg1
                          , 1'b1})));
                      ry_2_sva_2_sg1 = ry_2_lpi_1_dfm_sg1 + conv_u2u_10_15(regs_regs_1_sva_sg2[29:20]);
                      gy_2_sva_2_sg1 = gy_2_lpi_1_dfm_sg1 + conv_u2u_10_15(regs_regs_1_sva_sg2[19:10]);
                      by_2_sva_2_sg1 = by_2_lpi_1_dfm_sg1 + conv_u2u_10_15(regs_regs_1_sva_sg2[9:0]);
                    end
                    2'b10 : begin
                      ry_0_sva_3 = readslicef_17_16_1((conv_s2s_12_17({1'b1 , (~
                          (regs_regs_2_sva_2[29:20])) , 1'b1}) + ({ry_0_lpi_1_dfm_sg1
                          , ry_0_lpi_1_dfm_5 , 1'b1})));
                      gy_0_sva_3 = readslicef_17_16_1((conv_s2s_12_17({1'b1 , (~
                          (regs_regs_2_sva_2[19:10])) , 1'b1}) + ({gy_0_lpi_1_dfm_sg1
                          , gy_0_lpi_1_dfm_5 , 1'b1})));
                      by_0_sva_3 = readslicef_17_16_1((conv_s2s_12_17({1'b1 , (~
                          (regs_regs_2_sva_2[9:0])) , 1'b1}) + ({by_0_lpi_1_dfm_sg1
                          , by_0_lpi_1_dfm_5 , 1'b1})));
                      ry_2_sva_3 = ({ry_2_lpi_1_dfm_sg1 , ry_2_lpi_1_dfm_5}) + conv_u2s_10_16(regs_regs_2_sva_sg2[29:20]);
                      gy_2_sva_3 = ({gy_2_lpi_1_dfm_sg1 , gy_2_lpi_1_dfm_5}) + conv_u2s_10_16(regs_regs_2_sva_sg2[19:10]);
                      by_2_sva_3 = ({by_2_lpi_1_dfm_sg1 , by_2_lpi_1_dfm_5}) + conv_u2s_10_16(regs_regs_2_sva_sg2[9:0]);
                    end
                    default : begin
                      // NOP
                    end
                  endcase
                  i_8_sva = i_8_lpi_1 + 2'b1;
                  exit_ACC2_sva_1 = ~((readslicef_3_1_2((({1'b1 , i_7_sva}) + 3'b1)))
                      | (readslicef_3_1_2((({1'b1 , i_8_sva}) + 3'b1))));
                  i_5_lpi_1_dfm = i_5_lpi_1 & (signext_2_1(~ exit_ACC2_sva_1));
                end
              end
              else begin
                equal_tmp_2 = (i_6_lpi_1[0]) & (~ (i_6_lpi_1[1]));
                equal_tmp_3 = (i_6_lpi_1[1]) & (~ (i_6_lpi_1[0]));
                nor_tmp_1 = ~((~((i_6_lpi_1[1]) | (i_6_lpi_1[0]))) | equal_tmp_2
                    | equal_tmp_3);
                case (i_6_lpi_1)
                  2'b0 : begin
                    rx_0_sva_1 = readslicef_17_16_1((conv_s2s_12_17({1'b1 , (~ (regs_regs_0_sva_2[29:20]))
                        , 1'b1}) + ({rx_0_lpi_1_dfm_sg1 , rx_0_lpi_1_dfm_4 , 1'b1})));
                    gx_0_sva_1 = readslicef_17_16_1((conv_s2s_12_17({1'b1 , (~ (regs_regs_0_sva_2[19:10]))
                        , 1'b1}) + ({gx_0_lpi_1_dfm_sg1 , gx_0_lpi_1_dfm_4 , 1'b1})));
                    bx_0_sva_1 = readslicef_17_16_1((conv_s2s_12_17({1'b1 , (~ (regs_regs_0_sva_2[9:0]))
                        , 1'b1}) + ({bx_0_lpi_1_dfm_sg1 , bx_0_lpi_1_dfm_4 , 1'b1})));
                    rx_2_sva_1 = ({rx_2_lpi_1_dfm_sg1 , rx_2_lpi_1_dfm_4}) + conv_u2s_10_16(regs_regs_0_sva_sg2[29:20]);
                    gx_2_sva_1 = ({gx_2_lpi_1_dfm_sg1 , gx_2_lpi_1_dfm_4}) + conv_u2s_10_16(regs_regs_0_sva_sg2[19:10]);
                    bx_2_sva_1 = ({bx_2_lpi_1_dfm_sg1 , bx_2_lpi_1_dfm_4}) + conv_u2s_10_16(regs_regs_0_sva_sg2[9:0]);
                  end
                  2'b1 : begin
                    rx_0_sva_2_sg1 = readslicef_16_15_1((conv_s2u_12_16({1'b1 , (~
                        (regs_regs_1_sva_2[29:20])) , 1'b1}) + ({rx_0_lpi_1_dfm_sg1
                        , 1'b1})));
                    gx_0_sva_2_sg1 = readslicef_16_15_1((conv_s2u_12_16({1'b1 , (~
                        (regs_regs_1_sva_2[19:10])) , 1'b1}) + ({gx_0_lpi_1_dfm_sg1
                        , 1'b1})));
                    bx_0_sva_2_sg1 = readslicef_16_15_1((conv_s2u_12_16({1'b1 , (~
                        (regs_regs_1_sva_2[9:0])) , 1'b1}) + ({bx_0_lpi_1_dfm_sg1
                        , 1'b1})));
                    rx_2_sva_2_sg1 = rx_2_lpi_1_dfm_sg1 + conv_u2u_10_15(regs_regs_1_sva_sg2[29:20]);
                    gx_2_sva_2_sg1 = gx_2_lpi_1_dfm_sg1 + conv_u2u_10_15(regs_regs_1_sva_sg2[19:10]);
                    bx_2_sva_2_sg1 = bx_2_lpi_1_dfm_sg1 + conv_u2u_10_15(regs_regs_1_sva_sg2[9:0]);
                  end
                  2'b10 : begin
                    rx_0_sva_3 = readslicef_17_16_1((conv_s2s_12_17({1'b1 , (~ (regs_regs_2_sva_2[29:20]))
                        , 1'b1}) + ({rx_0_lpi_1_dfm_sg1 , rx_0_lpi_1_dfm_4 , 1'b1})));
                    gx_0_sva_3 = readslicef_17_16_1((conv_s2s_12_17({1'b1 , (~ (regs_regs_2_sva_2[19:10]))
                        , 1'b1}) + ({gx_0_lpi_1_dfm_sg1 , gx_0_lpi_1_dfm_4 , 1'b1})));
                    bx_0_sva_3 = readslicef_17_16_1((conv_s2s_12_17({1'b1 , (~ (regs_regs_2_sva_2[9:0]))
                        , 1'b1}) + ({bx_0_lpi_1_dfm_sg1 , bx_0_lpi_1_dfm_4 , 1'b1})));
                    rx_2_sva_3 = ({rx_2_lpi_1_dfm_sg1 , rx_2_lpi_1_dfm_4}) + conv_u2s_10_16(regs_regs_2_sva_sg2[29:20]);
                    gx_2_sva_3 = ({gx_2_lpi_1_dfm_sg1 , gx_2_lpi_1_dfm_4}) + conv_u2s_10_16(regs_regs_2_sva_sg2[19:10]);
                    bx_2_sva_3 = ({bx_2_lpi_1_dfm_sg1 , bx_2_lpi_1_dfm_4}) + conv_u2s_10_16(regs_regs_2_sva_sg2[9:0]);
                  end
                  default : begin
                    // NOP
                  end
                endcase
                i_6_sva = i_6_lpi_1 + 2'b1;
                exit_ACC1_sva_1 = ~ (readslicef_3_1_2((({1'b1 , i_6_sva}) + 3'b1)));
                i_7_lpi_1_dfm_1 = i_7_lpi_1 & (signext_2_1(~ exit_ACC1_sva_1));
                i_8_lpi_1_dfm_1 = i_8_lpi_1 & (signext_2_1(~ exit_ACC1_sva_1));
              end
            end
            else begin
              unequal_tmp = (SHIFT_i_1_lpi_1_dfm_2[1]) | (SHIFT_i_1_lpi_1_dfm_2[0]);
              case (SHIFT_i_1_lpi_1_dfm_2)
                2'b0 : begin
                  // NOP
                end
                default : begin
                  SHIFT_if_else_else_else_slc_regs_regs_ctmp_sva_1 = MUX_v_30_2_2({regs_regs_1_sva_2
                      , regs_regs_0_sva_2}, SHIFT_i_1_lpi_1_dfm_2[0]);
                  SHIFT_if_else_else_else_slc_regs_regs_ctmp_sva_sg2 = MUX_v_30_2_2({regs_regs_1_sva_sg2
                      , regs_regs_0_sva_sg2}, SHIFT_i_1_lpi_1_dfm_2[0]);
                end
              endcase
              SHIFT_acc_1_psp = SHIFT_i_1_lpi_1_dfm_2 + 2'b11;
              i_6_lpi_1_dfm_1 = i_6_lpi_1 & (signext_2_1(~ (SHIFT_acc_1_psp[1])));
            end
            SHIFT_nand_tmp = ~(exit_ACC1_lpi_1_dfm & exit_SHIFT_lpi_1_dfm);
            SHIFT_and_26_m1c = exit_ACC1_lpi_1_dfm & exit_SHIFT_lpi_1_dfm;
            SHIFT_or_7_ssc = unequal_tmp | exit_SHIFT_lpi_1_dfm;
            regs_regs_0_sva_2 = MUX_v_30_2_2({regs_operator_din_lpi_1_dfm_1 , regs_regs_0_sva_2},
                SHIFT_or_7_ssc);
            regs_regs_0_sva_sg2 = MUX_v_30_2_2({regs_operator_din_lpi_1_dfm_sg2 ,
                regs_regs_0_sva_sg2}, SHIFT_or_7_ssc);
            SHIFT_and_44_ssc = (SHIFT_i_1_lpi_1_dfm_2[0]) & unequal_tmp & (~ exit_SHIFT_lpi_1_dfm);
            regs_regs_1_sva_2 = MUX_v_30_2_2({regs_regs_1_sva_2 , SHIFT_if_else_else_else_slc_regs_regs_ctmp_sva_1},
                SHIFT_and_44_ssc);
            regs_regs_1_sva_sg2 = MUX_v_30_2_2({regs_regs_1_sva_sg2 , SHIFT_if_else_else_else_slc_regs_regs_ctmp_sva_sg2},
                SHIFT_and_44_ssc);
            SHIFT_and_45_ssc = (~ (SHIFT_i_1_lpi_1_dfm_2[0])) & unequal_tmp & (~
                exit_SHIFT_lpi_1_dfm);
            regs_regs_2_sva_2 = MUX_v_30_2_2({regs_regs_2_sva_2 , SHIFT_if_else_else_else_slc_regs_regs_ctmp_sva_1},
                SHIFT_and_45_ssc);
            regs_regs_2_sva_sg2 = MUX_v_30_2_2({regs_regs_2_sva_sg2 , SHIFT_if_else_else_else_slc_regs_regs_ctmp_sva_sg2},
                SHIFT_and_45_ssc);
            ACC1_and_7_cse = exit_ACC2_lpi_1_dfm & exit_ACC1_lpi_1_dfm & exit_SHIFT_lpi_1_dfm;
            ACC1_and_8_cse = (~ exit_ACC2_lpi_1_dfm) & exit_ACC1_lpi_1_dfm & exit_SHIFT_lpi_1_dfm;
            red_lpi_1 = MUX1HOT_v_16_3_2({red_lpi_1_dfm , red_sva_1 , red_sva_2},
                {SHIFT_nand_tmp , ACC1_and_7_cse , ACC1_and_8_cse});
            green_lpi_1 = MUX1HOT_v_16_3_2({green_lpi_1_dfm , green_sva_1 , green_sva_2},
                {SHIFT_nand_tmp , ACC1_and_7_cse , ACC1_and_8_cse});
            blue_lpi_1 = MUX1HOT_v_16_3_2({blue_lpi_1_dfm , blue_sva_1 , blue_sva_2},
                {SHIFT_nand_tmp , ACC1_and_7_cse , ACC1_and_8_cse});
            SHIFT_nand_16_ssc = ~(exit_SHIFT_lpi_1_dfm & (~(exit_ACC1_lpi_1_dfm |
                nor_tmp_1)));
            ACC1_and_13_ssc = (~(equal_tmp_2 | equal_tmp_3 | nor_tmp_1)) & (~ exit_ACC1_lpi_1_dfm)
                & exit_SHIFT_lpi_1_dfm;
            ACC1_and_14_ssc = equal_tmp_2 & (~ exit_ACC1_lpi_1_dfm) & exit_SHIFT_lpi_1_dfm;
            ACC1_and_15_ssc = equal_tmp_3 & (~ exit_ACC1_lpi_1_dfm) & exit_SHIFT_lpi_1_dfm;
            SHIFT_or_19_cse = SHIFT_nand_16_ssc | ACC1_and_14_ssc;
            rx_0_lpi_3 = MUX1HOT_s_1_3_2({rx_0_lpi_1_dfm_4 , (rx_0_sva_1[0]) , (rx_0_sva_3[0])},
                {SHIFT_or_19_cse , ACC1_and_13_ssc , ACC1_and_15_ssc});
            rx_0_lpi_1_sg1 = MUX1HOT_v_15_4_2({rx_0_lpi_1_dfm_sg1 , (rx_0_sva_1[15:1])
                , rx_0_sva_2_sg1 , (rx_0_sva_3[15:1])}, {SHIFT_nand_16_ssc , ACC1_and_13_ssc
                , ACC1_and_14_ssc , ACC1_and_15_ssc});
            rx_2_lpi_3 = MUX1HOT_s_1_3_2({rx_2_lpi_1_dfm_4 , (rx_2_sva_1[0]) , (rx_2_sva_3[0])},
                {SHIFT_or_19_cse , ACC1_and_13_ssc , ACC1_and_15_ssc});
            rx_2_lpi_1_sg1 = MUX1HOT_v_15_4_2({rx_2_lpi_1_dfm_sg1 , (rx_2_sva_1[15:1])
                , rx_2_sva_2_sg1 , (rx_2_sva_3[15:1])}, {SHIFT_nand_16_ssc , ACC1_and_13_ssc
                , ACC1_and_14_ssc , ACC1_and_15_ssc});
            gx_0_lpi_3 = MUX1HOT_s_1_3_2({gx_0_lpi_1_dfm_4 , (gx_0_sva_1[0]) , (gx_0_sva_3[0])},
                {SHIFT_or_19_cse , ACC1_and_13_ssc , ACC1_and_15_ssc});
            gx_0_lpi_1_sg1 = MUX1HOT_v_15_4_2({gx_0_lpi_1_dfm_sg1 , (gx_0_sva_1[15:1])
                , gx_0_sva_2_sg1 , (gx_0_sva_3[15:1])}, {SHIFT_nand_16_ssc , ACC1_and_13_ssc
                , ACC1_and_14_ssc , ACC1_and_15_ssc});
            gx_2_lpi_3 = MUX1HOT_s_1_3_2({gx_2_lpi_1_dfm_4 , (gx_2_sva_1[0]) , (gx_2_sva_3[0])},
                {SHIFT_or_19_cse , ACC1_and_13_ssc , ACC1_and_15_ssc});
            gx_2_lpi_1_sg1 = MUX1HOT_v_15_4_2({gx_2_lpi_1_dfm_sg1 , (gx_2_sva_1[15:1])
                , gx_2_sva_2_sg1 , (gx_2_sva_3[15:1])}, {SHIFT_nand_16_ssc , ACC1_and_13_ssc
                , ACC1_and_14_ssc , ACC1_and_15_ssc});
            bx_0_lpi_3 = MUX1HOT_s_1_3_2({bx_0_lpi_1_dfm_4 , (bx_0_sva_1[0]) , (bx_0_sva_3[0])},
                {SHIFT_or_19_cse , ACC1_and_13_ssc , ACC1_and_15_ssc});
            bx_0_lpi_1_sg1 = MUX1HOT_v_15_4_2({bx_0_lpi_1_dfm_sg1 , (bx_0_sva_1[15:1])
                , bx_0_sva_2_sg1 , (bx_0_sva_3[15:1])}, {SHIFT_nand_16_ssc , ACC1_and_13_ssc
                , ACC1_and_14_ssc , ACC1_and_15_ssc});
            bx_2_lpi_3 = MUX1HOT_s_1_3_2({bx_2_lpi_1_dfm_4 , (bx_2_sva_1[0]) , (bx_2_sva_3[0])},
                {SHIFT_or_19_cse , ACC1_and_13_ssc , ACC1_and_15_ssc});
            bx_2_lpi_1_sg1 = MUX1HOT_v_15_4_2({bx_2_lpi_1_dfm_sg1 , (bx_2_sva_1[15:1])
                , bx_2_sva_2_sg1 , (bx_2_sva_3[15:1])}, {SHIFT_nand_16_ssc , ACC1_and_13_ssc
                , ACC1_and_14_ssc , ACC1_and_15_ssc});
            SHIFT_or_ssc = exit_ACC2_lpi_1_dfm | nor_tmp | SHIFT_nand_tmp;
            ACC2_and_1_ssc = ~(equal_tmp | equal_tmp_1 | nor_tmp | exit_ACC2_lpi_1_dfm
                | SHIFT_nand_tmp);
            ACC2_and_2_ssc = equal_tmp & (~ exit_ACC2_lpi_1_dfm) & (~ SHIFT_nand_tmp);
            ACC2_and_3_ssc = equal_tmp_1 & (~ exit_ACC2_lpi_1_dfm) & (~ SHIFT_nand_tmp);
            SHIFT_or_25_cse = SHIFT_or_ssc | ACC2_and_2_ssc;
            ry_0_lpi_3 = MUX1HOT_s_1_3_2({ry_0_lpi_1_dfm_5 , (ry_0_sva_1[0]) , (ry_0_sva_3[0])},
                {SHIFT_or_25_cse , ACC2_and_1_ssc , ACC2_and_3_ssc});
            ry_0_lpi_1_sg1 = MUX1HOT_v_15_4_2({ry_0_lpi_1_dfm_sg1 , (ry_0_sva_1[15:1])
                , ry_0_sva_2_sg1 , (ry_0_sva_3[15:1])}, {SHIFT_or_ssc , ACC2_and_1_ssc
                , ACC2_and_2_ssc , ACC2_and_3_ssc});
            ry_2_lpi_3 = MUX1HOT_s_1_3_2({ry_2_lpi_1_dfm_5 , (ry_2_sva_1[0]) , (ry_2_sva_3[0])},
                {SHIFT_or_25_cse , ACC2_and_1_ssc , ACC2_and_3_ssc});
            ry_2_lpi_1_sg1 = MUX1HOT_v_15_4_2({ry_2_lpi_1_dfm_sg1 , (ry_2_sva_1[15:1])
                , ry_2_sva_2_sg1 , (ry_2_sva_3[15:1])}, {SHIFT_or_ssc , ACC2_and_1_ssc
                , ACC2_and_2_ssc , ACC2_and_3_ssc});
            gy_0_lpi_3 = MUX1HOT_s_1_3_2({gy_0_lpi_1_dfm_5 , (gy_0_sva_1[0]) , (gy_0_sva_3[0])},
                {SHIFT_or_25_cse , ACC2_and_1_ssc , ACC2_and_3_ssc});
            gy_0_lpi_1_sg1 = MUX1HOT_v_15_4_2({gy_0_lpi_1_dfm_sg1 , (gy_0_sva_1[15:1])
                , gy_0_sva_2_sg1 , (gy_0_sva_3[15:1])}, {SHIFT_or_ssc , ACC2_and_1_ssc
                , ACC2_and_2_ssc , ACC2_and_3_ssc});
            gy_2_lpi_3 = MUX1HOT_s_1_3_2({gy_2_lpi_1_dfm_5 , (gy_2_sva_1[0]) , (gy_2_sva_3[0])},
                {SHIFT_or_25_cse , ACC2_and_1_ssc , ACC2_and_3_ssc});
            gy_2_lpi_1_sg1 = MUX1HOT_v_15_4_2({gy_2_lpi_1_dfm_sg1 , (gy_2_sva_1[15:1])
                , gy_2_sva_2_sg1 , (gy_2_sva_3[15:1])}, {SHIFT_or_ssc , ACC2_and_1_ssc
                , ACC2_and_2_ssc , ACC2_and_3_ssc});
            by_0_lpi_3 = MUX1HOT_s_1_3_2({by_0_lpi_1_dfm_5 , (by_0_sva_1[0]) , (by_0_sva_3[0])},
                {SHIFT_or_25_cse , ACC2_and_1_ssc , ACC2_and_3_ssc});
            by_0_lpi_1_sg1 = MUX1HOT_v_15_4_2({by_0_lpi_1_dfm_sg1 , (by_0_sva_1[15:1])
                , by_0_sva_2_sg1 , (by_0_sva_3[15:1])}, {SHIFT_or_ssc , ACC2_and_1_ssc
                , ACC2_and_2_ssc , ACC2_and_3_ssc});
            by_2_lpi_3 = MUX1HOT_s_1_3_2({by_2_lpi_1_dfm_5 , (by_2_sva_1[0]) , (by_2_sva_3[0])},
                {SHIFT_or_25_cse , ACC2_and_1_ssc , ACC2_and_3_ssc});
            by_2_lpi_1_sg1 = MUX1HOT_v_15_4_2({by_2_lpi_1_dfm_sg1 , (by_2_sva_1[15:1])
                , by_2_sva_2_sg1 , (by_2_sva_3[15:1])}, {SHIFT_or_ssc , ACC2_and_1_ssc
                , ACC2_and_2_ssc , ACC2_and_3_ssc});
            i_5_lpi_1 = MUX1HOT_v_2_3_2({i_5_lpi_1 , i_5_sva , i_5_lpi_1_dfm}, {SHIFT_nand_tmp
                , ACC1_and_7_cse , ACC1_and_8_cse});
            SHIFT_i_1_lpi_3 = MUX_v_2_2_2({SHIFT_acc_1_psp , SHIFT_i_1_lpi_1_dfm_2},
                exit_SHIFT_lpi_1_dfm);
            SHIFT_and_42_cse = (~ exit_ACC1_lpi_1_dfm) & exit_SHIFT_lpi_1_dfm;
            i_6_lpi_1 = MUX1HOT_v_2_3_2({i_6_lpi_1_dfm_1 , i_6_sva , i_6_lpi_1},
                {(~ exit_SHIFT_lpi_1_dfm) , SHIFT_and_42_cse , SHIFT_and_26_m1c});
            SHIFT_nand_12_cse = ~((~(exit_ACC2_lpi_1_dfm & SHIFT_and_26_m1c)) & exit_SHIFT_lpi_1_dfm);
            i_7_lpi_1 = MUX1HOT_v_2_3_2({i_7_sva , i_7_lpi_1 , i_7_lpi_1_dfm_1},
                {ACC1_and_8_cse , SHIFT_nand_12_cse , SHIFT_and_42_cse});
            i_8_lpi_1 = MUX1HOT_v_2_3_2({i_8_sva , i_8_lpi_1 , i_8_lpi_1_dfm_1},
                {ACC1_and_8_cse , SHIFT_nand_12_cse , SHIFT_and_42_cse});
            exit_ACC4_sva = exit_ACC4_sva_2 & exit_ACC2_lpi_1_dfm & exit_ACC1_lpi_1_dfm
                & exit_SHIFT_lpi_1_dfm;
            ACC2_mux_20_nl = MUX_s_1_2_2({exit_ACC2_sva_1 , exit_ACC2_lpi_1_dfm},
                exit_ACC2_lpi_1_dfm);
            ACC1_mux_28_nl = MUX_s_1_2_2({exit_ACC2_lpi_1_dfm , (ACC2_mux_20_nl)},
                exit_ACC1_lpi_1_dfm);
            exit_ACC2_lpi_1 = MUX_s_1_2_2({exit_ACC2_lpi_1_dfm , (ACC1_mux_28_nl)},
                exit_SHIFT_lpi_1_dfm);
            ACC1_mux_29_nl = MUX_s_1_2_2({exit_ACC1_sva_1 , exit_ACC1_lpi_1_dfm},
                exit_ACC1_lpi_1_dfm);
            exit_ACC1_lpi_1 = MUX_s_1_2_2({exit_ACC1_lpi_1_dfm , (ACC1_mux_29_nl)},
                exit_SHIFT_lpi_1_dfm);
            exit_SHIFT_lpi_1 = MUX_s_1_2_2({(SHIFT_acc_1_psp[1]) , exit_SHIFT_lpi_1_dfm},
                exit_SHIFT_lpi_1_dfm);
            FRAME_avg_slc_10_itm_1 = FRAME_avg_slc_10_itm;
            FRAME_avg_slc_acc_imod_itm_1 = FRAME_avg_slc_acc_imod_itm;
            FRAME_avg_acc_25_itm_1 = FRAME_avg_acc_25_itm;
            FRAME_avg_slc_acc_idiv_85_itm_1 = FRAME_avg_slc_acc_idiv_85_itm;
            FRAME_avg_slc_acc_idiv_86_itm_1 = FRAME_avg_slc_acc_idiv_86_itm;
            FRAME_avg_slc_acc_idiv_87_itm_1 = FRAME_avg_slc_acc_idiv_87_itm;
            FRAME_avg_slc_acc_idiv_88_itm_1 = FRAME_avg_slc_acc_idiv_88_itm;
            FRAME_avg_slc_acc_idiv_89_itm_1 = FRAME_avg_slc_acc_idiv_89_itm;
            FRAME_avg_slc_acc_idiv_90_itm_1 = FRAME_avg_slc_acc_idiv_90_itm;
            FRAME_avg_slc_acc_idiv_49_itm_1 = FRAME_avg_slc_acc_idiv_49_itm;
            FRAME_avg_slc_acc_idiv_75_itm_1 = FRAME_avg_slc_acc_idiv_75_itm;
            FRAME_avg_slc_acc_idiv_76_itm_1 = FRAME_avg_slc_acc_idiv_76_itm;
            FRAME_avg_slc_acc_idiv_77_itm_1 = FRAME_avg_slc_acc_idiv_77_itm;
            FRAME_avg_slc_acc_idiv_78_itm_1 = FRAME_avg_slc_acc_idiv_78_itm;
            FRAME_avg_slc_acc_idiv_79_itm_1 = FRAME_avg_slc_acc_idiv_79_itm;
            FRAME_avg_slc_acc_idiv_47_itm_1 = FRAME_avg_slc_acc_idiv_47_itm;
            FRAME_avg_slc_acc_idiv_67_itm_1 = FRAME_avg_slc_acc_idiv_67_itm;
            FRAME_avg_slc_acc_idiv_68_itm_1 = FRAME_avg_slc_acc_idiv_68_itm;
            FRAME_avg_slc_acc_idiv_69_itm_1 = FRAME_avg_slc_acc_idiv_69_itm;
            FRAME_avg_slc_acc_idiv_70_itm_1 = FRAME_avg_slc_acc_idiv_70_itm;
            FRAME_avg_slc_acc_idiv_45_itm_1 = FRAME_avg_slc_acc_idiv_45_itm;
            FRAME_avg_slc_acc_idiv_61_itm_1 = FRAME_avg_slc_acc_idiv_61_itm;
            FRAME_avg_slc_acc_idiv_62_itm_1 = FRAME_avg_slc_acc_idiv_62_itm;
            FRAME_avg_slc_acc_idiv_63_itm_1 = FRAME_avg_slc_acc_idiv_63_itm;
            FRAME_avg_slc_acc_idiv_43_itm_1 = FRAME_avg_slc_acc_idiv_43_itm;
            FRAME_avg_slc_13_itm_1 = FRAME_avg_slc_13_itm;
            FRAME_avg_slc_acc_idiv_80_itm_1 = FRAME_avg_slc_acc_idiv_80_itm;
            FRAME_avg_slc_acc_idiv_81_itm_1 = FRAME_avg_slc_acc_idiv_81_itm;
            FRAME_avg_slc_acc_idiv_82_itm_1 = FRAME_avg_slc_acc_idiv_82_itm;
            FRAME_avg_slc_acc_idiv_83_itm_1 = FRAME_avg_slc_acc_idiv_83_itm;
            FRAME_avg_slc_acc_idiv_84_itm_1 = FRAME_avg_slc_acc_idiv_84_itm;
            FRAME_avg_slc_acc_idiv_48_itm_1 = FRAME_avg_slc_acc_idiv_48_itm;
            FRAME_avg_slc_acc_idiv_71_itm_1 = FRAME_avg_slc_acc_idiv_71_itm;
            FRAME_avg_slc_acc_idiv_72_itm_1 = FRAME_avg_slc_acc_idiv_72_itm;
            FRAME_avg_slc_acc_idiv_73_itm_1 = FRAME_avg_slc_acc_idiv_73_itm;
            FRAME_avg_slc_acc_idiv_74_itm_1 = FRAME_avg_slc_acc_idiv_74_itm;
            FRAME_avg_slc_acc_idiv_46_itm_1 = FRAME_avg_slc_acc_idiv_46_itm;
            FRAME_avg_slc_acc_idiv_64_itm_1 = FRAME_avg_slc_acc_idiv_64_itm;
            FRAME_avg_slc_acc_idiv_65_itm_1 = FRAME_avg_slc_acc_idiv_65_itm;
            FRAME_avg_slc_acc_idiv_66_itm_1 = FRAME_avg_slc_acc_idiv_66_itm;
            FRAME_avg_slc_acc_idiv_44_itm_1 = FRAME_avg_slc_acc_idiv_44_itm;
            FRAME_avg_slc_acc_idiv_59_itm_1 = FRAME_avg_slc_acc_idiv_59_itm;
            FRAME_avg_slc_acc_idiv_60_itm_1 = FRAME_avg_slc_acc_idiv_60_itm;
            FRAME_avg_slc_acc_idiv_42_itm_1 = FRAME_avg_slc_acc_idiv_42_itm;
            FRAME_avg_slc_14_itm_3 = FRAME_avg_slc_14_itm_2;
            FRAME_avg_slc_acc_imod_7_itm_1 = FRAME_avg_slc_acc_imod_7_itm;
            exit_SHIFT_lpi_1_dfm_st_1 = exit_SHIFT_lpi_1_dfm;
            exit_ACC1_lpi_1_dfm_st_1 = exit_ACC1_lpi_1_dfm_st;
            exit_ACC2_lpi_1_dfm_st_1 = exit_ACC2_lpi_1_dfm_st;
            exit_ACC4_sva_2_st_1 = exit_ACC4_sva_2_st;
            main_stage_0_2 = 1'b1;
          end
        end
      end
    end
    FRAME_avg_slc_14_itm_3 = 4'b0;
    FRAME_avg_slc_14_itm_2 = 4'b0;
    SHIFT_or_25_cse = 1'b0;
    SHIFT_or_19_cse = 1'b0;
    SHIFT_nand_12_cse = 1'b0;
    SHIFT_and_42_cse = 1'b0;
    ACC1_and_8_cse = 1'b0;
    ACC1_and_7_cse = 1'b0;
    SHIFT_if_else_else_else_slc_regs_regs_ctmp_sva_1 = 30'b0;
    SHIFT_if_else_else_else_slc_regs_regs_ctmp_sva_sg2 = 30'b0;
    bx_2_sva_2_sg1 = 15'b0;
    gx_2_sva_2_sg1 = 15'b0;
    rx_2_sva_2_sg1 = 15'b0;
    bx_0_sva_2_sg1 = 15'b0;
    gx_0_sva_2_sg1 = 15'b0;
    rx_0_sva_2_sg1 = 15'b0;
    by_2_sva_2_sg1 = 15'b0;
    gy_2_sva_2_sg1 = 15'b0;
    ry_2_sva_2_sg1 = 15'b0;
    by_0_sva_2_sg1 = 15'b0;
    gy_0_sva_2_sg1 = 15'b0;
    ry_0_sva_2_sg1 = 15'b0;
    SHIFT_i_1_lpi_1_dfm_2 = 2'b0;
    regs_operator_din_lpi_1_dfm_1 = 30'b0;
    regs_operator_din_lpi_1_dfm_sg2 = 30'b0;
    by_2_lpi_1_dfm_5 = 1'b0;
    by_2_lpi_1_dfm_sg1 = 15'b0;
    by_0_lpi_1_dfm_5 = 1'b0;
    by_0_lpi_1_dfm_sg1 = 15'b0;
    gy_2_lpi_1_dfm_5 = 1'b0;
    gy_2_lpi_1_dfm_sg1 = 15'b0;
    gy_0_lpi_1_dfm_5 = 1'b0;
    gy_0_lpi_1_dfm_sg1 = 15'b0;
    ry_2_lpi_1_dfm_5 = 1'b0;
    ry_2_lpi_1_dfm_sg1 = 15'b0;
    ry_0_lpi_1_dfm_5 = 1'b0;
    ry_0_lpi_1_dfm_sg1 = 15'b0;
    bx_2_lpi_1_dfm_4 = 1'b0;
    bx_2_lpi_1_dfm_sg1 = 15'b0;
    bx_0_lpi_1_dfm_4 = 1'b0;
    bx_0_lpi_1_dfm_sg1 = 15'b0;
    gx_2_lpi_1_dfm_4 = 1'b0;
    gx_2_lpi_1_dfm_sg1 = 15'b0;
    gx_0_lpi_1_dfm_4 = 1'b0;
    gx_0_lpi_1_dfm_sg1 = 15'b0;
    rx_2_lpi_1_dfm_4 = 1'b0;
    rx_2_lpi_1_dfm_sg1 = 15'b0;
    rx_0_lpi_1_dfm_4 = 1'b0;
    rx_0_lpi_1_dfm_sg1 = 15'b0;
    regs_regs_2_sva_2 = 30'b0;
    regs_regs_2_sva_sg2 = 30'b0;
    SHIFT_and_45_ssc = 1'b0;
    regs_regs_0_sva_2 = 30'b0;
    regs_regs_0_sva_sg2 = 30'b0;
    SHIFT_or_7_ssc = 1'b0;
    regs_regs_1_sva_2 = 30'b0;
    regs_regs_1_sva_sg2 = 30'b0;
    SHIFT_and_44_ssc = 1'b0;
    SHIFT_i_1_lpi_3 = 2'b0;
    rx_2_lpi_3 = 1'b0;
    rx_2_lpi_1_sg1 = 15'b0;
    rx_0_lpi_3 = 1'b0;
    rx_0_lpi_1_sg1 = 15'b0;
    ACC1_and_15_ssc = 1'b0;
    ACC1_and_14_ssc = 1'b0;
    ACC1_and_13_ssc = 1'b0;
    SHIFT_nand_16_ssc = 1'b0;
    gx_2_lpi_3 = 1'b0;
    gx_2_lpi_1_sg1 = 15'b0;
    gx_0_lpi_3 = 1'b0;
    gx_0_lpi_1_sg1 = 15'b0;
    bx_2_lpi_3 = 1'b0;
    bx_2_lpi_1_sg1 = 15'b0;
    bx_0_lpi_3 = 1'b0;
    bx_0_lpi_1_sg1 = 15'b0;
    ry_2_lpi_3 = 1'b0;
    ry_2_lpi_1_sg1 = 15'b0;
    ry_0_lpi_3 = 1'b0;
    ry_0_lpi_1_sg1 = 15'b0;
    ACC2_and_3_ssc = 1'b0;
    ACC2_and_2_ssc = 1'b0;
    ACC2_and_1_ssc = 1'b0;
    SHIFT_or_ssc = 1'b0;
    gy_2_lpi_3 = 1'b0;
    gy_2_lpi_1_sg1 = 15'b0;
    gy_0_lpi_3 = 1'b0;
    gy_0_lpi_1_sg1 = 15'b0;
    by_2_lpi_3 = 1'b0;
    by_2_lpi_1_sg1 = 15'b0;
    by_0_lpi_3 = 1'b0;
    by_0_lpi_1_sg1 = 15'b0;
    main_stage_0_2 = 1'b0;
    exit_ACC4_sva_2_st_1 = 1'b0;
    exit_ACC2_lpi_1_dfm_st_1 = 1'b0;
    exit_ACC1_lpi_1_dfm_st_1 = 1'b0;
    exit_SHIFT_lpi_1_dfm_st_1 = 1'b0;
    FRAME_avg_slc_acc_imod_7_itm_1 = 1'b0;
    FRAME_avg_slc_acc_imod_7_itm = 1'b0;
    FRAME_avg_slc_acc_idiv_42_itm_1 = 1'b0;
    FRAME_avg_slc_acc_idiv_42_itm = 1'b0;
    FRAME_avg_slc_acc_idiv_60_itm_1 = 1'b0;
    FRAME_avg_slc_acc_idiv_60_itm = 1'b0;
    FRAME_avg_slc_acc_idiv_59_itm_1 = 1'b0;
    FRAME_avg_slc_acc_idiv_59_itm = 1'b0;
    FRAME_avg_slc_acc_idiv_44_itm_1 = 1'b0;
    FRAME_avg_slc_acc_idiv_44_itm = 1'b0;
    FRAME_avg_slc_acc_idiv_66_itm_1 = 1'b0;
    FRAME_avg_slc_acc_idiv_66_itm = 1'b0;
    FRAME_avg_slc_acc_idiv_65_itm_1 = 1'b0;
    FRAME_avg_slc_acc_idiv_65_itm = 1'b0;
    FRAME_avg_slc_acc_idiv_64_itm_1 = 1'b0;
    FRAME_avg_slc_acc_idiv_64_itm = 1'b0;
    FRAME_avg_slc_acc_idiv_46_itm_1 = 1'b0;
    FRAME_avg_slc_acc_idiv_46_itm = 1'b0;
    FRAME_avg_slc_acc_idiv_74_itm_1 = 1'b0;
    FRAME_avg_slc_acc_idiv_74_itm = 1'b0;
    FRAME_avg_slc_acc_idiv_73_itm_1 = 1'b0;
    FRAME_avg_slc_acc_idiv_73_itm = 1'b0;
    FRAME_avg_slc_acc_idiv_72_itm_1 = 1'b0;
    FRAME_avg_slc_acc_idiv_72_itm = 1'b0;
    FRAME_avg_slc_acc_idiv_71_itm_1 = 1'b0;
    FRAME_avg_slc_acc_idiv_71_itm = 1'b0;
    FRAME_avg_slc_acc_idiv_48_itm_1 = 1'b0;
    FRAME_avg_slc_acc_idiv_48_itm = 1'b0;
    FRAME_avg_slc_acc_idiv_84_itm_1 = 1'b0;
    FRAME_avg_slc_acc_idiv_84_itm = 1'b0;
    FRAME_avg_slc_acc_idiv_83_itm_1 = 1'b0;
    FRAME_avg_slc_acc_idiv_83_itm = 1'b0;
    FRAME_avg_slc_acc_idiv_82_itm_1 = 1'b0;
    FRAME_avg_slc_acc_idiv_82_itm = 1'b0;
    FRAME_avg_slc_acc_idiv_81_itm_1 = 1'b0;
    FRAME_avg_slc_acc_idiv_81_itm = 1'b0;
    FRAME_avg_slc_acc_idiv_80_itm_1 = 1'b0;
    FRAME_avg_slc_acc_idiv_80_itm = 1'b0;
    FRAME_avg_slc_13_itm_1 = 6'b0;
    FRAME_avg_slc_13_itm = 6'b0;
    FRAME_avg_slc_acc_idiv_43_itm_1 = 1'b0;
    FRAME_avg_slc_acc_idiv_43_itm = 1'b0;
    FRAME_avg_slc_acc_idiv_63_itm_1 = 1'b0;
    FRAME_avg_slc_acc_idiv_63_itm = 1'b0;
    FRAME_avg_slc_acc_idiv_62_itm_1 = 1'b0;
    FRAME_avg_slc_acc_idiv_62_itm = 1'b0;
    FRAME_avg_slc_acc_idiv_61_itm_1 = 1'b0;
    FRAME_avg_slc_acc_idiv_61_itm = 1'b0;
    FRAME_avg_slc_acc_idiv_45_itm_1 = 1'b0;
    FRAME_avg_slc_acc_idiv_45_itm = 1'b0;
    FRAME_avg_slc_acc_idiv_70_itm_1 = 1'b0;
    FRAME_avg_slc_acc_idiv_70_itm = 1'b0;
    FRAME_avg_slc_acc_idiv_69_itm_1 = 1'b0;
    FRAME_avg_slc_acc_idiv_69_itm = 1'b0;
    FRAME_avg_slc_acc_idiv_68_itm_1 = 1'b0;
    FRAME_avg_slc_acc_idiv_68_itm = 1'b0;
    FRAME_avg_slc_acc_idiv_67_itm_1 = 1'b0;
    FRAME_avg_slc_acc_idiv_67_itm = 1'b0;
    FRAME_avg_slc_acc_idiv_47_itm_1 = 1'b0;
    FRAME_avg_slc_acc_idiv_47_itm = 1'b0;
    FRAME_avg_slc_acc_idiv_79_itm_1 = 1'b0;
    FRAME_avg_slc_acc_idiv_79_itm = 1'b0;
    FRAME_avg_slc_acc_idiv_78_itm_1 = 1'b0;
    FRAME_avg_slc_acc_idiv_78_itm = 1'b0;
    FRAME_avg_slc_acc_idiv_77_itm_1 = 1'b0;
    FRAME_avg_slc_acc_idiv_77_itm = 1'b0;
    FRAME_avg_slc_acc_idiv_76_itm_1 = 1'b0;
    FRAME_avg_slc_acc_idiv_76_itm = 1'b0;
    FRAME_avg_slc_acc_idiv_75_itm_1 = 1'b0;
    FRAME_avg_slc_acc_idiv_75_itm = 1'b0;
    FRAME_avg_slc_acc_idiv_49_itm_1 = 1'b0;
    FRAME_avg_slc_acc_idiv_49_itm = 1'b0;
    FRAME_avg_slc_acc_idiv_90_itm_1 = 1'b0;
    FRAME_avg_slc_acc_idiv_90_itm = 1'b0;
    FRAME_avg_slc_acc_idiv_89_itm_1 = 1'b0;
    FRAME_avg_slc_acc_idiv_89_itm = 1'b0;
    FRAME_avg_slc_acc_idiv_88_itm_1 = 1'b0;
    FRAME_avg_slc_acc_idiv_88_itm = 1'b0;
    FRAME_avg_slc_acc_idiv_87_itm_1 = 1'b0;
    FRAME_avg_slc_acc_idiv_87_itm = 1'b0;
    FRAME_avg_slc_acc_idiv_86_itm_1 = 1'b0;
    FRAME_avg_slc_acc_idiv_86_itm = 1'b0;
    FRAME_avg_slc_acc_idiv_85_itm_1 = 1'b0;
    FRAME_avg_slc_acc_idiv_85_itm = 1'b0;
    FRAME_avg_acc_25_itm_1 = 16'b0;
    FRAME_avg_acc_25_itm = 16'b0;
    FRAME_avg_slc_acc_imod_itm_1 = 1'b0;
    FRAME_avg_slc_acc_imod_itm = 1'b0;
    FRAME_avg_slc_10_itm_1 = 3'b0;
    FRAME_avg_slc_10_itm = 3'b0;
    exit_ACC4_sva_2_st = 1'b0;
    exit_ACC2_lpi_1_dfm_st = 1'b0;
    exit_ACC1_lpi_1_dfm_st = 1'b0;
    SHIFT_and_26_m1c = 1'b0;
    SHIFT_nand_tmp = 1'b0;
    SHIFT_acc_1_psp = 2'b0;
    i_6_lpi_1_dfm_1 = 2'b0;
    unequal_tmp = 1'b0;
    i_8_lpi_1_dfm_1 = 2'b0;
    i_7_lpi_1_dfm_1 = 2'b0;
    exit_ACC1_sva_1 = 1'b0;
    i_6_sva = 2'b0;
    nor_tmp_1 = 1'b0;
    bx_2_sva_3 = 16'b0;
    gx_2_sva_3 = 16'b0;
    rx_2_sva_3 = 16'b0;
    bx_0_sva_3 = 16'b0;
    gx_0_sva_3 = 16'b0;
    rx_0_sva_3 = 16'b0;
    equal_tmp_3 = 1'b0;
    equal_tmp_2 = 1'b0;
    bx_2_sva_1 = 16'b0;
    gx_2_sva_1 = 16'b0;
    rx_2_sva_1 = 16'b0;
    bx_0_sva_1 = 16'b0;
    gx_0_sva_1 = 16'b0;
    rx_0_sva_1 = 16'b0;
    i_5_lpi_1_dfm = 2'b0;
    exit_ACC2_sva_1 = 1'b0;
    i_8_sva = 2'b0;
    nor_tmp = 1'b0;
    by_2_sva_3 = 16'b0;
    gy_2_sva_3 = 16'b0;
    ry_2_sva_3 = 16'b0;
    by_0_sva_3 = 16'b0;
    gy_0_sva_3 = 16'b0;
    ry_0_sva_3 = 16'b0;
    equal_tmp_1 = 1'b0;
    equal_tmp = 1'b0;
    by_2_sva_1 = 16'b0;
    gy_2_sva_1 = 16'b0;
    ry_2_sva_1 = 16'b0;
    by_0_sva_1 = 16'b0;
    gy_0_sva_1 = 16'b0;
    ry_0_sva_1 = 16'b0;
    i_7_sva = 2'b0;
    blue_sva_2 = 16'b0;
    green_sva_2 = 16'b0;
    red_sva_2 = 16'b0;
    absmax_absmax_return_4_sva_2 = 10'b0;
    absmax_3_else_slc_svs = 1'b0;
    absmax_3_slc_svs = 1'b0;
    FRAME_avg_sva = 16'b0;
    acc_imod_1_sva = 3'b0;
    acc_imod_sva = 5'b0;
    acc_psp_sva = 17'b0;
    absmax_absmax_return_2_sva_2 = 16'b0;
    absmax_2_else_slc_svs = 1'b0;
    absmax_2_slc_svs = 1'b0;
    absmax_absmax_return_1_sva_2 = 16'b0;
    absmax_1_else_slc_svs = 1'b0;
    absmax_1_slc_svs = 1'b0;
    absmax_absmax_return_sva_2 = 16'b0;
    absmax_else_slc_svs = 1'b0;
    absmax_slc_svs = 1'b0;
    exit_ACC4_sva_2 = 1'b0;
    i_5_sva = 2'b0;
    blue_sva_1 = 16'b0;
    green_sva_1 = 16'b0;
    red_sva_1 = 16'b0;
    exit_SHIFT_lpi_1_dfm = 1'b0;
    exit_ACC1_lpi_1_dfm = 1'b0;
    exit_ACC2_lpi_1_dfm = 1'b0;
    blue_lpi_1_dfm = 16'b0;
    green_lpi_1_dfm = 16'b0;
    red_lpi_1_dfm = 16'b0;
    regs_operator_din_sva = 90'b0;
    exit_ACC4_sva = 1'b0;
    i_6_lpi_1 = 2'b0;
    i_8_lpi_1 = 2'b0;
    i_7_lpi_1 = 2'b0;
    i_5_lpi_1 = 2'b0;
    exit_SHIFT_lpi_1 = 1'b0;
    exit_ACC1_lpi_1 = 1'b0;
    exit_ACC2_lpi_1 = 1'b0;
    blue_lpi_1 = 16'b0;
    green_lpi_1 = 16'b0;
    red_lpi_1 = 16'b0;
    vout_rsc_mgc_out_stdreg_d <= 10'b0;
  end


  function [7:0] readslicef_9_8_1;
    input [8:0] vector;
    reg [8:0] tmp;
  begin
    tmp = vector >> 1;
    readslicef_9_8_1 = tmp[7:0];
  end
  endfunction


  function [6:0] readslicef_8_7_1;
    input [7:0] vector;
    reg [7:0] tmp;
  begin
    tmp = vector >> 1;
    readslicef_8_7_1 = tmp[6:0];
  end
  endfunction


  function [0:0] readslicef_3_1_2;
    input [2:0] vector;
    reg [2:0] tmp;
  begin
    tmp = vector >> 2;
    readslicef_3_1_2 = tmp[0:0];
  end
  endfunction


  function [8:0] readslicef_10_9_1;
    input [9:0] vector;
    reg [9:0] tmp;
  begin
    tmp = vector >> 1;
    readslicef_10_9_1 = tmp[8:0];
  end
  endfunction


  function [0:0] readslicef_7_1_6;
    input [6:0] vector;
    reg [6:0] tmp;
  begin
    tmp = vector >> 6;
    readslicef_7_1_6 = tmp[0:0];
  end
  endfunction


  function [0:0] readslicef_17_1_16;
    input [16:0] vector;
    reg [16:0] tmp;
  begin
    tmp = vector >> 16;
    readslicef_17_1_16 = tmp[0:0];
  end
  endfunction


  function [9:0] MUX_v_10_2_2;
    input [19:0] inputs;
    input [0:0] sel;
    reg [9:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = inputs[19:10];
      end
      1'b1 : begin
        result = inputs[9:0];
      end
      default : begin
        result = inputs[19:10];
      end
    endcase
    MUX_v_10_2_2 = result;
  end
  endfunction


  function [15:0] signext_16_1;
    input [0:0] vector;
  begin
    signext_16_1= {{15{vector[0]}}, vector};
  end
  endfunction


  function [14:0] signext_15_1;
    input [0:0] vector;
  begin
    signext_15_1= {{14{vector[0]}}, vector};
  end
  endfunction


  function [29:0] MUX_v_30_2_2;
    input [59:0] inputs;
    input [0:0] sel;
    reg [29:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = inputs[59:30];
      end
      1'b1 : begin
        result = inputs[29:0];
      end
      default : begin
        result = inputs[59:30];
      end
    endcase
    MUX_v_30_2_2 = result;
  end
  endfunction


  function [1:0] MUX_v_2_2_2;
    input [3:0] inputs;
    input [0:0] sel;
    reg [1:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = inputs[3:2];
      end
      1'b1 : begin
        result = inputs[1:0];
      end
      default : begin
        result = inputs[3:2];
      end
    endcase
    MUX_v_2_2_2 = result;
  end
  endfunction


  function [14:0] MUX_v_15_4_2;
    input [59:0] inputs;
    input [1:0] sel;
    reg [14:0] result;
  begin
    case (sel)
      2'b00 : begin
        result = inputs[59:45];
      end
      2'b01 : begin
        result = inputs[44:30];
      end
      2'b10 : begin
        result = inputs[29:15];
      end
      2'b11 : begin
        result = inputs[14:0];
      end
      default : begin
        result = inputs[59:45];
      end
    endcase
    MUX_v_15_4_2 = result;
  end
  endfunction


  function [0:0] MUX_s_1_4_2;
    input [3:0] inputs;
    input [1:0] sel;
    reg [0:0] result;
  begin
    case (sel)
      2'b00 : begin
        result = inputs[3:3];
      end
      2'b01 : begin
        result = inputs[2:2];
      end
      2'b10 : begin
        result = inputs[1:1];
      end
      2'b11 : begin
        result = inputs[0:0];
      end
      default : begin
        result = inputs[3:3];
      end
    endcase
    MUX_s_1_4_2 = result;
  end
  endfunction


  function [15:0] MUX1HOT_v_16_3_2;
    input [47:0] inputs;
    input [2:0] sel;
    reg [15:0] result;
    integer i;
  begin
    result = inputs[0+:16] & {16{sel[0]}};
    for( i = 1; i < 3; i = i + 1 )
      result = result | (inputs[i*16+:16] & {16{sel[i]}});
    MUX1HOT_v_16_3_2 = result;
  end
  endfunction


  function [4:0] readslicef_6_5_1;
    input [5:0] vector;
    reg [5:0] tmp;
  begin
    tmp = vector >> 1;
    readslicef_6_5_1 = tmp[4:0];
  end
  endfunction


  function [3:0] readslicef_5_4_1;
    input [4:0] vector;
    reg [4:0] tmp;
  begin
    tmp = vector >> 1;
    readslicef_5_4_1 = tmp[3:0];
  end
  endfunction


  function [2:0] readslicef_4_3_1;
    input [3:0] vector;
    reg [3:0] tmp;
  begin
    tmp = vector >> 1;
    readslicef_4_3_1 = tmp[2:0];
  end
  endfunction


  function [1:0] readslicef_3_2_1;
    input [2:0] vector;
    reg [2:0] tmp;
  begin
    tmp = vector >> 1;
    readslicef_3_2_1 = tmp[1:0];
  end
  endfunction


  function [1:0] signext_2_1;
    input [0:0] vector;
  begin
    signext_2_1= {{1{vector[0]}}, vector};
  end
  endfunction


  function [5:0] readslicef_7_6_1;
    input [6:0] vector;
    reg [6:0] tmp;
  begin
    tmp = vector >> 1;
    readslicef_7_6_1 = tmp[5:0];
  end
  endfunction


  function [15:0] readslicef_17_16_1;
    input [16:0] vector;
    reg [16:0] tmp;
  begin
    tmp = vector >> 1;
    readslicef_17_16_1 = tmp[15:0];
  end
  endfunction


  function [14:0] readslicef_16_15_1;
    input [15:0] vector;
    reg [15:0] tmp;
  begin
    tmp = vector >> 1;
    readslicef_16_15_1 = tmp[14:0];
  end
  endfunction


  function [0:0] MUX1HOT_s_1_3_2;
    input [2:0] inputs;
    input [2:0] sel;
    reg [0:0] result;
    integer i;
  begin
    result = inputs[0+:1] & {1{sel[0]}};
    for( i = 1; i < 3; i = i + 1 )
      result = result | (inputs[i*1+:1] & {1{sel[i]}});
    MUX1HOT_s_1_3_2 = result;
  end
  endfunction


  function [14:0] MUX1HOT_v_15_4_2;
    input [59:0] inputs;
    input [3:0] sel;
    reg [14:0] result;
    integer i;
  begin
    result = inputs[0+:15] & {15{sel[0]}};
    for( i = 1; i < 4; i = i + 1 )
      result = result | (inputs[i*15+:15] & {15{sel[i]}});
    MUX1HOT_v_15_4_2 = result;
  end
  endfunction


  function [1:0] MUX1HOT_v_2_3_2;
    input [5:0] inputs;
    input [2:0] sel;
    reg [1:0] result;
    integer i;
  begin
    result = inputs[0+:2] & {2{sel[0]}};
    for( i = 1; i < 3; i = i + 1 )
      result = result | (inputs[i*2+:2] & {2{sel[i]}});
    MUX1HOT_v_2_3_2 = result;
  end
  endfunction


  function [0:0] MUX_s_1_2_2;
    input [1:0] inputs;
    input [0:0] sel;
    reg [0:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = inputs[1:1];
      end
      1'b1 : begin
        result = inputs[0:0];
      end
      default : begin
        result = inputs[1:1];
      end
    endcase
    MUX_s_1_2_2 = result;
  end
  endfunction


  function  [15:0] conv_s2u_15_16 ;
    input signed [14:0]  vector ;
  begin
    conv_s2u_15_16 = {vector[14], vector};
  end
  endfunction


  function signed [14:0] conv_u2s_13_15 ;
    input [12:0]  vector ;
  begin
    conv_u2s_13_15 = {{2{1'b0}}, vector};
  end
  endfunction


  function  [11:0] conv_u2u_9_12 ;
    input [8:0]  vector ;
  begin
    conv_u2u_9_12 = {{3{1'b0}}, vector};
  end
  endfunction


  function  [11:0] conv_u2u_11_12 ;
    input [10:0]  vector ;
  begin
    conv_u2u_11_12 = {1'b0, vector};
  end
  endfunction


  function  [8:0] conv_u2u_8_9 ;
    input [7:0]  vector ;
  begin
    conv_u2u_8_9 = {1'b0, vector};
  end
  endfunction


  function  [7:0] conv_u2u_7_8 ;
    input [6:0]  vector ;
  begin
    conv_u2u_7_8 = {1'b0, vector};
  end
  endfunction


  function signed [2:0] conv_u2s_2_3 ;
    input [1:0]  vector ;
  begin
    conv_u2s_2_3 = {1'b0, vector};
  end
  endfunction


  function signed [14:0] conv_s2s_13_15 ;
    input signed [12:0]  vector ;
  begin
    conv_s2s_13_15 = {{2{vector[12]}}, vector};
  end
  endfunction


  function signed [12:0] conv_u2s_12_13 ;
    input [11:0]  vector ;
  begin
    conv_u2s_12_13 = {1'b0, vector};
  end
  endfunction


  function signed [12:0] conv_s2s_11_13 ;
    input signed [10:0]  vector ;
  begin
    conv_s2s_11_13 = {{2{vector[10]}}, vector};
  end
  endfunction


  function signed [10:0] conv_u2s_10_11 ;
    input [9:0]  vector ;
  begin
    conv_u2s_10_11 = {1'b0, vector};
  end
  endfunction


  function signed [10:0] conv_s2s_9_11 ;
    input signed [8:0]  vector ;
  begin
    conv_s2s_9_11 = {{2{vector[8]}}, vector};
  end
  endfunction


  function signed [9:0] conv_u2s_9_10 ;
    input [8:0]  vector ;
  begin
    conv_u2s_9_10 = {1'b0, vector};
  end
  endfunction


  function signed [9:0] conv_s2s_8_10 ;
    input signed [7:0]  vector ;
  begin
    conv_s2s_8_10 = {{2{vector[7]}}, vector};
  end
  endfunction


  function signed [7:0] conv_u2s_7_8 ;
    input [6:0]  vector ;
  begin
    conv_u2s_7_8 = {1'b0, vector};
  end
  endfunction


  function signed [7:0] conv_s2s_5_8 ;
    input signed [4:0]  vector ;
  begin
    conv_s2s_5_8 = {{3{vector[4]}}, vector};
  end
  endfunction


  function  [6:0] conv_s2u_6_7 ;
    input signed [5:0]  vector ;
  begin
    conv_s2u_6_7 = {vector[5], vector};
  end
  endfunction


  function signed [16:0] conv_s2s_16_17 ;
    input signed [15:0]  vector ;
  begin
    conv_s2s_16_17 = {vector[15], vector};
  end
  endfunction


  function  [16:0] conv_u2u_16_17 ;
    input [15:0]  vector ;
  begin
    conv_u2u_16_17 = {1'b0, vector};
  end
  endfunction


  function signed [5:0] conv_u2s_5_6 ;
    input [4:0]  vector ;
  begin
    conv_u2s_5_6 = {1'b0, vector};
  end
  endfunction


  function  [4:0] conv_u2u_4_5 ;
    input [3:0]  vector ;
  begin
    conv_u2u_4_5 = {1'b0, vector};
  end
  endfunction


  function  [3:0] conv_u2u_3_4 ;
    input [2:0]  vector ;
  begin
    conv_u2u_3_4 = {1'b0, vector};
  end
  endfunction


  function  [2:0] conv_u2u_2_3 ;
    input [1:0]  vector ;
  begin
    conv_u2u_2_3 = {1'b0, vector};
  end
  endfunction


  function signed [5:0] conv_s2s_5_6 ;
    input signed [4:0]  vector ;
  begin
    conv_s2s_5_6 = {vector[4], vector};
  end
  endfunction


  function  [3:0] conv_u2u_2_4 ;
    input [1:0]  vector ;
  begin
    conv_u2u_2_4 = {{2{1'b0}}, vector};
  end
  endfunction


  function  [15:0] conv_u2u_15_16 ;
    input [14:0]  vector ;
  begin
    conv_u2u_15_16 = {1'b0, vector};
  end
  endfunction


  function  [15:0] conv_u2u_14_16 ;
    input [13:0]  vector ;
  begin
    conv_u2u_14_16 = {{2{1'b0}}, vector};
  end
  endfunction


  function  [6:0] conv_u2u_6_7 ;
    input [5:0]  vector ;
  begin
    conv_u2u_6_7 = {1'b0, vector};
  end
  endfunction


  function  [5:0] conv_u2u_5_6 ;
    input [4:0]  vector ;
  begin
    conv_u2u_5_6 = {1'b0, vector};
  end
  endfunction


  function  [5:0] conv_u2u_4_6 ;
    input [3:0]  vector ;
  begin
    conv_u2u_4_6 = {{2{1'b0}}, vector};
  end
  endfunction


  function signed [4:0] conv_u2s_4_5 ;
    input [3:0]  vector ;
  begin
    conv_u2s_4_5 = {1'b0, vector};
  end
  endfunction


  function  [4:0] conv_u2u_3_5 ;
    input [2:0]  vector ;
  begin
    conv_u2u_3_5 = {{2{1'b0}}, vector};
  end
  endfunction


  function signed [16:0] conv_s2s_12_17 ;
    input signed [11:0]  vector ;
  begin
    conv_s2s_12_17 = {{5{vector[11]}}, vector};
  end
  endfunction


  function signed [15:0] conv_u2s_10_16 ;
    input [9:0]  vector ;
  begin
    conv_u2s_10_16 = {{6{1'b0}}, vector};
  end
  endfunction


  function  [15:0] conv_s2u_12_16 ;
    input signed [11:0]  vector ;
  begin
    conv_s2u_12_16 = {{4{vector[11]}}, vector};
  end
  endfunction


  function  [14:0] conv_u2u_10_15 ;
    input [9:0]  vector ;
  begin
    conv_u2u_10_15 = {{5{1'b0}}, vector};
  end
  endfunction

endmodule

// ------------------------------------------------------------------
//  Design Unit:    edge_detect
//  Generated from file(s):
//    3) $PROJECT_HOME/edge_detection.c
// ------------------------------------------------------------------


module edge_detect (
  vin_rsc_z, vout_rsc_z, clk, en, arst_n
);
  input [89:0] vin_rsc_z;
  output [9:0] vout_rsc_z;
  input clk;
  input en;
  input arst_n;


  // Interconnect Declarations
  wire [89:0] vin_rsc_mgc_in_wire_d;
  wire [9:0] vout_rsc_mgc_out_stdreg_d;


  // Interconnect Declarations for Component Instantiations 
  mgc_in_wire #(.rscid(1),
  .width(90)) vin_rsc_mgc_in_wire (
      .d(vin_rsc_mgc_in_wire_d),
      .z(vin_rsc_z)
    );
  mgc_out_stdreg #(.rscid(2),
  .width(10)) vout_rsc_mgc_out_stdreg (
      .d(vout_rsc_mgc_out_stdreg_d),
      .z(vout_rsc_z)
    );
  edge_detect_core edge_detect_core_inst (
      .clk(clk),
      .en(en),
      .arst_n(arst_n),
      .vin_rsc_mgc_in_wire_d(vin_rsc_mgc_in_wire_d),
      .vout_rsc_mgc_out_stdreg_d(vout_rsc_mgc_out_stdreg_d)
    );
endmodule



