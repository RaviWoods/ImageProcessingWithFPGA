// ----------------------------------------------------------------------
//  HLS HDL:        Verilog Netlister
//  HLS Version:    2011a.126 Production Release
//  HLS Date:       Wed Aug  8 00:52:07 PDT 2012
// 
//  Generated by:   rbw14@EEWS104A-013
//  Generated date: Wed May 06 12:05:37 2015
// ----------------------------------------------------------------------

// 
// ------------------------------------------------------------------
//  Design Unit:    edge_detect_core
// ------------------------------------------------------------------


module edge_detect_core (
  clk, en, arst_n, vin_rsc_mgc_in_wire_d, vout_rsc_mgc_out_stdreg_d
);
  input clk;
  input en;
  input arst_n;
  input [89:0] vin_rsc_mgc_in_wire_d;
  output [29:0] vout_rsc_mgc_out_stdreg_d;
  reg [29:0] vout_rsc_mgc_out_stdreg_d;



  // Interconnect Declarations for Component Instantiations 
  always @(*)
  begin : core
    // Interconnect Declarations
    reg [15:0] redx_lpi_1;
    reg [15:0] redy_lpi_1;
    reg [15:0] greenx_lpi_1;
    reg [15:0] greeny_lpi_1;
    reg [15:0] bluex_lpi_1;
    reg [15:0] bluey_lpi_1;
    reg [15:0] blue_y_1_lpi_1;
    reg [15:0] blue_y_0_lpi_1;
    reg [15:0] blue_y_2_lpi_1;
    reg [15:0] green_y_1_lpi_1;
    reg [15:0] green_y_0_lpi_1;
    reg [15:0] green_y_2_lpi_1;
    reg [15:0] red_y_1_lpi_1;
    reg [15:0] red_y_0_lpi_1;
    reg [15:0] red_y_2_lpi_1;
    reg [15:0] blue_x_1_lpi_1;
    reg [15:0] blue_x_0_lpi_1;
    reg [15:0] blue_x_2_lpi_1;
    reg [15:0] green_x_1_lpi_1;
    reg [15:0] green_x_0_lpi_1;
    reg [15:0] green_x_2_lpi_1;
    reg [15:0] red_x_1_lpi_1;
    reg [15:0] red_x_0_lpi_1;
    reg [15:0] red_x_2_lpi_1;
    reg exit_ACC_GX_1_lpi_1;
    reg exit_SHIFT_lpi_1;
    reg [1:0] FRAME_a_4_lpi_1;
    reg [1:0] FRAME_a_5_lpi_1;
    reg [1:0] FRAME_a_6_lpi_1;
    reg [1:0] FRAME_i_3_lpi_1;
    reg [1:0] FRAME_i_2_lpi_1;
    reg [89:0] regs_regs_1_sva;
    reg [89:0] regs_regs_0_sva;
    reg [89:0] regs_regs_2_sva;
    reg exit_ACC3_sva;
    reg [89:0] regs_operator_din_sva;
    reg [15:0] redx_lpi_1_dfm;
    reg [15:0] greenx_lpi_1_dfm;
    reg [15:0] bluex_lpi_1_dfm;
    reg [15:0] redy_lpi_1_dfm;
    reg [15:0] greeny_lpi_1_dfm;
    reg [15:0] bluey_lpi_1_dfm;
    reg [15:0] red_x_0_lpi_1_dfm;
    reg [15:0] red_x_1_lpi_1_dfm;
    reg [15:0] red_x_2_lpi_1_dfm;
    reg [15:0] green_x_0_lpi_1_dfm;
    reg [15:0] green_x_1_lpi_1_dfm;
    reg [15:0] green_x_2_lpi_1_dfm;
    reg [15:0] blue_x_0_lpi_1_dfm;
    reg [15:0] blue_x_1_lpi_1_dfm;
    reg [15:0] blue_x_2_lpi_1_dfm;
    reg [15:0] red_y_0_lpi_1_dfm;
    reg [15:0] red_y_1_lpi_1_dfm;
    reg [15:0] red_y_2_lpi_1_dfm;
    reg [15:0] green_y_0_lpi_1_dfm;
    reg [15:0] green_y_1_lpi_1_dfm;
    reg [15:0] green_y_2_lpi_1_dfm;
    reg [15:0] blue_y_0_lpi_1_dfm;
    reg [15:0] blue_y_1_lpi_1_dfm;
    reg [15:0] blue_y_2_lpi_1_dfm;
    reg [89:0] regs_operator_din_lpi_1_dfm;
    reg exit_ACC_GX_1_lpi_1_dfm;
    reg exit_SHIFT_lpi_1_dfm;
    reg [15:0] redx_sva_1;
    reg [15:0] redy_sva_1;
    reg [15:0] bluex_sva_1;
    reg [15:0] bluey_sva_1;
    reg [15:0] greenx_sva_1;
    reg [15:0] greeny_sva_1;
    reg [1:0] FRAME_a_4_sva;
    reg exit_ACC3_sva_2;
    reg AbsAndMax_slc_svs;
    reg [15:0] AbsAndMax_AbsAndMax_return_sva_1;
    reg AbsAndMax_1_slc_svs;
    reg [15:0] AbsAndMax_AbsAndMax_return_1_sva_1;
    reg AbsAndMax_2_slc_svs;
    reg [15:0] AbsAndMax_AbsAndMax_return_2_sva_1;
    reg AbsAndMax_3_slc_svs;
    reg [15:0] AbsAndMax_AbsAndMax_return_3_sva_1;
    reg AbsAndMax_4_slc_svs;
    reg [15:0] AbsAndMax_AbsAndMax_return_4_sva_1;
    reg AbsAndMax_5_slc_svs;
    reg [15:0] AbsAndMax_AbsAndMax_return_5_sva_1;
    reg [15:0] AbsAndMax_x_6_sva;
    reg AbsAndMax_6_slc_svs;
    reg [15:0] AbsAndMax_AbsAndMax_return_6_sva_1;
    reg [15:0] AbsAndMax_x_7_sva;
    reg AbsAndMax_7_slc_svs;
    reg [15:0] AbsAndMax_AbsAndMax_return_7_sva_1;
    reg [15:0] AbsAndMax_x_8_sva;
    reg AbsAndMax_8_slc_svs;
    reg [15:0] AbsAndMax_AbsAndMax_return_8_sva_1;
    reg [16:0] acc_psp_sva;
    reg [4:0] acc_imod_sva;
    reg [2:0] acc_imod_1_sva;
    reg [15:0] FRAME_ac_int_cctor_15_sva;
    reg [4:0] ACC_GX_for_acc_13_psp_sva;
    reg [2:0] ACC_GX_for_acc_14_psp_sva;
    reg [89:0] regs_operator_slc_regs_regs_cse_sva;
    reg [15:0] ACC_GX_for_acc_1_ctmp_sva;
    reg [2:0] ACC_GX_for_slc_gx_rom_10_1_cse_sva;
    reg [15:0] ACC_GX_for_acc_4_ctmp_sva;
    reg [15:0] ACC_GX_for_acc_7_ctmp_sva;
    reg [1:0] FRAME_a_5_sva;
    reg [4:0] ACC_GY_for_acc_13_psp_sva;
    reg [2:0] ACC_GY_for_slc_gy_psp_sva;
    reg [89:0] regs_operator_3_slc_regs_regs_cse_sva;
    reg [15:0] ACC_GY_for_acc_1_ctmp_sva;
    reg [15:0] ACC_GY_for_acc_4_ctmp_sva;
    reg [15:0] ACC_GY_for_acc_7_ctmp_sva;
    reg [1:0] FRAME_a_6_sva;
    reg exit_ACC_GX_for_sva;
    reg [1:0] FRAME_i_3_sva;
    reg [1:0] FRAME_i_2_sva;
    reg exit_ACC_GX_sva;
    reg [1:0] FRAME_a_5_lpi_1_dfm;
    reg [1:0] FRAME_a_6_lpi_1_dfm;
    reg exit_ACC_GX_1_sva_1;
    reg [1:0] FRAME_a_4_lpi_1_dfm;
    reg unequal_tmp;
    reg [89:0] SHIFT_if_else_else_else_slc_regs_regs_ctmp_sva;
    reg [1:0] FRAME_i_2_lpi_1_dfm_2;
    reg [1:0] FRAME_a_5_lpi_1_dfm_3;
    reg [1:0] FRAME_a_6_lpi_1_dfm_3;
    reg [1:0] FRAME_i_3_lpi_1_dfm_2;
    reg [1:0] SHIFT_acc_1_psp;
    reg ACC_GX_and_24_tmp;
    reg exit_ACC_GX_1_lpi_1_dfm_st;
    reg exit_ACC3_sva_2_st;
    reg [2:0] FRAME_slc_8_itm;
    reg [2:0] FRAME_slc_8_itm_1;
    reg [2:0] FRAME_slc_9_itm;
    reg [2:0] FRAME_slc_9_itm_1;
    reg FRAME_slc_acc_idiv_37_itm;
    reg FRAME_slc_acc_idiv_37_itm_1;
    reg FRAME_slc_acc_idiv_22_itm;
    reg FRAME_slc_acc_idiv_22_itm_1;
    reg FRAME_slc_acc_idiv_38_itm;
    reg FRAME_slc_acc_idiv_38_itm_1;
    reg [15:0] FRAME_acc_32_itm;
    reg [15:0] FRAME_acc_32_itm_1;
    reg FRAME_slc_acc_idiv_85_itm;
    reg FRAME_slc_acc_idiv_85_itm_1;
    reg FRAME_slc_acc_idiv_86_itm;
    reg FRAME_slc_acc_idiv_86_itm_1;
    reg FRAME_slc_acc_idiv_87_itm;
    reg FRAME_slc_acc_idiv_87_itm_1;
    reg FRAME_slc_acc_idiv_88_itm;
    reg FRAME_slc_acc_idiv_88_itm_1;
    reg FRAME_slc_acc_idiv_89_itm;
    reg FRAME_slc_acc_idiv_89_itm_1;
    reg FRAME_slc_acc_idiv_90_itm;
    reg FRAME_slc_acc_idiv_90_itm_1;
    reg FRAME_slc_acc_idiv_49_itm;
    reg FRAME_slc_acc_idiv_49_itm_1;
    reg FRAME_slc_acc_idiv_75_itm;
    reg FRAME_slc_acc_idiv_75_itm_1;
    reg FRAME_slc_acc_idiv_76_itm;
    reg FRAME_slc_acc_idiv_76_itm_1;
    reg FRAME_slc_acc_idiv_77_itm;
    reg FRAME_slc_acc_idiv_77_itm_1;
    reg FRAME_slc_acc_idiv_78_itm;
    reg FRAME_slc_acc_idiv_78_itm_1;
    reg FRAME_slc_acc_idiv_79_itm;
    reg FRAME_slc_acc_idiv_79_itm_1;
    reg FRAME_slc_acc_idiv_47_itm;
    reg FRAME_slc_acc_idiv_47_itm_1;
    reg FRAME_slc_acc_idiv_67_itm;
    reg FRAME_slc_acc_idiv_67_itm_1;
    reg FRAME_slc_acc_idiv_68_itm;
    reg FRAME_slc_acc_idiv_68_itm_1;
    reg FRAME_slc_acc_idiv_69_itm;
    reg FRAME_slc_acc_idiv_69_itm_1;
    reg FRAME_slc_acc_idiv_70_itm;
    reg FRAME_slc_acc_idiv_70_itm_1;
    reg FRAME_slc_acc_idiv_45_itm;
    reg FRAME_slc_acc_idiv_45_itm_1;
    reg FRAME_slc_acc_idiv_61_itm;
    reg FRAME_slc_acc_idiv_61_itm_1;
    reg FRAME_slc_acc_idiv_62_itm;
    reg FRAME_slc_acc_idiv_62_itm_1;
    reg FRAME_slc_acc_idiv_63_itm;
    reg FRAME_slc_acc_idiv_63_itm_1;
    reg FRAME_slc_acc_idiv_43_itm;
    reg FRAME_slc_acc_idiv_43_itm_1;
    reg [4:0] FRAME_slc_14_itm;
    reg [4:0] FRAME_slc_14_itm_1;
    reg FRAME_slc_acc_idiv_57_itm;
    reg FRAME_slc_acc_idiv_57_itm_1;
    reg FRAME_slc_acc_idiv_58_itm;
    reg FRAME_slc_acc_idiv_58_itm_1;
    reg FRAME_slc_acc_idiv_41_itm;
    reg FRAME_slc_acc_idiv_41_itm_1;
    reg FRAME_slc_acc_idiv_80_itm;
    reg FRAME_slc_acc_idiv_80_itm_1;
    reg FRAME_slc_acc_idiv_81_itm;
    reg FRAME_slc_acc_idiv_81_itm_1;
    reg FRAME_slc_acc_idiv_82_itm;
    reg FRAME_slc_acc_idiv_82_itm_1;
    reg FRAME_slc_acc_idiv_83_itm;
    reg FRAME_slc_acc_idiv_83_itm_1;
    reg FRAME_slc_acc_idiv_84_itm;
    reg FRAME_slc_acc_idiv_84_itm_1;
    reg FRAME_slc_acc_idiv_48_itm;
    reg FRAME_slc_acc_idiv_48_itm_1;
    reg FRAME_slc_acc_idiv_71_itm;
    reg FRAME_slc_acc_idiv_71_itm_1;
    reg FRAME_slc_acc_idiv_72_itm;
    reg FRAME_slc_acc_idiv_72_itm_1;
    reg FRAME_slc_acc_idiv_73_itm;
    reg FRAME_slc_acc_idiv_73_itm_1;
    reg FRAME_slc_acc_idiv_74_itm;
    reg FRAME_slc_acc_idiv_74_itm_1;
    reg FRAME_slc_acc_idiv_46_itm;
    reg FRAME_slc_acc_idiv_46_itm_1;
    reg FRAME_slc_acc_idiv_64_itm;
    reg FRAME_slc_acc_idiv_64_itm_1;
    reg FRAME_slc_acc_idiv_65_itm;
    reg FRAME_slc_acc_idiv_65_itm_1;
    reg FRAME_slc_acc_idiv_66_itm;
    reg FRAME_slc_acc_idiv_66_itm_1;
    reg FRAME_slc_acc_idiv_44_itm;
    reg FRAME_slc_acc_idiv_44_itm_1;
    reg FRAME_slc_acc_idiv_59_itm;
    reg FRAME_slc_acc_idiv_59_itm_1;
    reg FRAME_slc_acc_idiv_60_itm;
    reg FRAME_slc_acc_idiv_60_itm_1;
    reg FRAME_slc_acc_idiv_42_itm;
    reg FRAME_slc_acc_idiv_42_itm_1;
    reg FRAME_slc_acc_idiv_54_itm;
    reg FRAME_slc_acc_idiv_54_itm_1;
    reg FRAME_slc_acc_idiv_53_itm;
    reg FRAME_slc_acc_idiv_53_itm_1;
    reg exit_SHIFT_lpi_1_dfm_st_1;
    reg exit_ACC_GX_1_lpi_1_dfm_st_1;
    reg exit_ACC3_sva_2_st_1;
    reg main_stage_0_2;
    reg [1:0] SHIFT_i_1_lpi_3;
    reg [1:0] SHIFT_i_1_lpi_1_dfm_2;
    reg [2:0] ACC_GY_for_acc_15_sdt;
    reg SHIFT_nand_cse;
    reg SHIFT_and_41_cse;
    reg SHIFT_and_42_cse;
    reg SHIFT_and_43_cse;
    reg SHIFT_and_50_cse;
    reg SHIFT_and_51_cse;
    reg SHIFT_and_52_cse;
    reg SHIFT_and_38_cse;
    reg ACC_GX_and_20_cse;
    reg SHIFT_and_60_cse;
    reg SHIFT_and_65_cse;
    reg SHIFT_and_66_cse;

    reg[15:0] ACC3_mux_nl;
    reg[15:0] ACC3_mux_16_nl;
    reg[15:0] ACC3_mux_17_nl;
    reg[15:0] ACC3_mux_18_nl;
    reg[15:0] ACC3_mux_19_nl;
    reg[15:0] ACC3_mux_20_nl;
    reg[15:0] AbsAndMax_mux1h_nl;
    reg[15:0] AbsAndMax_1_mux1h_nl;
    reg[15:0] AbsAndMax_4_mux1h_nl;
    reg[15:0] AbsAndMax_5_mux1h_nl;
    reg[15:0] AbsAndMax_2_mux1h_nl;
    reg[15:0] AbsAndMax_3_mux1h_nl;
    reg[15:0] AbsAndMax_7_mux1h_nl;
    reg[15:0] AbsAndMax_8_mux1h_nl;
    reg[15:0] AbsAndMax_6_mux1h_nl;
    reg[15:0] ACC_GX_for_mux_nl;
    reg[2:0] ACC_GX_for_mux_15_nl;
    reg[15:0] ACC_GX_for_mux_17_nl;
    reg[9:0] ACC_GX_for_mux_18_nl;
    reg[15:0] ACC_GX_for_mux_19_nl;
    reg[9:0] ACC_GX_for_mux_20_nl;
    reg[15:0] ACC_GY_for_mux_9_nl;
    reg[15:0] ACC_GY_for_mux_10_nl;
    reg[9:0] ACC_GY_for_mux_11_nl;
    reg[15:0] ACC_GY_for_mux_12_nl;
    reg[9:0] ACC_GY_for_mux_13_nl;
    reg[0:0] ACC_GX_mux_67_nl;
    begin : core_rlpExit
      forever begin : core_rlp
        // C-Step 0 of Loop 'core_rlp'
        FRAME_i_2_lpi_1 = 2'b0;
        FRAME_i_3_lpi_1 = 2'b0;
        FRAME_a_6_lpi_1 = 2'b0;
        FRAME_a_5_lpi_1 = 2'b0;
        FRAME_a_4_lpi_1 = 2'b0;
        exit_SHIFT_lpi_1 = 1'b0;
        exit_ACC_GX_1_lpi_1 = 1'b0;
        SHIFT_i_1_lpi_3 = 2'b0;
        red_x_2_lpi_1 = 16'b0;
        red_x_0_lpi_1 = 16'b0;
        red_x_1_lpi_1 = 16'b0;
        green_x_2_lpi_1 = 16'b0;
        green_x_0_lpi_1 = 16'b0;
        green_x_1_lpi_1 = 16'b0;
        blue_x_2_lpi_1 = 16'b0;
        blue_x_0_lpi_1 = 16'b0;
        blue_x_1_lpi_1 = 16'b0;
        red_y_2_lpi_1 = 16'b0;
        red_y_0_lpi_1 = 16'b0;
        red_y_1_lpi_1 = 16'b0;
        green_y_2_lpi_1 = 16'b0;
        green_y_0_lpi_1 = 16'b0;
        green_y_1_lpi_1 = 16'b0;
        blue_y_2_lpi_1 = 16'b0;
        blue_y_0_lpi_1 = 16'b0;
        blue_y_1_lpi_1 = 16'b0;
        bluey_lpi_1 = 16'b0;
        bluex_lpi_1 = 16'b0;
        greeny_lpi_1 = 16'b0;
        greenx_lpi_1 = 16'b0;
        redy_lpi_1 = 16'b0;
        redx_lpi_1 = 16'b0;
        regs_regs_1_sva = 90'b0;
        regs_regs_0_sva = 90'b0;
        regs_regs_2_sva = 90'b0;
        exit_ACC3_sva = 1'b1;
        main_stage_0_2 = 1'b0;
        begin : mainExit
          forever begin : main
            // C-Step 0 of Loop 'main'
            begin : waitLoop0Exit
              forever begin : waitLoop0
                @(posedge clk or negedge ( arst_n ));
                if ( ~ arst_n )
                  disable core_rlpExit;
                if ( en )
                  disable waitLoop0Exit;
              end
            end
            // C-Step 1 of Loop 'main'
            if ( main_stage_0_2 ) begin
              if ( exit_SHIFT_lpi_1_dfm_st_1 ) begin
                if ( exit_ACC_GX_1_lpi_1_dfm_st_1 ) begin
                  if ( exit_ACC3_sva_2_st_1 ) begin
                    acc_imod_sva = readslicef_6_5_1((conv_u2s_5_6({(readslicef_5_4_1((conv_u2u_4_5({FRAME_slc_8_itm_1
                        , 1'b1}) + conv_u2u_4_5({FRAME_slc_9_itm_1 , (~ FRAME_slc_acc_idiv_37_itm_1)}))))
                        , 1'b1}) + conv_s2s_5_6({3'b100 , FRAME_slc_acc_idiv_22_itm_1
                        , FRAME_slc_acc_idiv_38_itm_1})));
                    acc_imod_1_sva = (readslicef_4_3_1((conv_u2u_3_4({(readslicef_3_2_1((conv_u2u_2_3({(acc_imod_sva[2])
                        , 1'b1}) + conv_u2u_2_3({(~ (acc_imod_sva[3])) , 1'b1}))))
                        , 1'b1}) + conv_u2u_2_4({(~ (acc_imod_sva[1])) , (~ (acc_imod_sva[4]))}))))
                        + ({2'b10 , (acc_imod_sva[0])});
                    FRAME_ac_int_cctor_15_sva = FRAME_acc_32_itm_1 + conv_s2u_15_16(conv_u2s_13_15({FRAME_slc_acc_idiv_85_itm_1
                        , (conv_u2u_9_12({FRAME_slc_acc_idiv_76_itm_1 , 1'b0 , FRAME_slc_acc_idiv_88_itm_1
                        , 1'b0 , FRAME_slc_acc_idiv_89_itm_1 , 1'b0 , FRAME_slc_acc_idiv_90_itm_1
                        , 1'b0 , FRAME_slc_acc_idiv_49_itm_1}) + conv_u2u_11_12({FRAME_slc_acc_idiv_86_itm_1
                        , 1'b0 , FRAME_slc_acc_idiv_67_itm_1 , (readslicef_9_8_1((conv_u2u_8_9({FRAME_slc_acc_idiv_68_itm_1
                        , 1'b0 , FRAME_slc_acc_idiv_69_itm_1 , 1'b0 , FRAME_slc_acc_idiv_70_itm_1
                        , 1'b0 , FRAME_slc_acc_idiv_45_itm_1 , 1'b1}) + conv_u2u_8_9({(readslicef_8_7_1((({FRAME_slc_acc_idiv_61_itm_1
                        , 1'b0 , FRAME_slc_acc_idiv_62_itm_1 , 1'b0 , FRAME_slc_acc_idiv_63_itm_1
                        , 1'b0 , FRAME_slc_acc_idiv_43_itm_1 , 1'b1}) + conv_u2u_7_8({(readslicef_7_6_1((conv_u2u_6_7({FRAME_slc_14_itm_1
                        , 1'b1}) + conv_u2u_6_7({FRAME_slc_acc_idiv_57_itm_1 , 1'b0
                        , FRAME_slc_acc_idiv_58_itm_1 , 1'b0 , FRAME_slc_acc_idiv_41_itm_1
                        , (acc_imod_sva[2])})))) , (acc_imod_1_sva[1])})))) , (~
                        (readslicef_3_1_2((({1'b1 , (acc_imod_1_sva[0]) , 1'b1})
                        + conv_u2s_2_3({(~ (acc_imod_1_sva[1])) , (~ (acc_imod_1_sva[2]))})))))}))))})
                        + conv_u2u_11_12({FRAME_slc_acc_idiv_75_itm_1 , 1'b0 , FRAME_slc_acc_idiv_87_itm_1
                        , 1'b0 , FRAME_slc_acc_idiv_77_itm_1 , 1'b0 , FRAME_slc_acc_idiv_78_itm_1
                        , 1'b0 , FRAME_slc_acc_idiv_79_itm_1 , 1'b0 , FRAME_slc_acc_idiv_47_itm_1}))})
                        + conv_s2s_13_15(conv_u2s_12_13({FRAME_slc_acc_idiv_80_itm_1
                        , 1'b0 , FRAME_slc_acc_idiv_81_itm_1 , 1'b0 , FRAME_slc_acc_idiv_82_itm_1
                        , 1'b0 , FRAME_slc_acc_idiv_83_itm_1 , 1'b0 , FRAME_slc_acc_idiv_84_itm_1
                        , 1'b0 , ({{1{FRAME_slc_acc_idiv_48_itm_1}}, FRAME_slc_acc_idiv_48_itm_1})})
                        + conv_s2s_11_13(conv_u2s_10_11({FRAME_slc_acc_idiv_71_itm_1
                        , 1'b0 , FRAME_slc_acc_idiv_72_itm_1 , 1'b0 , FRAME_slc_acc_idiv_73_itm_1
                        , 1'b0 , FRAME_slc_acc_idiv_74_itm_1 , 1'b0 , ({{1{FRAME_slc_acc_idiv_46_itm_1}},
                        FRAME_slc_acc_idiv_46_itm_1})}) + conv_s2s_9_11(readslicef_10_9_1((conv_u2s_9_10({FRAME_slc_acc_idiv_64_itm_1
                        , 1'b0 , FRAME_slc_acc_idiv_65_itm_1 , 1'b0 , FRAME_slc_acc_idiv_66_itm_1
                        , 1'b0 , ({{1{FRAME_slc_acc_idiv_44_itm_1}}, FRAME_slc_acc_idiv_44_itm_1})
                        , 1'b1}) + conv_s2s_8_10({(readslicef_8_7_1((conv_u2s_7_8({FRAME_slc_acc_idiv_59_itm_1
                        , 1'b0 , FRAME_slc_acc_idiv_60_itm_1 , 1'b0 , ({{1{FRAME_slc_acc_idiv_42_itm_1}},
                        FRAME_slc_acc_idiv_42_itm_1}) , 1'b1}) + conv_s2s_5_8({(readslicef_5_4_1((conv_u2s_4_5({2'b11
                        , FRAME_slc_acc_idiv_54_itm_1 , 1'b1}) + ({(readslicef_5_4_1((conv_u2u_4_5({(~
                        (acc_imod_sva[4])) , 1'b1 , (~ (acc_imod_sva[4])) , 1'b1})
                        + conv_u2u_3_5({(acc_imod_sva[3]) , FRAME_slc_acc_idiv_53_itm_1
                        , 1'b1})))) , (acc_imod_sva[1])})))) , (acc_imod_sva[3])}))))
                        , (~ (acc_imod_1_sva[2]))})))))));
                    vout_rsc_mgc_out_stdreg_d <= {((FRAME_ac_int_cctor_15_sva[9:0])
                        | ({4'b0, FRAME_ac_int_cctor_15_sva[15:10]})) , (FRAME_ac_int_cctor_15_sva[9:6])
                        , ((FRAME_ac_int_cctor_15_sva[5:0]) | (FRAME_ac_int_cctor_15_sva[15:10]))
                        , (FRAME_ac_int_cctor_15_sva[9:0])};
                  end
                end
              end
            end
            exit_ACC_GX_sva = 1'b0;
            unequal_tmp = 1'b0;
            SHIFT_if_else_else_else_slc_regs_regs_ctmp_sva = 90'b0;
            SHIFT_acc_1_psp = 2'b0;
            FRAME_i_3_lpi_1_dfm_2 = 2'b0;
            FRAME_a_6_lpi_1_dfm_3 = 2'b0;
            FRAME_a_5_lpi_1_dfm_3 = 2'b0;
            FRAME_i_2_lpi_1_dfm_2 = 2'b0;
            FRAME_a_4_lpi_1_dfm = 2'b0;
            exit_ACC_GX_1_sva_1 = 1'b0;
            FRAME_a_6_lpi_1_dfm = 2'b0;
            FRAME_a_5_lpi_1_dfm = 2'b0;
            FRAME_i_2_sva = 2'b0;
            FRAME_i_3_sva = 2'b0;
            FRAME_a_6_sva = 2'b0;
            ACC_GY_for_acc_7_ctmp_sva = 16'b0;
            ACC_GY_for_acc_4_ctmp_sva = 16'b0;
            ACC_GY_for_acc_1_ctmp_sva = 16'b0;
            FRAME_a_5_sva = 2'b0;
            ACC_GX_for_acc_7_ctmp_sva = 16'b0;
            ACC_GX_for_acc_4_ctmp_sva = 16'b0;
            ACC_GX_for_acc_1_ctmp_sva = 16'b0;
            AbsAndMax_AbsAndMax_return_8_sva_1 = 16'b0;
            AbsAndMax_AbsAndMax_return_7_sva_1 = 16'b0;
            AbsAndMax_AbsAndMax_return_6_sva_1 = 16'b0;
            AbsAndMax_AbsAndMax_return_5_sva_1 = 16'b0;
            AbsAndMax_AbsAndMax_return_4_sva_1 = 16'b0;
            AbsAndMax_AbsAndMax_return_3_sva_1 = 16'b0;
            AbsAndMax_AbsAndMax_return_2_sva_1 = 16'b0;
            AbsAndMax_AbsAndMax_return_1_sva_1 = 16'b0;
            AbsAndMax_AbsAndMax_return_sva_1 = 16'b0;
            exit_ACC3_sva_2 = 1'b0;
            FRAME_a_4_sva = 2'b0;
            greeny_sva_1 = 16'b0;
            greenx_sva_1 = 16'b0;
            bluey_sva_1 = 16'b0;
            bluex_sva_1 = 16'b0;
            redy_sva_1 = 16'b0;
            redx_sva_1 = 16'b0;
            regs_operator_din_sva = 90'b0;
            if ( exit_ACC3_sva ) begin
              regs_operator_din_sva = vin_rsc_mgc_in_wire_d;
            end
            redx_lpi_1_dfm = redx_lpi_1 & (signext_16_1(~ exit_ACC3_sva));
            greenx_lpi_1_dfm = greenx_lpi_1 & (signext_16_1(~ exit_ACC3_sva));
            bluex_lpi_1_dfm = bluex_lpi_1 & (signext_16_1(~ exit_ACC3_sva));
            redy_lpi_1_dfm = redy_lpi_1 & (signext_16_1(~ exit_ACC3_sva));
            greeny_lpi_1_dfm = greeny_lpi_1 & (signext_16_1(~ exit_ACC3_sva));
            bluey_lpi_1_dfm = bluey_lpi_1 & (signext_16_1(~ exit_ACC3_sva));
            red_x_0_lpi_1_dfm = red_x_0_lpi_1 & (signext_16_1(~ exit_ACC3_sva));
            red_x_1_lpi_1_dfm = red_x_1_lpi_1 & (signext_16_1(~ exit_ACC3_sva));
            red_x_2_lpi_1_dfm = red_x_2_lpi_1 & (signext_16_1(~ exit_ACC3_sva));
            green_x_0_lpi_1_dfm = green_x_0_lpi_1 & (signext_16_1(~ exit_ACC3_sva));
            green_x_1_lpi_1_dfm = green_x_1_lpi_1 & (signext_16_1(~ exit_ACC3_sva));
            green_x_2_lpi_1_dfm = green_x_2_lpi_1 & (signext_16_1(~ exit_ACC3_sva));
            blue_x_0_lpi_1_dfm = blue_x_0_lpi_1 & (signext_16_1(~ exit_ACC3_sva));
            blue_x_1_lpi_1_dfm = blue_x_1_lpi_1 & (signext_16_1(~ exit_ACC3_sva));
            blue_x_2_lpi_1_dfm = blue_x_2_lpi_1 & (signext_16_1(~ exit_ACC3_sva));
            red_y_0_lpi_1_dfm = red_y_0_lpi_1 & (signext_16_1(~ exit_ACC3_sva));
            red_y_1_lpi_1_dfm = red_y_1_lpi_1 & (signext_16_1(~ exit_ACC3_sva));
            red_y_2_lpi_1_dfm = red_y_2_lpi_1 & (signext_16_1(~ exit_ACC3_sva));
            green_y_0_lpi_1_dfm = green_y_0_lpi_1 & (signext_16_1(~ exit_ACC3_sva));
            green_y_1_lpi_1_dfm = green_y_1_lpi_1 & (signext_16_1(~ exit_ACC3_sva));
            green_y_2_lpi_1_dfm = green_y_2_lpi_1 & (signext_16_1(~ exit_ACC3_sva));
            blue_y_0_lpi_1_dfm = blue_y_0_lpi_1 & (signext_16_1(~ exit_ACC3_sva));
            blue_y_1_lpi_1_dfm = blue_y_1_lpi_1 & (signext_16_1(~ exit_ACC3_sva));
            blue_y_2_lpi_1_dfm = blue_y_2_lpi_1 & (signext_16_1(~ exit_ACC3_sva));
            regs_operator_din_lpi_1_dfm = MUX_v_90_2_2({regs_operator_din_lpi_1_dfm
                , regs_operator_din_sva}, exit_ACC3_sva);
            SHIFT_i_1_lpi_1_dfm_2 = MUX_v_2_2_2({SHIFT_i_1_lpi_3 , 2'b10}, exit_ACC3_sva);
            exit_ACC_GX_1_lpi_1_dfm = exit_ACC_GX_1_lpi_1 & (~ exit_ACC3_sva);
            exit_SHIFT_lpi_1_dfm = exit_SHIFT_lpi_1 & (~ exit_ACC3_sva);
            if ( exit_SHIFT_lpi_1_dfm ) begin
              exit_ACC_GX_1_lpi_1_dfm_st = exit_ACC_GX_1_lpi_1_dfm;
              if ( exit_ACC_GX_1_lpi_1_dfm ) begin
                ACC3_mux_nl = MUX_v_16_4_2({red_x_0_lpi_1_dfm , red_x_1_lpi_1_dfm
                    , red_x_2_lpi_1_dfm , 16'b0}, FRAME_a_4_lpi_1);
                redx_sva_1 = redx_lpi_1_dfm + (ACC3_mux_nl);
                ACC3_mux_16_nl = MUX_v_16_4_2({red_y_0_lpi_1_dfm , red_y_1_lpi_1_dfm
                    , red_y_2_lpi_1_dfm , 16'b0}, FRAME_a_4_lpi_1);
                redy_sva_1 = redy_lpi_1_dfm + (ACC3_mux_16_nl);
                ACC3_mux_17_nl = MUX_v_16_4_2({blue_x_0_lpi_1_dfm , blue_x_1_lpi_1_dfm
                    , blue_x_2_lpi_1_dfm , 16'b0}, FRAME_a_4_lpi_1);
                bluex_sva_1 = bluex_lpi_1_dfm + (ACC3_mux_17_nl);
                ACC3_mux_18_nl = MUX_v_16_4_2({blue_y_0_lpi_1_dfm , blue_y_1_lpi_1_dfm
                    , blue_y_2_lpi_1_dfm , 16'b0}, FRAME_a_4_lpi_1);
                bluey_sva_1 = bluey_lpi_1_dfm + (ACC3_mux_18_nl);
                ACC3_mux_19_nl = MUX_v_16_4_2({green_x_0_lpi_1_dfm , green_x_1_lpi_1_dfm
                    , green_x_2_lpi_1_dfm , 16'b0}, FRAME_a_4_lpi_1);
                greenx_sva_1 = greenx_lpi_1_dfm + (ACC3_mux_19_nl);
                ACC3_mux_20_nl = MUX_v_16_4_2({green_y_0_lpi_1_dfm , green_y_1_lpi_1_dfm
                    , green_y_2_lpi_1_dfm , 16'b0}, FRAME_a_4_lpi_1);
                greeny_sva_1 = greeny_lpi_1_dfm + (ACC3_mux_20_nl);
                FRAME_a_4_sva = FRAME_a_4_lpi_1 + 2'b1;
                exit_ACC3_sva_2 = ~ (readslicef_3_1_2((({1'b1 , FRAME_a_4_sva}) +
                    3'b1)));
                exit_ACC3_sva_2_st = exit_ACC3_sva_2;
                if ( exit_ACC3_sva_2 ) begin
                  AbsAndMax_slc_svs = readslicef_7_1_6((conv_s2u_6_7(~ (redx_sva_1[15:10]))
                      + 7'b1));
                  if ( AbsAndMax_slc_svs ) begin
                  end
                  else if ( redx_sva_1[15] ) begin
                    AbsAndMax_AbsAndMax_return_sva_1 = conv_u2u_15_16(~ (redx_sva_1[14:0]))
                        + 16'b1;
                  end
                  AbsAndMax_1_slc_svs = readslicef_7_1_6((conv_s2u_6_7(~ (redy_sva_1[15:10]))
                      + 7'b1));
                  if ( AbsAndMax_1_slc_svs ) begin
                  end
                  else if ( redy_sva_1[15] ) begin
                    AbsAndMax_AbsAndMax_return_1_sva_1 = conv_u2u_15_16(~ (redy_sva_1[14:0]))
                        + 16'b1;
                  end
                  AbsAndMax_2_slc_svs = readslicef_7_1_6((conv_s2u_6_7(~ (greenx_sva_1[15:10]))
                      + 7'b1));
                  if ( AbsAndMax_2_slc_svs ) begin
                  end
                  else if ( greenx_sva_1[15] ) begin
                    AbsAndMax_AbsAndMax_return_2_sva_1 = conv_u2u_15_16(~ (greenx_sva_1[14:0]))
                        + 16'b1;
                  end
                  AbsAndMax_3_slc_svs = readslicef_7_1_6((conv_s2u_6_7(~ (greeny_sva_1[15:10]))
                      + 7'b1));
                  if ( AbsAndMax_3_slc_svs ) begin
                  end
                  else if ( greeny_sva_1[15] ) begin
                    AbsAndMax_AbsAndMax_return_3_sva_1 = conv_u2u_15_16(~ (greeny_sva_1[14:0]))
                        + 16'b1;
                  end
                  AbsAndMax_4_slc_svs = readslicef_7_1_6((conv_s2u_6_7(~ (bluex_sva_1[15:10]))
                      + 7'b1));
                  if ( AbsAndMax_4_slc_svs ) begin
                  end
                  else if ( bluex_sva_1[15] ) begin
                    AbsAndMax_AbsAndMax_return_4_sva_1 = conv_u2u_15_16(~ (bluex_sva_1[14:0]))
                        + 16'b1;
                  end
                  AbsAndMax_5_slc_svs = readslicef_7_1_6((conv_s2u_6_7(~ (bluey_sva_1[15:10]))
                      + 7'b1));
                  if ( AbsAndMax_5_slc_svs ) begin
                  end
                  else if ( bluey_sva_1[15] ) begin
                    AbsAndMax_AbsAndMax_return_5_sva_1 = conv_u2u_15_16(~ (bluey_sva_1[14:0]))
                        + 16'b1;
                  end
                  AbsAndMax_mux1h_nl = MUX1HOT_v_16_3_2({({6'b0, redx_sva_1[9:0]})
                      , AbsAndMax_AbsAndMax_return_sva_1 , 16'b1111111111}, {(~((redx_sva_1[15])
                      | AbsAndMax_slc_svs)) , ((redx_sva_1[15]) & (~ AbsAndMax_slc_svs))
                      , AbsAndMax_slc_svs});
                  AbsAndMax_1_mux1h_nl = MUX1HOT_v_16_3_2({({6'b0, redy_sva_1[9:0]})
                      , AbsAndMax_AbsAndMax_return_1_sva_1 , 16'b1111111111}, {(~((redy_sva_1[15])
                      | AbsAndMax_1_slc_svs)) , ((redy_sva_1[15]) & (~ AbsAndMax_1_slc_svs))
                      , AbsAndMax_1_slc_svs});
                  AbsAndMax_x_6_sva = (AbsAndMax_mux1h_nl) + (AbsAndMax_1_mux1h_nl);
                  AbsAndMax_6_slc_svs = readslicef_7_1_6((conv_s2u_6_7(~ (AbsAndMax_x_6_sva[15:10]))
                      + 7'b1));
                  if ( AbsAndMax_6_slc_svs ) begin
                  end
                  else if ( AbsAndMax_x_6_sva[15] ) begin
                    AbsAndMax_AbsAndMax_return_6_sva_1 = conv_u2u_15_16(~ (AbsAndMax_x_6_sva[14:0]))
                        + 16'b1;
                  end
                  AbsAndMax_4_mux1h_nl = MUX1HOT_v_16_3_2({({6'b0, bluex_sva_1[9:0]})
                      , AbsAndMax_AbsAndMax_return_4_sva_1 , 16'b1111111111}, {(~((bluex_sva_1[15])
                      | AbsAndMax_4_slc_svs)) , ((bluex_sva_1[15]) & (~ AbsAndMax_4_slc_svs))
                      , AbsAndMax_4_slc_svs});
                  AbsAndMax_5_mux1h_nl = MUX1HOT_v_16_3_2({({6'b0, bluey_sva_1[9:0]})
                      , AbsAndMax_AbsAndMax_return_5_sva_1 , 16'b1111111111}, {(~((bluey_sva_1[15])
                      | AbsAndMax_5_slc_svs)) , ((bluey_sva_1[15]) & (~ AbsAndMax_5_slc_svs))
                      , AbsAndMax_5_slc_svs});
                  AbsAndMax_x_7_sva = (AbsAndMax_4_mux1h_nl) + (AbsAndMax_5_mux1h_nl);
                  AbsAndMax_7_slc_svs = readslicef_7_1_6((conv_s2u_6_7(~ (AbsAndMax_x_7_sva[15:10]))
                      + 7'b1));
                  if ( AbsAndMax_7_slc_svs ) begin
                  end
                  else if ( AbsAndMax_x_7_sva[15] ) begin
                    AbsAndMax_AbsAndMax_return_7_sva_1 = conv_u2u_15_16(~ (AbsAndMax_x_7_sva[14:0]))
                        + 16'b1;
                  end
                  AbsAndMax_2_mux1h_nl = MUX1HOT_v_16_3_2({({6'b0, greenx_sva_1[9:0]})
                      , AbsAndMax_AbsAndMax_return_2_sva_1 , 16'b1111111111}, {(~((greenx_sva_1[15])
                      | AbsAndMax_2_slc_svs)) , ((greenx_sva_1[15]) & (~ AbsAndMax_2_slc_svs))
                      , AbsAndMax_2_slc_svs});
                  AbsAndMax_3_mux1h_nl = MUX1HOT_v_16_3_2({({6'b0, greeny_sva_1[9:0]})
                      , AbsAndMax_AbsAndMax_return_3_sva_1 , 16'b1111111111}, {(~((greeny_sva_1[15])
                      | AbsAndMax_3_slc_svs)) , ((greeny_sva_1[15]) & (~ AbsAndMax_3_slc_svs))
                      , AbsAndMax_3_slc_svs});
                  AbsAndMax_x_8_sva = (AbsAndMax_2_mux1h_nl) + (AbsAndMax_3_mux1h_nl);
                  AbsAndMax_8_slc_svs = readslicef_7_1_6((conv_s2u_6_7(~ (AbsAndMax_x_8_sva[15:10]))
                      + 7'b1));
                  if ( AbsAndMax_8_slc_svs ) begin
                  end
                  else if ( AbsAndMax_x_8_sva[15] ) begin
                    AbsAndMax_AbsAndMax_return_8_sva_1 = conv_u2u_15_16(~ (AbsAndMax_x_8_sva[14:0]))
                        + 16'b1;
                  end
                  AbsAndMax_7_mux1h_nl = MUX1HOT_v_16_3_2({AbsAndMax_AbsAndMax_return_7_sva_1
                      , ({6'b0, AbsAndMax_x_7_sva[9:0]}) , 16'b1111111111}, {((AbsAndMax_x_7_sva[15])
                      & (~ AbsAndMax_7_slc_svs)) , (~((AbsAndMax_x_7_sva[15]) | AbsAndMax_7_slc_svs))
                      , AbsAndMax_7_slc_svs});
                  AbsAndMax_8_mux1h_nl = MUX1HOT_v_16_3_2({AbsAndMax_AbsAndMax_return_8_sva_1
                      , ({6'b0, AbsAndMax_x_8_sva[9:0]}) , 16'b1111111111}, {((AbsAndMax_x_8_sva[15])
                      & (~ AbsAndMax_8_slc_svs)) , (~((AbsAndMax_x_8_sva[15]) | AbsAndMax_8_slc_svs))
                      , AbsAndMax_8_slc_svs});
                  AbsAndMax_6_mux1h_nl = MUX1HOT_v_16_3_2({AbsAndMax_AbsAndMax_return_6_sva_1
                      , ({6'b0, AbsAndMax_x_6_sva[9:0]}) , 16'b1111111111}, {((AbsAndMax_x_6_sva[15])
                      & (~ AbsAndMax_6_slc_svs)) , (~((AbsAndMax_x_6_sva[15]) | AbsAndMax_6_slc_svs))
                      , AbsAndMax_6_slc_svs});
                  acc_psp_sva = (conv_u2u_16_17(AbsAndMax_7_mux1h_nl) + conv_u2u_16_17(AbsAndMax_8_mux1h_nl))
                      + conv_u2u_16_17(AbsAndMax_6_mux1h_nl);
                  FRAME_slc_8_itm = readslicef_4_3_1((conv_u2u_3_4({(readslicef_3_2_1((conv_u2u_2_3({(~
                      (acc_psp_sva[1])) , 1'b1}) + conv_u2u_2_3({(acc_psp_sva[2])
                      , (acc_psp_sva[12])})))) , 1'b1}) + conv_u2u_3_4({(readslicef_3_2_1((conv_u2u_2_3({(~
                      (acc_psp_sva[3])) , 1'b1}) + conv_u2u_2_3({(acc_psp_sva[4])
                      , (~ (acc_psp_sva[11]))})))) , (acc_psp_sva[14])})));
                  FRAME_slc_9_itm = readslicef_4_3_1((conv_u2u_3_4({(readslicef_3_2_1((conv_u2u_2_3({(~
                      (acc_psp_sva[5])) , 1'b1}) + conv_u2u_2_3({(acc_psp_sva[6])
                      , (acc_psp_sva[10])})))) , 1'b1}) + conv_u2u_3_4({(readslicef_3_2_1((conv_u2u_2_3({(~
                      (acc_psp_sva[7])) , 1'b1}) + conv_u2u_2_3({(acc_psp_sva[8])
                      , (~ (acc_psp_sva[9]))})))) , (~ (acc_psp_sva[13]))})));
                  FRAME_slc_acc_idiv_37_itm = acc_psp_sva[15];
                  FRAME_slc_acc_idiv_22_itm = acc_psp_sva[0];
                  FRAME_slc_acc_idiv_38_itm = acc_psp_sva[16];
                  FRAME_acc_32_itm = conv_u2u_15_16({(acc_psp_sva[16]) , 1'b0 , (acc_psp_sva[16])
                      , 1'b0 , (acc_psp_sva[16]) , 1'b0 , (acc_psp_sva[16]) , 1'b0
                      , (acc_psp_sva[16]) , 1'b0 , (acc_psp_sva[16]) , 1'b0 , (acc_psp_sva[16])
                      , 1'b0 , (acc_psp_sva[16])}) + conv_u2u_14_16({(acc_psp_sva[15])
                      , 1'b0 , (acc_psp_sva[15]) , 1'b0 , (acc_psp_sva[15]) , 1'b0
                      , (acc_psp_sva[15]) , 1'b0 , (acc_psp_sva[15]) , 1'b0 , (acc_psp_sva[15])
                      , 1'b0 , (signext_2_1(acc_psp_sva[15]))});
                  FRAME_slc_acc_idiv_85_itm = acc_psp_sva[14];
                  FRAME_slc_acc_idiv_86_itm = acc_psp_sva[14];
                  FRAME_slc_acc_idiv_87_itm = acc_psp_sva[14];
                  FRAME_slc_acc_idiv_88_itm = acc_psp_sva[14];
                  FRAME_slc_acc_idiv_89_itm = acc_psp_sva[14];
                  FRAME_slc_acc_idiv_90_itm = acc_psp_sva[14];
                  FRAME_slc_acc_idiv_49_itm = acc_psp_sva[14];
                  FRAME_slc_acc_idiv_75_itm = acc_psp_sva[12];
                  FRAME_slc_acc_idiv_76_itm = acc_psp_sva[12];
                  FRAME_slc_acc_idiv_77_itm = acc_psp_sva[12];
                  FRAME_slc_acc_idiv_78_itm = acc_psp_sva[12];
                  FRAME_slc_acc_idiv_79_itm = acc_psp_sva[12];
                  FRAME_slc_acc_idiv_47_itm = acc_psp_sva[12];
                  FRAME_slc_acc_idiv_67_itm = acc_psp_sva[10];
                  FRAME_slc_acc_idiv_68_itm = acc_psp_sva[10];
                  FRAME_slc_acc_idiv_69_itm = acc_psp_sva[10];
                  FRAME_slc_acc_idiv_70_itm = acc_psp_sva[10];
                  FRAME_slc_acc_idiv_45_itm = acc_psp_sva[10];
                  FRAME_slc_acc_idiv_61_itm = acc_psp_sva[8];
                  FRAME_slc_acc_idiv_62_itm = acc_psp_sva[8];
                  FRAME_slc_acc_idiv_63_itm = acc_psp_sva[8];
                  FRAME_slc_acc_idiv_43_itm = acc_psp_sva[8];
                  FRAME_slc_14_itm = readslicef_6_5_1((conv_u2u_5_6({(acc_psp_sva[5])
                      , 1'b0 , (signext_2_1(acc_psp_sva[5])) , 1'b1}) + conv_u2u_4_6({(acc_psp_sva[4:2])
                      , (acc_psp_sva[4])})));
                  FRAME_slc_acc_idiv_57_itm = acc_psp_sva[6];
                  FRAME_slc_acc_idiv_58_itm = acc_psp_sva[6];
                  FRAME_slc_acc_idiv_41_itm = acc_psp_sva[6];
                  FRAME_slc_acc_idiv_80_itm = acc_psp_sva[13];
                  FRAME_slc_acc_idiv_81_itm = acc_psp_sva[13];
                  FRAME_slc_acc_idiv_82_itm = acc_psp_sva[13];
                  FRAME_slc_acc_idiv_83_itm = acc_psp_sva[13];
                  FRAME_slc_acc_idiv_84_itm = acc_psp_sva[13];
                  FRAME_slc_acc_idiv_48_itm = acc_psp_sva[13];
                  FRAME_slc_acc_idiv_71_itm = acc_psp_sva[11];
                  FRAME_slc_acc_idiv_72_itm = acc_psp_sva[11];
                  FRAME_slc_acc_idiv_73_itm = acc_psp_sva[11];
                  FRAME_slc_acc_idiv_74_itm = acc_psp_sva[11];
                  FRAME_slc_acc_idiv_46_itm = acc_psp_sva[11];
                  FRAME_slc_acc_idiv_64_itm = acc_psp_sva[9];
                  FRAME_slc_acc_idiv_65_itm = acc_psp_sva[9];
                  FRAME_slc_acc_idiv_66_itm = acc_psp_sva[9];
                  FRAME_slc_acc_idiv_44_itm = acc_psp_sva[9];
                  FRAME_slc_acc_idiv_59_itm = acc_psp_sva[7];
                  FRAME_slc_acc_idiv_60_itm = acc_psp_sva[7];
                  FRAME_slc_acc_idiv_42_itm = acc_psp_sva[7];
                  FRAME_slc_acc_idiv_54_itm = acc_psp_sva[3];
                  FRAME_slc_acc_idiv_53_itm = acc_psp_sva[1];
                end
              end
              else begin
                ACC_GX_for_acc_13_psp_sva = conv_s2u_3_5({1'b1 , (~ FRAME_a_5_lpi_1)})
                    + ({(FRAME_a_5_lpi_1[0]) , 4'b1});
                ACC_GX_for_acc_14_psp_sva = conv_u2u_1_3(FRAME_i_3_lpi_1[1]) + conv_u2u_2_3(FRAME_i_3_lpi_1);
                regs_operator_slc_regs_regs_cse_sva = MUX_v_90_4_2({regs_regs_0_sva
                    , regs_regs_1_sva , regs_regs_2_sva , 90'b0}, FRAME_i_3_lpi_1);
                ACC_GX_for_mux_nl = MUX_v_16_4_2({red_x_0_lpi_1_dfm , red_x_1_lpi_1_dfm
                    , red_x_2_lpi_1_dfm , 16'b0}, FRAME_a_5_lpi_1);
                ACC_GX_for_mux_15_nl = MUX_v_3_16_2({3'b111 , 3'b0 , 3'b1 , 3'b110
                    , 3'b0 , 3'b10 , 3'b111 , 3'b0 , 3'b1 , 3'b0 , 3'b0 , 3'b0 ,
                    3'b0 , 3'b0 , 3'b0 , 3'b0}, conv_u2u_2_4(FRAME_a_5_lpi_1) + ({ACC_GX_for_acc_14_psp_sva
                    , (FRAME_i_3_lpi_1[0])}));
                ACC_GX_for_acc_1_ctmp_sva = (ACC_GX_for_mux_nl) + conv_s2s_12_16(conv_s2s_24_12(conv_s2s_3_12(ACC_GX_for_mux_15_nl)
                    * conv_u2s_10_12(fslr_10_90_7(regs_operator_slc_regs_regs_cse_sva,
                    ({(conv_u2u_4_5(ACC_GX_for_acc_13_psp_sva[4:1]) + 5'b101) , (ACC_GX_for_acc_13_psp_sva[0])
                    , 1'b0})))));
                ACC_GX_for_slc_gx_rom_10_1_cse_sva = MUX_v_3_16_2({3'b111 , 3'b0
                    , 3'b1 , 3'b110 , 3'b0 , 3'b10 , 3'b111 , 3'b0 , 3'b1 , 3'b0
                    , 3'b0 , 3'b0 , 3'b0 , 3'b0 , 3'b0 , 3'b0}, ({ACC_GX_for_acc_14_psp_sva
                    , (FRAME_i_3_lpi_1[0])}) + conv_u2u_2_4(FRAME_a_5_lpi_1));
                ACC_GX_for_mux_17_nl = MUX_v_16_4_2({green_x_0_lpi_1_dfm , green_x_1_lpi_1_dfm
                    , green_x_2_lpi_1_dfm , 16'b0}, FRAME_a_5_lpi_1);
                ACC_GX_for_mux_18_nl = MUX_v_10_32_2({(regs_operator_slc_regs_regs_cse_sva[73:64])
                    , (regs_operator_slc_regs_regs_cse_sva[75:66]) , (regs_operator_slc_regs_regs_cse_sva[77:68])
                    , (regs_operator_slc_regs_regs_cse_sva[79:70]) , 10'b0 , (regs_operator_slc_regs_regs_cse_sva[19:10])
                    , (regs_operator_slc_regs_regs_cse_sva[21:12]) , (regs_operator_slc_regs_regs_cse_sva[23:14])
                    , (regs_operator_slc_regs_regs_cse_sva[25:16]) , (regs_operator_slc_regs_regs_cse_sva[27:18])
                    , (regs_operator_slc_regs_regs_cse_sva[29:20]) , (regs_operator_slc_regs_regs_cse_sva[31:22])
                    , (regs_operator_slc_regs_regs_cse_sva[33:24]) , (regs_operator_slc_regs_regs_cse_sva[35:26])
                    , (regs_operator_slc_regs_regs_cse_sva[37:28]) , (regs_operator_slc_regs_regs_cse_sva[39:30])
                    , (regs_operator_slc_regs_regs_cse_sva[41:32]) , (regs_operator_slc_regs_regs_cse_sva[43:34])
                    , (regs_operator_slc_regs_regs_cse_sva[45:36]) , (regs_operator_slc_regs_regs_cse_sva[47:38])
                    , (regs_operator_slc_regs_regs_cse_sva[49:40]) , (regs_operator_slc_regs_regs_cse_sva[51:42])
                    , (regs_operator_slc_regs_regs_cse_sva[53:44]) , (regs_operator_slc_regs_regs_cse_sva[55:46])
                    , (regs_operator_slc_regs_regs_cse_sva[57:48]) , (regs_operator_slc_regs_regs_cse_sva[59:50])
                    , (regs_operator_slc_regs_regs_cse_sva[61:52]) , (regs_operator_slc_regs_regs_cse_sva[63:54])
                    , (regs_operator_slc_regs_regs_cse_sva[65:56]) , (regs_operator_slc_regs_regs_cse_sva[67:58])
                    , (regs_operator_slc_regs_regs_cse_sva[69:60]) , (regs_operator_slc_regs_regs_cse_sva[71:62])},
                    ACC_GX_for_acc_13_psp_sva + 5'b101);
                ACC_GX_for_acc_4_ctmp_sva = (ACC_GX_for_mux_17_nl) + conv_s2s_12_16(conv_s2s_24_12(conv_s2s_3_12(ACC_GX_for_slc_gx_rom_10_1_cse_sva)
                    * conv_u2s_10_12(ACC_GX_for_mux_18_nl)));
                ACC_GX_for_mux_19_nl = MUX_v_16_4_2({blue_x_0_lpi_1_dfm , blue_x_1_lpi_1_dfm
                    , blue_x_2_lpi_1_dfm , 16'b0}, FRAME_a_5_lpi_1);
                ACC_GX_for_mux_20_nl = MUX_v_10_32_2({(regs_operator_slc_regs_regs_cse_sva[9:0])
                    , (regs_operator_slc_regs_regs_cse_sva[11:2]) , (regs_operator_slc_regs_regs_cse_sva[13:4])
                    , (regs_operator_slc_regs_regs_cse_sva[15:6]) , (regs_operator_slc_regs_regs_cse_sva[17:8])
                    , (regs_operator_slc_regs_regs_cse_sva[19:10]) , (regs_operator_slc_regs_regs_cse_sva[21:12])
                    , (regs_operator_slc_regs_regs_cse_sva[23:14]) , (regs_operator_slc_regs_regs_cse_sva[25:16])
                    , (regs_operator_slc_regs_regs_cse_sva[27:18]) , (regs_operator_slc_regs_regs_cse_sva[29:20])
                    , (regs_operator_slc_regs_regs_cse_sva[31:22]) , (regs_operator_slc_regs_regs_cse_sva[33:24])
                    , (regs_operator_slc_regs_regs_cse_sva[35:26]) , (regs_operator_slc_regs_regs_cse_sva[37:28])
                    , (regs_operator_slc_regs_regs_cse_sva[39:30]) , (regs_operator_slc_regs_regs_cse_sva[41:32])
                    , (regs_operator_slc_regs_regs_cse_sva[43:34]) , (regs_operator_slc_regs_regs_cse_sva[45:36])
                    , (regs_operator_slc_regs_regs_cse_sva[47:38]) , (regs_operator_slc_regs_regs_cse_sva[49:40])
                    , (regs_operator_slc_regs_regs_cse_sva[51:42]) , (regs_operator_slc_regs_regs_cse_sva[53:44])
                    , (regs_operator_slc_regs_regs_cse_sva[55:46]) , (regs_operator_slc_regs_regs_cse_sva[57:48])
                    , (regs_operator_slc_regs_regs_cse_sva[59:50]) , (regs_operator_slc_regs_regs_cse_sva[61:52])
                    , (regs_operator_slc_regs_regs_cse_sva[63:54]) , (regs_operator_slc_regs_regs_cse_sva[65:56])
                    , (regs_operator_slc_regs_regs_cse_sva[67:58]) , (regs_operator_slc_regs_regs_cse_sva[69:60])
                    , 10'b0}, ACC_GX_for_acc_13_psp_sva);
                ACC_GX_for_acc_7_ctmp_sva = (ACC_GX_for_mux_19_nl) + conv_s2s_12_16(conv_s2s_24_12(conv_s2s_3_12(ACC_GX_for_slc_gx_rom_10_1_cse_sva)
                    * conv_u2s_10_12(ACC_GX_for_mux_20_nl)));
                FRAME_a_5_sva = FRAME_a_5_lpi_1 + 2'b1;
                ACC_GY_for_acc_13_psp_sva = conv_s2u_3_5({1'b1 , (~ FRAME_a_6_lpi_1)})
                    + ({(FRAME_a_6_lpi_1[0]) , 4'b1});
                ACC_GY_for_acc_15_sdt = conv_u2u_2_3(FRAME_i_2_lpi_1) + conv_u2u_2_3(FRAME_a_6_lpi_1);
                ACC_GY_for_slc_gy_psp_sva = MUX_v_3_16_2({3'b1 , 3'b10 , 3'b1 , 3'b0
                    , 3'b0 , 3'b0 , 3'b111 , 3'b110 , 3'b111 , 3'b0 , 3'b0 , 3'b0
                    , 3'b0 , 3'b0 , 3'b0 , 3'b0}, {(conv_u2u_2_3(ACC_GY_for_acc_15_sdt[2:1])
                    + conv_u2u_2_3(FRAME_i_2_lpi_1)) , (ACC_GY_for_acc_15_sdt[0])});
                regs_operator_3_slc_regs_regs_cse_sva = MUX_v_90_4_2({regs_regs_0_sva
                    , regs_regs_1_sva , regs_regs_2_sva , 90'b0}, FRAME_i_2_lpi_1);
                ACC_GY_for_mux_9_nl = MUX_v_16_4_2({red_y_0_lpi_1_dfm , red_y_1_lpi_1_dfm
                    , red_y_2_lpi_1_dfm , 16'b0}, FRAME_a_6_lpi_1);
                ACC_GY_for_acc_1_ctmp_sva = (ACC_GY_for_mux_9_nl) + conv_s2s_12_16(conv_s2s_24_12(conv_s2s_3_12(ACC_GY_for_slc_gy_psp_sva)
                    * conv_u2s_10_12(fslr_10_90_7(regs_operator_3_slc_regs_regs_cse_sva,
                    ({(conv_u2u_4_5(ACC_GY_for_acc_13_psp_sva[4:1]) + 5'b101) , (ACC_GY_for_acc_13_psp_sva[0])
                    , 1'b0})))));
                ACC_GY_for_mux_10_nl = MUX_v_16_4_2({green_y_0_lpi_1_dfm , green_y_1_lpi_1_dfm
                    , green_y_2_lpi_1_dfm , 16'b0}, FRAME_a_6_lpi_1);
                ACC_GY_for_mux_11_nl = MUX_v_10_32_2({(regs_operator_3_slc_regs_regs_cse_sva[73:64])
                    , (regs_operator_3_slc_regs_regs_cse_sva[75:66]) , (regs_operator_3_slc_regs_regs_cse_sva[77:68])
                    , (regs_operator_3_slc_regs_regs_cse_sva[79:70]) , 10'b0 , (regs_operator_3_slc_regs_regs_cse_sva[19:10])
                    , (regs_operator_3_slc_regs_regs_cse_sva[21:12]) , (regs_operator_3_slc_regs_regs_cse_sva[23:14])
                    , (regs_operator_3_slc_regs_regs_cse_sva[25:16]) , (regs_operator_3_slc_regs_regs_cse_sva[27:18])
                    , (regs_operator_3_slc_regs_regs_cse_sva[29:20]) , (regs_operator_3_slc_regs_regs_cse_sva[31:22])
                    , (regs_operator_3_slc_regs_regs_cse_sva[33:24]) , (regs_operator_3_slc_regs_regs_cse_sva[35:26])
                    , (regs_operator_3_slc_regs_regs_cse_sva[37:28]) , (regs_operator_3_slc_regs_regs_cse_sva[39:30])
                    , (regs_operator_3_slc_regs_regs_cse_sva[41:32]) , (regs_operator_3_slc_regs_regs_cse_sva[43:34])
                    , (regs_operator_3_slc_regs_regs_cse_sva[45:36]) , (regs_operator_3_slc_regs_regs_cse_sva[47:38])
                    , (regs_operator_3_slc_regs_regs_cse_sva[49:40]) , (regs_operator_3_slc_regs_regs_cse_sva[51:42])
                    , (regs_operator_3_slc_regs_regs_cse_sva[53:44]) , (regs_operator_3_slc_regs_regs_cse_sva[55:46])
                    , (regs_operator_3_slc_regs_regs_cse_sva[57:48]) , (regs_operator_3_slc_regs_regs_cse_sva[59:50])
                    , (regs_operator_3_slc_regs_regs_cse_sva[61:52]) , (regs_operator_3_slc_regs_regs_cse_sva[63:54])
                    , (regs_operator_3_slc_regs_regs_cse_sva[65:56]) , (regs_operator_3_slc_regs_regs_cse_sva[67:58])
                    , (regs_operator_3_slc_regs_regs_cse_sva[69:60]) , (regs_operator_3_slc_regs_regs_cse_sva[71:62])},
                    ACC_GY_for_acc_13_psp_sva + 5'b101);
                ACC_GY_for_acc_4_ctmp_sva = (ACC_GY_for_mux_10_nl) + conv_s2s_12_16(conv_s2s_24_12(conv_s2s_3_12(ACC_GY_for_slc_gy_psp_sva)
                    * conv_u2s_10_12(ACC_GY_for_mux_11_nl)));
                ACC_GY_for_mux_12_nl = MUX_v_16_4_2({blue_y_0_lpi_1_dfm , blue_y_1_lpi_1_dfm
                    , blue_y_2_lpi_1_dfm , 16'b0}, FRAME_a_6_lpi_1);
                ACC_GY_for_mux_13_nl = MUX_v_10_32_2({(regs_operator_3_slc_regs_regs_cse_sva[9:0])
                    , (regs_operator_3_slc_regs_regs_cse_sva[11:2]) , (regs_operator_3_slc_regs_regs_cse_sva[13:4])
                    , (regs_operator_3_slc_regs_regs_cse_sva[15:6]) , (regs_operator_3_slc_regs_regs_cse_sva[17:8])
                    , (regs_operator_3_slc_regs_regs_cse_sva[19:10]) , (regs_operator_3_slc_regs_regs_cse_sva[21:12])
                    , (regs_operator_3_slc_regs_regs_cse_sva[23:14]) , (regs_operator_3_slc_regs_regs_cse_sva[25:16])
                    , (regs_operator_3_slc_regs_regs_cse_sva[27:18]) , (regs_operator_3_slc_regs_regs_cse_sva[29:20])
                    , (regs_operator_3_slc_regs_regs_cse_sva[31:22]) , (regs_operator_3_slc_regs_regs_cse_sva[33:24])
                    , (regs_operator_3_slc_regs_regs_cse_sva[35:26]) , (regs_operator_3_slc_regs_regs_cse_sva[37:28])
                    , (regs_operator_3_slc_regs_regs_cse_sva[39:30]) , (regs_operator_3_slc_regs_regs_cse_sva[41:32])
                    , (regs_operator_3_slc_regs_regs_cse_sva[43:34]) , (regs_operator_3_slc_regs_regs_cse_sva[45:36])
                    , (regs_operator_3_slc_regs_regs_cse_sva[47:38]) , (regs_operator_3_slc_regs_regs_cse_sva[49:40])
                    , (regs_operator_3_slc_regs_regs_cse_sva[51:42]) , (regs_operator_3_slc_regs_regs_cse_sva[53:44])
                    , (regs_operator_3_slc_regs_regs_cse_sva[55:46]) , (regs_operator_3_slc_regs_regs_cse_sva[57:48])
                    , (regs_operator_3_slc_regs_regs_cse_sva[59:50]) , (regs_operator_3_slc_regs_regs_cse_sva[61:52])
                    , (regs_operator_3_slc_regs_regs_cse_sva[63:54]) , (regs_operator_3_slc_regs_regs_cse_sva[65:56])
                    , (regs_operator_3_slc_regs_regs_cse_sva[67:58]) , (regs_operator_3_slc_regs_regs_cse_sva[69:60])
                    , 10'b0}, ACC_GY_for_acc_13_psp_sva);
                ACC_GY_for_acc_7_ctmp_sva = (ACC_GY_for_mux_12_nl) + conv_s2s_12_16(conv_s2s_24_12(conv_s2s_3_12(ACC_GY_for_slc_gy_psp_sva)
                    * conv_u2s_10_12(ACC_GY_for_mux_13_nl)));
                FRAME_a_6_sva = FRAME_a_6_lpi_1 + 2'b1;
                exit_ACC_GX_for_sva = ~((readslicef_3_1_2((({1'b1 , FRAME_a_5_sva})
                    + 3'b1))) | (readslicef_3_1_2((({1'b1 , FRAME_a_6_sva}) + 3'b1))));
                if ( exit_ACC_GX_for_sva ) begin
                  FRAME_i_3_sva = FRAME_i_3_lpi_1 + 2'b1;
                  FRAME_i_2_sva = FRAME_i_2_lpi_1 + 2'b1;
                  exit_ACC_GX_sva = ~((readslicef_3_1_2((({1'b1 , FRAME_i_3_sva})
                      + 3'b1))) | (readslicef_3_1_2((({1'b1 , FRAME_i_2_sva}) + 3'b1))));
                  FRAME_a_5_lpi_1_dfm = FRAME_a_5_sva & ({{1{exit_ACC_GX_sva}}, exit_ACC_GX_sva});
                  FRAME_a_6_lpi_1_dfm = FRAME_a_6_sva & ({{1{exit_ACC_GX_sva}}, exit_ACC_GX_sva});
                end
                exit_ACC_GX_1_sva_1 = exit_ACC_GX_for_sva & exit_ACC_GX_sva;
                FRAME_a_4_lpi_1_dfm = FRAME_a_4_lpi_1 & (signext_2_1(~ exit_ACC_GX_1_sva_1));
              end
            end
            else begin
              unequal_tmp = (SHIFT_i_1_lpi_1_dfm_2[1]) | (SHIFT_i_1_lpi_1_dfm_2[0]);
              case (SHIFT_i_1_lpi_1_dfm_2)
                2'b0 : begin
                  // NOP
                end
                default : begin
                  SHIFT_if_else_else_else_slc_regs_regs_ctmp_sva = MUX_v_90_2_2({regs_regs_1_sva
                      , regs_regs_0_sva}, SHIFT_i_1_lpi_1_dfm_2[0]);
                end
              endcase
              SHIFT_acc_1_psp = SHIFT_i_1_lpi_1_dfm_2 + 2'b11;
              FRAME_i_2_lpi_1_dfm_2 = FRAME_i_2_lpi_1 & (signext_2_1(~ (SHIFT_acc_1_psp[1])));
              FRAME_a_5_lpi_1_dfm_3 = FRAME_a_5_lpi_1 & (signext_2_1(~ (SHIFT_acc_1_psp[1])));
              FRAME_a_6_lpi_1_dfm_3 = FRAME_a_6_lpi_1 & (signext_2_1(~ (SHIFT_acc_1_psp[1])));
              FRAME_i_3_lpi_1_dfm_2 = FRAME_i_3_lpi_1 & (signext_2_1(~ (SHIFT_acc_1_psp[1])));
            end
            regs_regs_0_sva = MUX_v_90_2_2({regs_operator_din_lpi_1_dfm , regs_regs_0_sva},
                unequal_tmp | exit_SHIFT_lpi_1_dfm);
            regs_regs_1_sva = MUX_v_90_2_2({regs_regs_1_sva , SHIFT_if_else_else_else_slc_regs_regs_ctmp_sva},
                (SHIFT_i_1_lpi_1_dfm_2[0]) & unequal_tmp & (~ exit_SHIFT_lpi_1_dfm));
            regs_regs_2_sva = MUX_v_90_2_2({regs_regs_2_sva , SHIFT_if_else_else_else_slc_regs_regs_ctmp_sva},
                (~ (SHIFT_i_1_lpi_1_dfm_2[0])) & unequal_tmp & (~ exit_SHIFT_lpi_1_dfm));
            SHIFT_nand_cse = ~(exit_ACC_GX_1_lpi_1_dfm & exit_SHIFT_lpi_1_dfm);
            redx_lpi_1 = MUX_v_16_2_2({redx_sva_1 , redx_lpi_1_dfm}, SHIFT_nand_cse);
            greenx_lpi_1 = MUX_v_16_2_2({greenx_sva_1 , greenx_lpi_1_dfm}, SHIFT_nand_cse);
            bluex_lpi_1 = MUX_v_16_2_2({bluex_sva_1 , bluex_lpi_1_dfm}, SHIFT_nand_cse);
            redy_lpi_1 = MUX_v_16_2_2({redy_sva_1 , redy_lpi_1_dfm}, SHIFT_nand_cse);
            greeny_lpi_1 = MUX_v_16_2_2({greeny_sva_1 , greeny_lpi_1_dfm}, SHIFT_nand_cse);
            bluey_lpi_1 = MUX_v_16_2_2({bluey_sva_1 , bluey_lpi_1_dfm}, SHIFT_nand_cse);
            SHIFT_and_41_cse = (~((FRAME_a_5_lpi_1[1]) | (FRAME_a_5_lpi_1[0]))) &
                (~ exit_ACC_GX_1_lpi_1_dfm) & exit_SHIFT_lpi_1_dfm;
            red_x_0_lpi_1 = MUX_v_16_2_2({red_x_0_lpi_1_dfm , ACC_GX_for_acc_1_ctmp_sva},
                SHIFT_and_41_cse);
            SHIFT_and_42_cse = (~ (FRAME_a_5_lpi_1[1])) & (FRAME_a_5_lpi_1[0]) &
                (~ exit_ACC_GX_1_lpi_1_dfm) & exit_SHIFT_lpi_1_dfm;
            red_x_1_lpi_1 = MUX_v_16_2_2({red_x_1_lpi_1_dfm , ACC_GX_for_acc_1_ctmp_sva},
                SHIFT_and_42_cse);
            SHIFT_and_43_cse = (FRAME_a_5_lpi_1[1]) & (~ (FRAME_a_5_lpi_1[0])) &
                (~ exit_ACC_GX_1_lpi_1_dfm) & exit_SHIFT_lpi_1_dfm;
            red_x_2_lpi_1 = MUX_v_16_2_2({red_x_2_lpi_1_dfm , ACC_GX_for_acc_1_ctmp_sva},
                SHIFT_and_43_cse);
            green_x_0_lpi_1 = MUX_v_16_2_2({green_x_0_lpi_1_dfm , ACC_GX_for_acc_4_ctmp_sva},
                SHIFT_and_41_cse);
            green_x_1_lpi_1 = MUX_v_16_2_2({green_x_1_lpi_1_dfm , ACC_GX_for_acc_4_ctmp_sva},
                SHIFT_and_42_cse);
            green_x_2_lpi_1 = MUX_v_16_2_2({green_x_2_lpi_1_dfm , ACC_GX_for_acc_4_ctmp_sva},
                SHIFT_and_43_cse);
            blue_x_0_lpi_1 = MUX_v_16_2_2({blue_x_0_lpi_1_dfm , ACC_GX_for_acc_7_ctmp_sva},
                SHIFT_and_41_cse);
            blue_x_1_lpi_1 = MUX_v_16_2_2({blue_x_1_lpi_1_dfm , ACC_GX_for_acc_7_ctmp_sva},
                SHIFT_and_42_cse);
            blue_x_2_lpi_1 = MUX_v_16_2_2({blue_x_2_lpi_1_dfm , ACC_GX_for_acc_7_ctmp_sva},
                SHIFT_and_43_cse);
            SHIFT_and_50_cse = (~((FRAME_a_6_lpi_1[1]) | (FRAME_a_6_lpi_1[0]))) &
                (~ exit_ACC_GX_1_lpi_1_dfm) & exit_SHIFT_lpi_1_dfm;
            red_y_0_lpi_1 = MUX_v_16_2_2({red_y_0_lpi_1_dfm , ACC_GY_for_acc_1_ctmp_sva},
                SHIFT_and_50_cse);
            SHIFT_and_51_cse = (~ (FRAME_a_6_lpi_1[1])) & (FRAME_a_6_lpi_1[0]) &
                (~ exit_ACC_GX_1_lpi_1_dfm) & exit_SHIFT_lpi_1_dfm;
            red_y_1_lpi_1 = MUX_v_16_2_2({red_y_1_lpi_1_dfm , ACC_GY_for_acc_1_ctmp_sva},
                SHIFT_and_51_cse);
            SHIFT_and_52_cse = (FRAME_a_6_lpi_1[1]) & (~ (FRAME_a_6_lpi_1[0])) &
                (~ exit_ACC_GX_1_lpi_1_dfm) & exit_SHIFT_lpi_1_dfm;
            red_y_2_lpi_1 = MUX_v_16_2_2({red_y_2_lpi_1_dfm , ACC_GY_for_acc_1_ctmp_sva},
                SHIFT_and_52_cse);
            green_y_0_lpi_1 = MUX_v_16_2_2({green_y_0_lpi_1_dfm , ACC_GY_for_acc_4_ctmp_sva},
                SHIFT_and_50_cse);
            green_y_1_lpi_1 = MUX_v_16_2_2({green_y_1_lpi_1_dfm , ACC_GY_for_acc_4_ctmp_sva},
                SHIFT_and_51_cse);
            green_y_2_lpi_1 = MUX_v_16_2_2({green_y_2_lpi_1_dfm , ACC_GY_for_acc_4_ctmp_sva},
                SHIFT_and_52_cse);
            blue_y_0_lpi_1 = MUX_v_16_2_2({blue_y_0_lpi_1_dfm , ACC_GY_for_acc_7_ctmp_sva},
                SHIFT_and_50_cse);
            blue_y_1_lpi_1 = MUX_v_16_2_2({blue_y_1_lpi_1_dfm , ACC_GY_for_acc_7_ctmp_sva},
                SHIFT_and_51_cse);
            blue_y_2_lpi_1 = MUX_v_16_2_2({blue_y_2_lpi_1_dfm , ACC_GY_for_acc_7_ctmp_sva},
                SHIFT_and_52_cse);
            SHIFT_and_38_cse = exit_ACC_GX_1_lpi_1_dfm & exit_SHIFT_lpi_1_dfm;
            FRAME_a_4_lpi_1 = MUX1HOT_v_2_3_2({FRAME_a_4_sva , FRAME_a_4_lpi_1_dfm
                , FRAME_a_4_lpi_1}, {SHIFT_and_38_cse , ((~ exit_ACC_GX_1_lpi_1_dfm)
                & exit_SHIFT_lpi_1_dfm) , (~ exit_SHIFT_lpi_1_dfm)});
            ACC_GX_and_24_tmp = exit_ACC_GX_for_sva & (~ exit_ACC_GX_1_lpi_1_dfm);
            SHIFT_and_65_cse = (~ ACC_GX_and_24_tmp) & exit_SHIFT_lpi_1_dfm;
            SHIFT_and_66_cse = ACC_GX_and_24_tmp & exit_SHIFT_lpi_1_dfm;
            FRAME_i_2_lpi_1 = MUX1HOT_v_2_3_2({FRAME_i_2_lpi_1_dfm_2 , FRAME_i_2_lpi_1
                , FRAME_i_2_sva}, {(~ exit_SHIFT_lpi_1_dfm) , SHIFT_and_65_cse ,
                SHIFT_and_66_cse});
            SHIFT_i_1_lpi_3 = MUX_v_2_2_2({SHIFT_acc_1_psp , SHIFT_i_1_lpi_1_dfm_2},
                exit_SHIFT_lpi_1_dfm);
            ACC_GX_and_20_cse = exit_ACC_GX_for_sva & (~ exit_ACC_GX_1_lpi_1_dfm)
                & exit_SHIFT_lpi_1_dfm;
            SHIFT_and_60_cse = (~(exit_ACC_GX_for_sva | exit_ACC_GX_1_lpi_1_dfm))
                & exit_SHIFT_lpi_1_dfm;
            FRAME_a_5_lpi_1 = MUX1HOT_v_2_4_2({FRAME_a_5_lpi_1_dfm_3 , FRAME_a_5_lpi_1
                , FRAME_a_5_lpi_1_dfm , FRAME_a_5_sva}, {(~ exit_SHIFT_lpi_1_dfm)
                , SHIFT_and_38_cse , ACC_GX_and_20_cse , SHIFT_and_60_cse});
            FRAME_a_6_lpi_1 = MUX1HOT_v_2_4_2({FRAME_a_6_lpi_1_dfm_3 , FRAME_a_6_lpi_1
                , FRAME_a_6_lpi_1_dfm , FRAME_a_6_sva}, {(~ exit_SHIFT_lpi_1_dfm)
                , SHIFT_and_38_cse , ACC_GX_and_20_cse , SHIFT_and_60_cse});
            FRAME_i_3_lpi_1 = MUX1HOT_v_2_3_2({FRAME_i_3_lpi_1_dfm_2 , FRAME_i_3_lpi_1
                , FRAME_i_3_sva}, {(~ exit_SHIFT_lpi_1_dfm) , SHIFT_and_65_cse ,
                SHIFT_and_66_cse});
            exit_ACC3_sva = exit_ACC3_sva_2 & exit_ACC_GX_1_lpi_1_dfm & exit_SHIFT_lpi_1_dfm;
            ACC_GX_mux_67_nl = MUX_s_1_2_2({exit_ACC_GX_1_sva_1 , exit_ACC_GX_1_lpi_1_dfm},
                exit_ACC_GX_1_lpi_1_dfm);
            exit_ACC_GX_1_lpi_1 = MUX_s_1_2_2({exit_ACC_GX_1_lpi_1_dfm , (ACC_GX_mux_67_nl)},
                exit_SHIFT_lpi_1_dfm);
            exit_SHIFT_lpi_1 = MUX_s_1_2_2({(SHIFT_acc_1_psp[1]) , exit_SHIFT_lpi_1_dfm},
                exit_SHIFT_lpi_1_dfm);
            FRAME_slc_8_itm_1 = FRAME_slc_8_itm;
            FRAME_slc_9_itm_1 = FRAME_slc_9_itm;
            FRAME_slc_acc_idiv_37_itm_1 = FRAME_slc_acc_idiv_37_itm;
            FRAME_slc_acc_idiv_22_itm_1 = FRAME_slc_acc_idiv_22_itm;
            FRAME_slc_acc_idiv_38_itm_1 = FRAME_slc_acc_idiv_38_itm;
            FRAME_acc_32_itm_1 = FRAME_acc_32_itm;
            FRAME_slc_acc_idiv_85_itm_1 = FRAME_slc_acc_idiv_85_itm;
            FRAME_slc_acc_idiv_86_itm_1 = FRAME_slc_acc_idiv_86_itm;
            FRAME_slc_acc_idiv_87_itm_1 = FRAME_slc_acc_idiv_87_itm;
            FRAME_slc_acc_idiv_88_itm_1 = FRAME_slc_acc_idiv_88_itm;
            FRAME_slc_acc_idiv_89_itm_1 = FRAME_slc_acc_idiv_89_itm;
            FRAME_slc_acc_idiv_90_itm_1 = FRAME_slc_acc_idiv_90_itm;
            FRAME_slc_acc_idiv_49_itm_1 = FRAME_slc_acc_idiv_49_itm;
            FRAME_slc_acc_idiv_75_itm_1 = FRAME_slc_acc_idiv_75_itm;
            FRAME_slc_acc_idiv_76_itm_1 = FRAME_slc_acc_idiv_76_itm;
            FRAME_slc_acc_idiv_77_itm_1 = FRAME_slc_acc_idiv_77_itm;
            FRAME_slc_acc_idiv_78_itm_1 = FRAME_slc_acc_idiv_78_itm;
            FRAME_slc_acc_idiv_79_itm_1 = FRAME_slc_acc_idiv_79_itm;
            FRAME_slc_acc_idiv_47_itm_1 = FRAME_slc_acc_idiv_47_itm;
            FRAME_slc_acc_idiv_67_itm_1 = FRAME_slc_acc_idiv_67_itm;
            FRAME_slc_acc_idiv_68_itm_1 = FRAME_slc_acc_idiv_68_itm;
            FRAME_slc_acc_idiv_69_itm_1 = FRAME_slc_acc_idiv_69_itm;
            FRAME_slc_acc_idiv_70_itm_1 = FRAME_slc_acc_idiv_70_itm;
            FRAME_slc_acc_idiv_45_itm_1 = FRAME_slc_acc_idiv_45_itm;
            FRAME_slc_acc_idiv_61_itm_1 = FRAME_slc_acc_idiv_61_itm;
            FRAME_slc_acc_idiv_62_itm_1 = FRAME_slc_acc_idiv_62_itm;
            FRAME_slc_acc_idiv_63_itm_1 = FRAME_slc_acc_idiv_63_itm;
            FRAME_slc_acc_idiv_43_itm_1 = FRAME_slc_acc_idiv_43_itm;
            FRAME_slc_14_itm_1 = FRAME_slc_14_itm;
            FRAME_slc_acc_idiv_57_itm_1 = FRAME_slc_acc_idiv_57_itm;
            FRAME_slc_acc_idiv_58_itm_1 = FRAME_slc_acc_idiv_58_itm;
            FRAME_slc_acc_idiv_41_itm_1 = FRAME_slc_acc_idiv_41_itm;
            FRAME_slc_acc_idiv_80_itm_1 = FRAME_slc_acc_idiv_80_itm;
            FRAME_slc_acc_idiv_81_itm_1 = FRAME_slc_acc_idiv_81_itm;
            FRAME_slc_acc_idiv_82_itm_1 = FRAME_slc_acc_idiv_82_itm;
            FRAME_slc_acc_idiv_83_itm_1 = FRAME_slc_acc_idiv_83_itm;
            FRAME_slc_acc_idiv_84_itm_1 = FRAME_slc_acc_idiv_84_itm;
            FRAME_slc_acc_idiv_48_itm_1 = FRAME_slc_acc_idiv_48_itm;
            FRAME_slc_acc_idiv_71_itm_1 = FRAME_slc_acc_idiv_71_itm;
            FRAME_slc_acc_idiv_72_itm_1 = FRAME_slc_acc_idiv_72_itm;
            FRAME_slc_acc_idiv_73_itm_1 = FRAME_slc_acc_idiv_73_itm;
            FRAME_slc_acc_idiv_74_itm_1 = FRAME_slc_acc_idiv_74_itm;
            FRAME_slc_acc_idiv_46_itm_1 = FRAME_slc_acc_idiv_46_itm;
            FRAME_slc_acc_idiv_64_itm_1 = FRAME_slc_acc_idiv_64_itm;
            FRAME_slc_acc_idiv_65_itm_1 = FRAME_slc_acc_idiv_65_itm;
            FRAME_slc_acc_idiv_66_itm_1 = FRAME_slc_acc_idiv_66_itm;
            FRAME_slc_acc_idiv_44_itm_1 = FRAME_slc_acc_idiv_44_itm;
            FRAME_slc_acc_idiv_59_itm_1 = FRAME_slc_acc_idiv_59_itm;
            FRAME_slc_acc_idiv_60_itm_1 = FRAME_slc_acc_idiv_60_itm;
            FRAME_slc_acc_idiv_42_itm_1 = FRAME_slc_acc_idiv_42_itm;
            FRAME_slc_acc_idiv_54_itm_1 = FRAME_slc_acc_idiv_54_itm;
            FRAME_slc_acc_idiv_53_itm_1 = FRAME_slc_acc_idiv_53_itm;
            exit_SHIFT_lpi_1_dfm_st_1 = exit_SHIFT_lpi_1_dfm;
            exit_ACC_GX_1_lpi_1_dfm_st_1 = exit_ACC_GX_1_lpi_1_dfm_st;
            exit_ACC3_sva_2_st_1 = exit_ACC3_sva_2_st;
            main_stage_0_2 = 1'b1;
          end
        end
      end
    end
    SHIFT_and_66_cse = 1'b0;
    SHIFT_and_65_cse = 1'b0;
    SHIFT_and_60_cse = 1'b0;
    ACC_GX_and_20_cse = 1'b0;
    SHIFT_and_38_cse = 1'b0;
    SHIFT_and_52_cse = 1'b0;
    SHIFT_and_51_cse = 1'b0;
    SHIFT_and_50_cse = 1'b0;
    SHIFT_and_43_cse = 1'b0;
    SHIFT_and_42_cse = 1'b0;
    SHIFT_and_41_cse = 1'b0;
    SHIFT_nand_cse = 1'b0;
    ACC_GY_for_acc_15_sdt = 3'b0;
    SHIFT_i_1_lpi_1_dfm_2 = 2'b0;
    SHIFT_i_1_lpi_3 = 2'b0;
    main_stage_0_2 = 1'b0;
    exit_ACC3_sva_2_st_1 = 1'b0;
    exit_ACC_GX_1_lpi_1_dfm_st_1 = 1'b0;
    exit_SHIFT_lpi_1_dfm_st_1 = 1'b0;
    FRAME_slc_acc_idiv_53_itm_1 = 1'b0;
    FRAME_slc_acc_idiv_53_itm = 1'b0;
    FRAME_slc_acc_idiv_54_itm_1 = 1'b0;
    FRAME_slc_acc_idiv_54_itm = 1'b0;
    FRAME_slc_acc_idiv_42_itm_1 = 1'b0;
    FRAME_slc_acc_idiv_42_itm = 1'b0;
    FRAME_slc_acc_idiv_60_itm_1 = 1'b0;
    FRAME_slc_acc_idiv_60_itm = 1'b0;
    FRAME_slc_acc_idiv_59_itm_1 = 1'b0;
    FRAME_slc_acc_idiv_59_itm = 1'b0;
    FRAME_slc_acc_idiv_44_itm_1 = 1'b0;
    FRAME_slc_acc_idiv_44_itm = 1'b0;
    FRAME_slc_acc_idiv_66_itm_1 = 1'b0;
    FRAME_slc_acc_idiv_66_itm = 1'b0;
    FRAME_slc_acc_idiv_65_itm_1 = 1'b0;
    FRAME_slc_acc_idiv_65_itm = 1'b0;
    FRAME_slc_acc_idiv_64_itm_1 = 1'b0;
    FRAME_slc_acc_idiv_64_itm = 1'b0;
    FRAME_slc_acc_idiv_46_itm_1 = 1'b0;
    FRAME_slc_acc_idiv_46_itm = 1'b0;
    FRAME_slc_acc_idiv_74_itm_1 = 1'b0;
    FRAME_slc_acc_idiv_74_itm = 1'b0;
    FRAME_slc_acc_idiv_73_itm_1 = 1'b0;
    FRAME_slc_acc_idiv_73_itm = 1'b0;
    FRAME_slc_acc_idiv_72_itm_1 = 1'b0;
    FRAME_slc_acc_idiv_72_itm = 1'b0;
    FRAME_slc_acc_idiv_71_itm_1 = 1'b0;
    FRAME_slc_acc_idiv_71_itm = 1'b0;
    FRAME_slc_acc_idiv_48_itm_1 = 1'b0;
    FRAME_slc_acc_idiv_48_itm = 1'b0;
    FRAME_slc_acc_idiv_84_itm_1 = 1'b0;
    FRAME_slc_acc_idiv_84_itm = 1'b0;
    FRAME_slc_acc_idiv_83_itm_1 = 1'b0;
    FRAME_slc_acc_idiv_83_itm = 1'b0;
    FRAME_slc_acc_idiv_82_itm_1 = 1'b0;
    FRAME_slc_acc_idiv_82_itm = 1'b0;
    FRAME_slc_acc_idiv_81_itm_1 = 1'b0;
    FRAME_slc_acc_idiv_81_itm = 1'b0;
    FRAME_slc_acc_idiv_80_itm_1 = 1'b0;
    FRAME_slc_acc_idiv_80_itm = 1'b0;
    FRAME_slc_acc_idiv_41_itm_1 = 1'b0;
    FRAME_slc_acc_idiv_41_itm = 1'b0;
    FRAME_slc_acc_idiv_58_itm_1 = 1'b0;
    FRAME_slc_acc_idiv_58_itm = 1'b0;
    FRAME_slc_acc_idiv_57_itm_1 = 1'b0;
    FRAME_slc_acc_idiv_57_itm = 1'b0;
    FRAME_slc_14_itm_1 = 5'b0;
    FRAME_slc_14_itm = 5'b0;
    FRAME_slc_acc_idiv_43_itm_1 = 1'b0;
    FRAME_slc_acc_idiv_43_itm = 1'b0;
    FRAME_slc_acc_idiv_63_itm_1 = 1'b0;
    FRAME_slc_acc_idiv_63_itm = 1'b0;
    FRAME_slc_acc_idiv_62_itm_1 = 1'b0;
    FRAME_slc_acc_idiv_62_itm = 1'b0;
    FRAME_slc_acc_idiv_61_itm_1 = 1'b0;
    FRAME_slc_acc_idiv_61_itm = 1'b0;
    FRAME_slc_acc_idiv_45_itm_1 = 1'b0;
    FRAME_slc_acc_idiv_45_itm = 1'b0;
    FRAME_slc_acc_idiv_70_itm_1 = 1'b0;
    FRAME_slc_acc_idiv_70_itm = 1'b0;
    FRAME_slc_acc_idiv_69_itm_1 = 1'b0;
    FRAME_slc_acc_idiv_69_itm = 1'b0;
    FRAME_slc_acc_idiv_68_itm_1 = 1'b0;
    FRAME_slc_acc_idiv_68_itm = 1'b0;
    FRAME_slc_acc_idiv_67_itm_1 = 1'b0;
    FRAME_slc_acc_idiv_67_itm = 1'b0;
    FRAME_slc_acc_idiv_47_itm_1 = 1'b0;
    FRAME_slc_acc_idiv_47_itm = 1'b0;
    FRAME_slc_acc_idiv_79_itm_1 = 1'b0;
    FRAME_slc_acc_idiv_79_itm = 1'b0;
    FRAME_slc_acc_idiv_78_itm_1 = 1'b0;
    FRAME_slc_acc_idiv_78_itm = 1'b0;
    FRAME_slc_acc_idiv_77_itm_1 = 1'b0;
    FRAME_slc_acc_idiv_77_itm = 1'b0;
    FRAME_slc_acc_idiv_76_itm_1 = 1'b0;
    FRAME_slc_acc_idiv_76_itm = 1'b0;
    FRAME_slc_acc_idiv_75_itm_1 = 1'b0;
    FRAME_slc_acc_idiv_75_itm = 1'b0;
    FRAME_slc_acc_idiv_49_itm_1 = 1'b0;
    FRAME_slc_acc_idiv_49_itm = 1'b0;
    FRAME_slc_acc_idiv_90_itm_1 = 1'b0;
    FRAME_slc_acc_idiv_90_itm = 1'b0;
    FRAME_slc_acc_idiv_89_itm_1 = 1'b0;
    FRAME_slc_acc_idiv_89_itm = 1'b0;
    FRAME_slc_acc_idiv_88_itm_1 = 1'b0;
    FRAME_slc_acc_idiv_88_itm = 1'b0;
    FRAME_slc_acc_idiv_87_itm_1 = 1'b0;
    FRAME_slc_acc_idiv_87_itm = 1'b0;
    FRAME_slc_acc_idiv_86_itm_1 = 1'b0;
    FRAME_slc_acc_idiv_86_itm = 1'b0;
    FRAME_slc_acc_idiv_85_itm_1 = 1'b0;
    FRAME_slc_acc_idiv_85_itm = 1'b0;
    FRAME_acc_32_itm_1 = 16'b0;
    FRAME_acc_32_itm = 16'b0;
    FRAME_slc_acc_idiv_38_itm_1 = 1'b0;
    FRAME_slc_acc_idiv_38_itm = 1'b0;
    FRAME_slc_acc_idiv_22_itm_1 = 1'b0;
    FRAME_slc_acc_idiv_22_itm = 1'b0;
    FRAME_slc_acc_idiv_37_itm_1 = 1'b0;
    FRAME_slc_acc_idiv_37_itm = 1'b0;
    FRAME_slc_9_itm_1 = 3'b0;
    FRAME_slc_9_itm = 3'b0;
    FRAME_slc_8_itm_1 = 3'b0;
    FRAME_slc_8_itm = 3'b0;
    exit_ACC3_sva_2_st = 1'b0;
    exit_ACC_GX_1_lpi_1_dfm_st = 1'b0;
    ACC_GX_and_24_tmp = 1'b0;
    SHIFT_acc_1_psp = 2'b0;
    FRAME_i_3_lpi_1_dfm_2 = 2'b0;
    FRAME_a_6_lpi_1_dfm_3 = 2'b0;
    FRAME_a_5_lpi_1_dfm_3 = 2'b0;
    FRAME_i_2_lpi_1_dfm_2 = 2'b0;
    SHIFT_if_else_else_else_slc_regs_regs_ctmp_sva = 90'b0;
    unequal_tmp = 1'b0;
    FRAME_a_4_lpi_1_dfm = 2'b0;
    exit_ACC_GX_1_sva_1 = 1'b0;
    FRAME_a_6_lpi_1_dfm = 2'b0;
    FRAME_a_5_lpi_1_dfm = 2'b0;
    exit_ACC_GX_sva = 1'b0;
    FRAME_i_2_sva = 2'b0;
    FRAME_i_3_sva = 2'b0;
    exit_ACC_GX_for_sva = 1'b0;
    FRAME_a_6_sva = 2'b0;
    ACC_GY_for_acc_7_ctmp_sva = 16'b0;
    ACC_GY_for_acc_4_ctmp_sva = 16'b0;
    ACC_GY_for_acc_1_ctmp_sva = 16'b0;
    regs_operator_3_slc_regs_regs_cse_sva = 90'b0;
    ACC_GY_for_slc_gy_psp_sva = 3'b0;
    ACC_GY_for_acc_13_psp_sva = 5'b0;
    FRAME_a_5_sva = 2'b0;
    ACC_GX_for_acc_7_ctmp_sva = 16'b0;
    ACC_GX_for_acc_4_ctmp_sva = 16'b0;
    ACC_GX_for_slc_gx_rom_10_1_cse_sva = 3'b0;
    ACC_GX_for_acc_1_ctmp_sva = 16'b0;
    regs_operator_slc_regs_regs_cse_sva = 90'b0;
    ACC_GX_for_acc_14_psp_sva = 3'b0;
    ACC_GX_for_acc_13_psp_sva = 5'b0;
    FRAME_ac_int_cctor_15_sva = 16'b0;
    acc_imod_1_sva = 3'b0;
    acc_imod_sva = 5'b0;
    acc_psp_sva = 17'b0;
    AbsAndMax_AbsAndMax_return_8_sva_1 = 16'b0;
    AbsAndMax_8_slc_svs = 1'b0;
    AbsAndMax_x_8_sva = 16'b0;
    AbsAndMax_AbsAndMax_return_7_sva_1 = 16'b0;
    AbsAndMax_7_slc_svs = 1'b0;
    AbsAndMax_x_7_sva = 16'b0;
    AbsAndMax_AbsAndMax_return_6_sva_1 = 16'b0;
    AbsAndMax_6_slc_svs = 1'b0;
    AbsAndMax_x_6_sva = 16'b0;
    AbsAndMax_AbsAndMax_return_5_sva_1 = 16'b0;
    AbsAndMax_5_slc_svs = 1'b0;
    AbsAndMax_AbsAndMax_return_4_sva_1 = 16'b0;
    AbsAndMax_4_slc_svs = 1'b0;
    AbsAndMax_AbsAndMax_return_3_sva_1 = 16'b0;
    AbsAndMax_3_slc_svs = 1'b0;
    AbsAndMax_AbsAndMax_return_2_sva_1 = 16'b0;
    AbsAndMax_2_slc_svs = 1'b0;
    AbsAndMax_AbsAndMax_return_1_sva_1 = 16'b0;
    AbsAndMax_1_slc_svs = 1'b0;
    AbsAndMax_AbsAndMax_return_sva_1 = 16'b0;
    AbsAndMax_slc_svs = 1'b0;
    exit_ACC3_sva_2 = 1'b0;
    FRAME_a_4_sva = 2'b0;
    greeny_sva_1 = 16'b0;
    greenx_sva_1 = 16'b0;
    bluey_sva_1 = 16'b0;
    bluex_sva_1 = 16'b0;
    redy_sva_1 = 16'b0;
    redx_sva_1 = 16'b0;
    exit_SHIFT_lpi_1_dfm = 1'b0;
    exit_ACC_GX_1_lpi_1_dfm = 1'b0;
    regs_operator_din_lpi_1_dfm = 90'b0;
    blue_y_2_lpi_1_dfm = 16'b0;
    blue_y_1_lpi_1_dfm = 16'b0;
    blue_y_0_lpi_1_dfm = 16'b0;
    green_y_2_lpi_1_dfm = 16'b0;
    green_y_1_lpi_1_dfm = 16'b0;
    green_y_0_lpi_1_dfm = 16'b0;
    red_y_2_lpi_1_dfm = 16'b0;
    red_y_1_lpi_1_dfm = 16'b0;
    red_y_0_lpi_1_dfm = 16'b0;
    blue_x_2_lpi_1_dfm = 16'b0;
    blue_x_1_lpi_1_dfm = 16'b0;
    blue_x_0_lpi_1_dfm = 16'b0;
    green_x_2_lpi_1_dfm = 16'b0;
    green_x_1_lpi_1_dfm = 16'b0;
    green_x_0_lpi_1_dfm = 16'b0;
    red_x_2_lpi_1_dfm = 16'b0;
    red_x_1_lpi_1_dfm = 16'b0;
    red_x_0_lpi_1_dfm = 16'b0;
    bluey_lpi_1_dfm = 16'b0;
    greeny_lpi_1_dfm = 16'b0;
    redy_lpi_1_dfm = 16'b0;
    bluex_lpi_1_dfm = 16'b0;
    greenx_lpi_1_dfm = 16'b0;
    redx_lpi_1_dfm = 16'b0;
    regs_operator_din_sva = 90'b0;
    exit_ACC3_sva = 1'b0;
    regs_regs_2_sva = 90'b0;
    regs_regs_0_sva = 90'b0;
    regs_regs_1_sva = 90'b0;
    FRAME_i_2_lpi_1 = 2'b0;
    FRAME_i_3_lpi_1 = 2'b0;
    FRAME_a_6_lpi_1 = 2'b0;
    FRAME_a_5_lpi_1 = 2'b0;
    FRAME_a_4_lpi_1 = 2'b0;
    exit_SHIFT_lpi_1 = 1'b0;
    exit_ACC_GX_1_lpi_1 = 1'b0;
    red_x_2_lpi_1 = 16'b0;
    red_x_0_lpi_1 = 16'b0;
    red_x_1_lpi_1 = 16'b0;
    green_x_2_lpi_1 = 16'b0;
    green_x_0_lpi_1 = 16'b0;
    green_x_1_lpi_1 = 16'b0;
    blue_x_2_lpi_1 = 16'b0;
    blue_x_0_lpi_1 = 16'b0;
    blue_x_1_lpi_1 = 16'b0;
    red_y_2_lpi_1 = 16'b0;
    red_y_0_lpi_1 = 16'b0;
    red_y_1_lpi_1 = 16'b0;
    green_y_2_lpi_1 = 16'b0;
    green_y_0_lpi_1 = 16'b0;
    green_y_1_lpi_1 = 16'b0;
    blue_y_2_lpi_1 = 16'b0;
    blue_y_0_lpi_1 = 16'b0;
    blue_y_1_lpi_1 = 16'b0;
    bluey_lpi_1 = 16'b0;
    bluex_lpi_1 = 16'b0;
    greeny_lpi_1 = 16'b0;
    greenx_lpi_1 = 16'b0;
    redy_lpi_1 = 16'b0;
    redx_lpi_1 = 16'b0;
    vout_rsc_mgc_out_stdreg_d <= 30'b0;
  end


  function [4:0] readslicef_6_5_1;
    input [5:0] vector;
    reg [5:0] tmp;
  begin
    tmp = vector >> 1;
    readslicef_6_5_1 = tmp[4:0];
  end
  endfunction


  function [3:0] readslicef_5_4_1;
    input [4:0] vector;
    reg [4:0] tmp;
  begin
    tmp = vector >> 1;
    readslicef_5_4_1 = tmp[3:0];
  end
  endfunction


  function [2:0] readslicef_4_3_1;
    input [3:0] vector;
    reg [3:0] tmp;
  begin
    tmp = vector >> 1;
    readslicef_4_3_1 = tmp[2:0];
  end
  endfunction


  function [1:0] readslicef_3_2_1;
    input [2:0] vector;
    reg [2:0] tmp;
  begin
    tmp = vector >> 1;
    readslicef_3_2_1 = tmp[1:0];
  end
  endfunction


  function [7:0] readslicef_9_8_1;
    input [8:0] vector;
    reg [8:0] tmp;
  begin
    tmp = vector >> 1;
    readslicef_9_8_1 = tmp[7:0];
  end
  endfunction


  function [6:0] readslicef_8_7_1;
    input [7:0] vector;
    reg [7:0] tmp;
  begin
    tmp = vector >> 1;
    readslicef_8_7_1 = tmp[6:0];
  end
  endfunction


  function [5:0] readslicef_7_6_1;
    input [6:0] vector;
    reg [6:0] tmp;
  begin
    tmp = vector >> 1;
    readslicef_7_6_1 = tmp[5:0];
  end
  endfunction


  function [0:0] readslicef_3_1_2;
    input [2:0] vector;
    reg [2:0] tmp;
  begin
    tmp = vector >> 2;
    readslicef_3_1_2 = tmp[0:0];
  end
  endfunction


  function [8:0] readslicef_10_9_1;
    input [9:0] vector;
    reg [9:0] tmp;
  begin
    tmp = vector >> 1;
    readslicef_10_9_1 = tmp[8:0];
  end
  endfunction


  function [15:0] signext_16_1;
    input [0:0] vector;
  begin
    signext_16_1= {{15{vector[0]}}, vector};
  end
  endfunction


  function [89:0] MUX_v_90_2_2;
    input [179:0] inputs;
    input [0:0] sel;
    reg [89:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = inputs[179:90];
      end
      1'b1 : begin
        result = inputs[89:0];
      end
      default : begin
        result = inputs[179:90];
      end
    endcase
    MUX_v_90_2_2 = result;
  end
  endfunction


  function [1:0] MUX_v_2_2_2;
    input [3:0] inputs;
    input [0:0] sel;
    reg [1:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = inputs[3:2];
      end
      1'b1 : begin
        result = inputs[1:0];
      end
      default : begin
        result = inputs[3:2];
      end
    endcase
    MUX_v_2_2_2 = result;
  end
  endfunction


  function [15:0] MUX_v_16_4_2;
    input [63:0] inputs;
    input [1:0] sel;
    reg [15:0] result;
  begin
    case (sel)
      2'b00 : begin
        result = inputs[63:48];
      end
      2'b01 : begin
        result = inputs[47:32];
      end
      2'b10 : begin
        result = inputs[31:16];
      end
      2'b11 : begin
        result = inputs[15:0];
      end
      default : begin
        result = inputs[63:48];
      end
    endcase
    MUX_v_16_4_2 = result;
  end
  endfunction


  function [0:0] readslicef_7_1_6;
    input [6:0] vector;
    reg [6:0] tmp;
  begin
    tmp = vector >> 6;
    readslicef_7_1_6 = tmp[0:0];
  end
  endfunction


  function [15:0] MUX1HOT_v_16_3_2;
    input [47:0] inputs;
    input [2:0] sel;
    reg [15:0] result;
    integer i;
  begin
    result = inputs[0+:16] & {16{sel[0]}};
    for( i = 1; i < 3; i = i + 1 )
      result = result | (inputs[i*16+:16] & {16{sel[i]}});
    MUX1HOT_v_16_3_2 = result;
  end
  endfunction


  function [1:0] signext_2_1;
    input [0:0] vector;
  begin
    signext_2_1= {{1{vector[0]}}, vector};
  end
  endfunction


  function [89:0] MUX_v_90_4_2;
    input [359:0] inputs;
    input [1:0] sel;
    reg [89:0] result;
  begin
    case (sel)
      2'b00 : begin
        result = inputs[359:270];
      end
      2'b01 : begin
        result = inputs[269:180];
      end
      2'b10 : begin
        result = inputs[179:90];
      end
      2'b11 : begin
        result = inputs[89:0];
      end
      default : begin
        result = inputs[359:270];
      end
    endcase
    MUX_v_90_4_2 = result;
  end
  endfunction


  function [2:0] MUX_v_3_16_2;
    input [47:0] inputs;
    input [3:0] sel;
    reg [2:0] result;
  begin
    case (sel)
      4'b0000 : begin
        result = inputs[47:45];
      end
      4'b0001 : begin
        result = inputs[44:42];
      end
      4'b0010 : begin
        result = inputs[41:39];
      end
      4'b0011 : begin
        result = inputs[38:36];
      end
      4'b0100 : begin
        result = inputs[35:33];
      end
      4'b0101 : begin
        result = inputs[32:30];
      end
      4'b0110 : begin
        result = inputs[29:27];
      end
      4'b0111 : begin
        result = inputs[26:24];
      end
      4'b1000 : begin
        result = inputs[23:21];
      end
      4'b1001 : begin
        result = inputs[20:18];
      end
      4'b1010 : begin
        result = inputs[17:15];
      end
      4'b1011 : begin
        result = inputs[14:12];
      end
      4'b1100 : begin
        result = inputs[11:9];
      end
      4'b1101 : begin
        result = inputs[8:6];
      end
      4'b1110 : begin
        result = inputs[5:3];
      end
      4'b1111 : begin
        result = inputs[2:0];
      end
      default : begin
        result = inputs[47:45];
      end
    endcase
    MUX_v_3_16_2 = result;
  end
  endfunction


  function [9:0] fslr_10_90_7;
    input [89:0] data;
    input [6:0] shft;
  begin
    fslr_10_90_7 = data >> shft;
  end
  endfunction


  function [9:0] MUX_v_10_32_2;
    input [319:0] inputs;
    input [4:0] sel;
    reg [9:0] result;
  begin
    case (sel)
      5'b00000 : begin
        result = inputs[319:310];
      end
      5'b00001 : begin
        result = inputs[309:300];
      end
      5'b00010 : begin
        result = inputs[299:290];
      end
      5'b00011 : begin
        result = inputs[289:280];
      end
      5'b00100 : begin
        result = inputs[279:270];
      end
      5'b00101 : begin
        result = inputs[269:260];
      end
      5'b00110 : begin
        result = inputs[259:250];
      end
      5'b00111 : begin
        result = inputs[249:240];
      end
      5'b01000 : begin
        result = inputs[239:230];
      end
      5'b01001 : begin
        result = inputs[229:220];
      end
      5'b01010 : begin
        result = inputs[219:210];
      end
      5'b01011 : begin
        result = inputs[209:200];
      end
      5'b01100 : begin
        result = inputs[199:190];
      end
      5'b01101 : begin
        result = inputs[189:180];
      end
      5'b01110 : begin
        result = inputs[179:170];
      end
      5'b01111 : begin
        result = inputs[169:160];
      end
      5'b10000 : begin
        result = inputs[159:150];
      end
      5'b10001 : begin
        result = inputs[149:140];
      end
      5'b10010 : begin
        result = inputs[139:130];
      end
      5'b10011 : begin
        result = inputs[129:120];
      end
      5'b10100 : begin
        result = inputs[119:110];
      end
      5'b10101 : begin
        result = inputs[109:100];
      end
      5'b10110 : begin
        result = inputs[99:90];
      end
      5'b10111 : begin
        result = inputs[89:80];
      end
      5'b11000 : begin
        result = inputs[79:70];
      end
      5'b11001 : begin
        result = inputs[69:60];
      end
      5'b11010 : begin
        result = inputs[59:50];
      end
      5'b11011 : begin
        result = inputs[49:40];
      end
      5'b11100 : begin
        result = inputs[39:30];
      end
      5'b11101 : begin
        result = inputs[29:20];
      end
      5'b11110 : begin
        result = inputs[19:10];
      end
      5'b11111 : begin
        result = inputs[9:0];
      end
      default : begin
        result = inputs[319:310];
      end
    endcase
    MUX_v_10_32_2 = result;
  end
  endfunction


  function [15:0] MUX_v_16_2_2;
    input [31:0] inputs;
    input [0:0] sel;
    reg [15:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = inputs[31:16];
      end
      1'b1 : begin
        result = inputs[15:0];
      end
      default : begin
        result = inputs[31:16];
      end
    endcase
    MUX_v_16_2_2 = result;
  end
  endfunction


  function [1:0] MUX1HOT_v_2_3_2;
    input [5:0] inputs;
    input [2:0] sel;
    reg [1:0] result;
    integer i;
  begin
    result = inputs[0+:2] & {2{sel[0]}};
    for( i = 1; i < 3; i = i + 1 )
      result = result | (inputs[i*2+:2] & {2{sel[i]}});
    MUX1HOT_v_2_3_2 = result;
  end
  endfunction


  function [1:0] MUX1HOT_v_2_4_2;
    input [7:0] inputs;
    input [3:0] sel;
    reg [1:0] result;
    integer i;
  begin
    result = inputs[0+:2] & {2{sel[0]}};
    for( i = 1; i < 4; i = i + 1 )
      result = result | (inputs[i*2+:2] & {2{sel[i]}});
    MUX1HOT_v_2_4_2 = result;
  end
  endfunction


  function [0:0] MUX_s_1_2_2;
    input [1:0] inputs;
    input [0:0] sel;
    reg [0:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = inputs[1:1];
      end
      1'b1 : begin
        result = inputs[0:0];
      end
      default : begin
        result = inputs[1:1];
      end
    endcase
    MUX_s_1_2_2 = result;
  end
  endfunction


  function signed [5:0] conv_u2s_5_6 ;
    input [4:0]  vector ;
  begin
    conv_u2s_5_6 = {1'b0, vector};
  end
  endfunction


  function  [4:0] conv_u2u_4_5 ;
    input [3:0]  vector ;
  begin
    conv_u2u_4_5 = {1'b0, vector};
  end
  endfunction


  function signed [5:0] conv_s2s_5_6 ;
    input signed [4:0]  vector ;
  begin
    conv_s2s_5_6 = {vector[4], vector};
  end
  endfunction


  function  [3:0] conv_u2u_3_4 ;
    input [2:0]  vector ;
  begin
    conv_u2u_3_4 = {1'b0, vector};
  end
  endfunction


  function  [2:0] conv_u2u_2_3 ;
    input [1:0]  vector ;
  begin
    conv_u2u_2_3 = {1'b0, vector};
  end
  endfunction


  function  [3:0] conv_u2u_2_4 ;
    input [1:0]  vector ;
  begin
    conv_u2u_2_4 = {{2{1'b0}}, vector};
  end
  endfunction


  function  [15:0] conv_s2u_15_16 ;
    input signed [14:0]  vector ;
  begin
    conv_s2u_15_16 = {vector[14], vector};
  end
  endfunction


  function signed [14:0] conv_u2s_13_15 ;
    input [12:0]  vector ;
  begin
    conv_u2s_13_15 = {{2{1'b0}}, vector};
  end
  endfunction


  function  [11:0] conv_u2u_9_12 ;
    input [8:0]  vector ;
  begin
    conv_u2u_9_12 = {{3{1'b0}}, vector};
  end
  endfunction


  function  [11:0] conv_u2u_11_12 ;
    input [10:0]  vector ;
  begin
    conv_u2u_11_12 = {1'b0, vector};
  end
  endfunction


  function  [8:0] conv_u2u_8_9 ;
    input [7:0]  vector ;
  begin
    conv_u2u_8_9 = {1'b0, vector};
  end
  endfunction


  function  [7:0] conv_u2u_7_8 ;
    input [6:0]  vector ;
  begin
    conv_u2u_7_8 = {1'b0, vector};
  end
  endfunction


  function  [6:0] conv_u2u_6_7 ;
    input [5:0]  vector ;
  begin
    conv_u2u_6_7 = {1'b0, vector};
  end
  endfunction


  function signed [2:0] conv_u2s_2_3 ;
    input [1:0]  vector ;
  begin
    conv_u2s_2_3 = {1'b0, vector};
  end
  endfunction


  function signed [14:0] conv_s2s_13_15 ;
    input signed [12:0]  vector ;
  begin
    conv_s2s_13_15 = {{2{vector[12]}}, vector};
  end
  endfunction


  function signed [12:0] conv_u2s_12_13 ;
    input [11:0]  vector ;
  begin
    conv_u2s_12_13 = {1'b0, vector};
  end
  endfunction


  function signed [12:0] conv_s2s_11_13 ;
    input signed [10:0]  vector ;
  begin
    conv_s2s_11_13 = {{2{vector[10]}}, vector};
  end
  endfunction


  function signed [10:0] conv_u2s_10_11 ;
    input [9:0]  vector ;
  begin
    conv_u2s_10_11 = {1'b0, vector};
  end
  endfunction


  function signed [10:0] conv_s2s_9_11 ;
    input signed [8:0]  vector ;
  begin
    conv_s2s_9_11 = {{2{vector[8]}}, vector};
  end
  endfunction


  function signed [9:0] conv_u2s_9_10 ;
    input [8:0]  vector ;
  begin
    conv_u2s_9_10 = {1'b0, vector};
  end
  endfunction


  function signed [9:0] conv_s2s_8_10 ;
    input signed [7:0]  vector ;
  begin
    conv_s2s_8_10 = {{2{vector[7]}}, vector};
  end
  endfunction


  function signed [7:0] conv_u2s_7_8 ;
    input [6:0]  vector ;
  begin
    conv_u2s_7_8 = {1'b0, vector};
  end
  endfunction


  function signed [7:0] conv_s2s_5_8 ;
    input signed [4:0]  vector ;
  begin
    conv_s2s_5_8 = {{3{vector[4]}}, vector};
  end
  endfunction


  function signed [4:0] conv_u2s_4_5 ;
    input [3:0]  vector ;
  begin
    conv_u2s_4_5 = {1'b0, vector};
  end
  endfunction


  function  [4:0] conv_u2u_3_5 ;
    input [2:0]  vector ;
  begin
    conv_u2u_3_5 = {{2{1'b0}}, vector};
  end
  endfunction


  function  [6:0] conv_s2u_6_7 ;
    input signed [5:0]  vector ;
  begin
    conv_s2u_6_7 = {vector[5], vector};
  end
  endfunction


  function  [15:0] conv_u2u_15_16 ;
    input [14:0]  vector ;
  begin
    conv_u2u_15_16 = {1'b0, vector};
  end
  endfunction


  function  [16:0] conv_u2u_16_17 ;
    input [15:0]  vector ;
  begin
    conv_u2u_16_17 = {1'b0, vector};
  end
  endfunction


  function  [15:0] conv_u2u_14_16 ;
    input [13:0]  vector ;
  begin
    conv_u2u_14_16 = {{2{1'b0}}, vector};
  end
  endfunction


  function  [5:0] conv_u2u_5_6 ;
    input [4:0]  vector ;
  begin
    conv_u2u_5_6 = {1'b0, vector};
  end
  endfunction


  function  [5:0] conv_u2u_4_6 ;
    input [3:0]  vector ;
  begin
    conv_u2u_4_6 = {{2{1'b0}}, vector};
  end
  endfunction


  function  [4:0] conv_s2u_3_5 ;
    input signed [2:0]  vector ;
  begin
    conv_s2u_3_5 = {{2{vector[2]}}, vector};
  end
  endfunction


  function  [2:0] conv_u2u_1_3 ;
    input [0:0]  vector ;
  begin
    conv_u2u_1_3 = {{2{1'b0}}, vector};
  end
  endfunction


  function signed [15:0] conv_s2s_12_16 ;
    input signed [11:0]  vector ;
  begin
    conv_s2s_12_16 = {{4{vector[11]}}, vector};
  end
  endfunction


  function signed [11:0] conv_s2s_24_12 ;
    input signed [23:0]  vector ;
  begin
    conv_s2s_24_12 = vector[11:0];
  end
  endfunction


  function signed [11:0] conv_s2s_3_12 ;
    input signed [2:0]  vector ;
  begin
    conv_s2s_3_12 = {{9{vector[2]}}, vector};
  end
  endfunction


  function signed [11:0] conv_u2s_10_12 ;
    input [9:0]  vector ;
  begin
    conv_u2s_10_12 = {{2{1'b0}}, vector};
  end
  endfunction

endmodule

// ------------------------------------------------------------------
//  Design Unit:    edge_detect
//  Generated from file(s):
//    2) $PROJECT_HOME/../edge_detect_c/edge3.c
// ------------------------------------------------------------------


module edge_detect (
  vin_rsc_z, vout_rsc_z, clk, en, arst_n
);
  input [89:0] vin_rsc_z;
  output [29:0] vout_rsc_z;
  input clk;
  input en;
  input arst_n;


  // Interconnect Declarations
  wire [89:0] vin_rsc_mgc_in_wire_d;
  wire [29:0] vout_rsc_mgc_out_stdreg_d;


  // Interconnect Declarations for Component Instantiations 
  mgc_in_wire #(.rscid(1),
  .width(90)) vin_rsc_mgc_in_wire (
      .d(vin_rsc_mgc_in_wire_d),
      .z(vin_rsc_z)
    );
  mgc_out_stdreg #(.rscid(2),
  .width(30)) vout_rsc_mgc_out_stdreg (
      .d(vout_rsc_mgc_out_stdreg_d),
      .z(vout_rsc_z)
    );
  edge_detect_core edge_detect_core_inst (
      .clk(clk),
      .en(en),
      .arst_n(arst_n),
      .vin_rsc_mgc_in_wire_d(vin_rsc_mgc_in_wire_d),
      .vout_rsc_mgc_out_stdreg_d(vout_rsc_mgc_out_stdreg_d)
    );
endmodule



