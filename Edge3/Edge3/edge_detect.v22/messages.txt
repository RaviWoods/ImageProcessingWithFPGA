
# Messages from "go new"

Creating project directory 'C:\fpga-catapult-c-spring\Edge3\Edge3'. (PRJ-1)
Branching solution 'solution.v1' at state 'new' (PRJ-2)
Branching solution 'solution.v1' at state 'new' (PRJ-2)
Branching solution 'solution.v1' at state 'new' (PRJ-2)
Branching solution 'solution.v1' at state 'new' (PRJ-2)
Branching solution 'solution.v2' at state 'new' (PRJ-2)
Branching solution 'solution.v2' at state 'new' (PRJ-2)
Branching solution 'solution.v2' at state 'new' (PRJ-2)
Branching solution 'solution.v2' at state 'new' (PRJ-2)
Branching solution 'solution.v2' at state 'new' (PRJ-2)
Branching solution 'solution.v2' at state 'new' (PRJ-2)
Branching solution 'solution.v3' at state 'new' (PRJ-2)
Branching solution 'solution.v3' at state 'new' (PRJ-2)
Branching solution 'solution.v3' at state 'new' (PRJ-2)
Branching solution 'solution.v3' at state 'new' (PRJ-2)
Branching solution 'solution.v3' at state 'new' (PRJ-2)
Branching solution 'solution.v3' at state 'new' (PRJ-2)
Branching solution 'solution.v4' at state 'new' (PRJ-2)

# Messages from "go analyze"

Front End called with arguments: -- {C:\fpga-catapult-c-spring\edge_detect_c\edge6.c} {C:\fpga-catapult-c-spring\edge_detect_c\shift_class.h} {C:\fpga-catapult-c-spring\edge_detect_c\edge.h} (CIN-69)
Edison Design Group C++/C Front End - Version 3.10.1 (CIN-1)
Pragma 'hls_design<top>' detected on routine 'edge_detect' (CIN-6)
Source file analysis completed (CIN-68)
Starting transformation 'analyze' on solution 'solution.v4' (SOL-8)
Completed transformation 'analyze' on solution 'solution.v4': elapsed time 1.84 seconds, memory usage 418852kB, peak memory usage 459616kB (SOL-9)
$PROJECT_HOME/../edge_detect_c/edge6.c(137): last line of file ends without a newline (CRD-1)

# Messages from "go compile"

Starting transformation 'compile' on solution 'solution.v4' (SOL-8)
Generating synthesis internal form... (CIN-3)
Found top design routine 'edge_detect' specified by directive (CIN-52)
Synthesizing routine 'edge_detect' (CIN-13)
Inlining routine 'edge_detect' (CIN-14)
Inlining member function 'shift_class<ac_int<90, false>, 3>::shift_class' on object 'regs' (CIN-64)
Inlining member function 'shift_class<ac_int<90, false>, 3>::operator<<' on object 'regs' (CIN-64)
Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
Optimizing block '/edge_detect' ... (CIN-4)
Inout port 'vin' is only used as an input. (OPT-10)
Inout port 'vout' is only used as an output. (OPT-11)
Loop '/edge_detect/core/SHIFT' iterated at most 3 times. (LOOP-2)
Loop '/edge_detect/core/ACC_GX:for' iterated at most 3 times. (LOOP-2)
Loop '/edge_detect/core/ACC_GX' iterated at most 3 times. (LOOP-2)
Loop '/edge_detect/core/ACC_GY:for' iterated at most 3 times. (LOOP-2)
Loop '/edge_detect/core/ACC_GY' iterated at most 3 times. (LOOP-2)
Loop '/edge_detect/core/FRAME' iterated at most 1 times. (LOOP-2)
Design 'edge_detect' was read (SOL-1)
Optimizing partition '/edge_detect': (Total ops = 353, Real ops = 96, Vars = 84) (SOL-10)
Optimizing partition '/edge_detect/core': (Total ops = 353, Real ops = 96, Vars = 82) (SOL-10)
Optimizing partition '/edge_detect/core': (Total ops = 331, Real ops = 86, Vars = 84) (SOL-10)
Optimizing partition '/edge_detect': (Total ops = 331, Real ops = 86, Vars = 86) (SOL-10)
Optimizing partition '/edge_detect': (Total ops = 331, Real ops = 86, Vars = 86) (SOL-10)
Optimizing partition '/edge_detect/core': (Total ops = 331, Real ops = 86, Vars = 84) (SOL-10)
Optimizing partition '/edge_detect/core': (Total ops = 271, Real ops = 83, Vars = 65) (SOL-10)
Optimizing partition '/edge_detect/core': (Total ops = 257, Real ops = 83, Vars = 64) (SOL-10)
Optimizing partition '/edge_detect/core': (Total ops = 257, Real ops = 83, Vars = 64) (SOL-10)
Optimizing partition '/edge_detect': (Total ops = 257, Real ops = 83, Vars = 66) (SOL-10)
Optimizing partition '/edge_detect': (Total ops = 257, Real ops = 83, Vars = 66) (SOL-10)
Optimizing partition '/edge_detect/core': (Total ops = 254, Real ops = 83, Vars = 73) (SOL-10)
Optimizing partition '/edge_detect/core': (Total ops = 302, Real ops = 75, Vars = 23) (SOL-10)
Optimizing partition '/edge_detect': (Total ops = 302, Real ops = 75, Vars = 25) (SOL-10)
Optimizing partition '/edge_detect/core': (Total ops = 302, Real ops = 75, Vars = 27) (SOL-10)
Optimizing partition '/edge_detect/core': (Total ops = 302, Real ops = 75, Vars = 23) (SOL-10)
Optimizing partition '/edge_detect': (Total ops = 302, Real ops = 75, Vars = 25) (SOL-10)
Optimizing partition '/edge_detect/core': (Total ops = 302, Real ops = 75, Vars = 23) (SOL-10)
Optimizing partition '/edge_detect': (Total ops = 302, Real ops = 75, Vars = 25) (SOL-10)
Optimizing partition '/edge_detect': (Total ops = 302, Real ops = 75, Vars = 25) (SOL-10)
Optimizing partition '/edge_detect/core': (Total ops = 302, Real ops = 75, Vars = 23) (SOL-10)
Optimizing partition '/edge_detect/core': (Total ops = 311, Real ops = 71, Vars = 25) (SOL-10)
Optimizing partition '/edge_detect/core': (Total ops = 263, Real ops = 66, Vars = 25) (SOL-10)
Optimizing partition '/edge_detect': (Total ops = 263, Real ops = 66, Vars = 27) (SOL-10)
Optimizing partition '/edge_detect/core': (Total ops = 258, Real ops = 66, Vars = 30) (SOL-10)
Optimizing partition '/edge_detect/core': (Total ops = 252, Real ops = 66, Vars = 25) (SOL-10)
Optimizing partition '/edge_detect': (Total ops = 252, Real ops = 66, Vars = 27) (SOL-10)
Optimizing partition '/edge_detect/core': (Total ops = 252, Real ops = 66, Vars = 25) (SOL-10)
Optimizing partition '/edge_detect': (Total ops = 252, Real ops = 66, Vars = 27) (SOL-10)
Completed transformation 'compile' on solution 'edge_detect.v22': elapsed time 9.19 seconds, memory usage 422716kB, peak memory usage 459616kB (SOL-9)

# Messages from "go architect"

Starting transformation 'architect' on solution 'edge_detect.v22' (SOL-8)
Loop '/edge_detect/core/SHIFT' is being fully unrolled (3 times). (LOOP-7)
Loop '/edge_detect/core/ACC_GX:for' is being fully unrolled (3 times). (LOOP-7)
Loop '/edge_detect/core/ACC_GY:for' is being fully unrolled (3 times). (LOOP-7)
Loop '/edge_detect/core/ACC_GX' is left rolled. (LOOP-4)
Loop '/edge_detect/core/ACC_GY' is left rolled. (LOOP-4)
Loop '/edge_detect/core/main' is left rolled. (LOOP-4)
Loop 'ACC_GY' is merged and folded into Loop 'ACC_GX' (LOOP-9)
Optimizing partition '/edge_detect/core': (Total ops = 415, Real ops = 135, Vars = 25) (SOL-10)
Optimizing partition '/edge_detect/core': (Total ops = 276, Real ops = 66, Vars = 30) (SOL-10)
Optimizing partition '/edge_detect/core': (Total ops = 280, Real ops = 60, Vars = 26) (SOL-10)
Optimizing partition '/edge_detect/core': (Total ops = 256, Real ops = 60, Vars = 26) (SOL-10)
Optimizing partition '/edge_detect/core': (Total ops = 256, Real ops = 60, Vars = 26) (SOL-10)
Optimizing partition '/edge_detect/core': (Total ops = 241, Real ops = 58, Vars = 22) (SOL-10)
Optimizing partition '/edge_detect': (Total ops = 241, Real ops = 58, Vars = 27) (SOL-10)
Optimizing partition '/edge_detect/core': (Total ops = 241, Real ops = 58, Vars = 22) (SOL-10)
Optimizing partition '/edge_detect': (Total ops = 241, Real ops = 58, Vars = 27) (SOL-10)
Optimizing partition '/edge_detect/core': (Total ops = 246, Real ops = 59, Vars = 24) (SOL-10)
Optimizing partition '/edge_detect/core': (Total ops = 244, Real ops = 59, Vars = 24) (SOL-10)
Optimizing partition '/edge_detect/core': (Total ops = 239, Real ops = 57, Vars = 22) (SOL-10)
Optimizing partition '/edge_detect/core': (Total ops = 238, Real ops = 57, Vars = 21) (SOL-10)
Optimizing partition '/edge_detect': (Total ops = 238, Real ops = 57, Vars = 26) (SOL-10)
Optimizing partition '/edge_detect/core': (Total ops = 238, Real ops = 57, Vars = 21) (SOL-10)
I/O-Port inferred - resource 'vin:rsc' (from var: vin) mapped to 'mgc_ioport.mgc_in_wire' (size: 90). (MEM-2)
I/O-Port inferred - resource 'vout:rsc' (from var: vout) mapped to 'mgc_ioport.mgc_out_stdreg' (size: 30). (MEM-2)
Optimizing partition '/edge_detect': (Total ops = 240, Real ops = 57, Vars = 26) (SOL-10)
Optimizing partition '/edge_detect/core': (Total ops = 240, Real ops = 57, Vars = 21) (SOL-10)
Optimizing partition '/edge_detect': (Total ops = 240, Real ops = 57, Vars = 28) (SOL-10)
Optimizing partition '/edge_detect/core': (Total ops = 240, Real ops = 57, Vars = 23) (SOL-10)
Optimizing partition '/edge_detect/core': (Total ops = 239, Real ops = 57, Vars = 23) (SOL-10)
Optimizing partition '/edge_detect': (Total ops = 239, Real ops = 57, Vars = 28) (SOL-10)
Optimizing partition '/edge_detect/core': (Total ops = 239, Real ops = 57, Vars = 23) (SOL-10)
Optimizing partition '/edge_detect': (Total ops = 239, Real ops = 57, Vars = 28) (SOL-10)
Design 'edge_detect' contains '137' real operations. (SOL-11)
Optimizing partition '/edge_detect/core': (Total ops = 242, Real ops = 57, Vars = 24) (SOL-10)
Optimizing partition '/edge_detect/core': (Total ops = 241, Real ops = 57, Vars = 24) (SOL-10)
Optimizing partition '/edge_detect/core': (Total ops = 461, Real ops = 76, Vars = 153) (SOL-10)
Optimizing partition '/edge_detect/core': (Total ops = 279, Real ops = 76, Vars = 39) (SOL-10)
Completed transformation 'architect' on solution 'edge_detect.v22': elapsed time 26.52 seconds, memory usage 422716kB, peak memory usage 459616kB (SOL-9)

# Messages from "go allocate"

Performing concurrent resource allocation and scheduling on '/edge_detect/core' (CRAAS-1)
Prescheduled LOOP 'main' (3 c-steps) (SCHD-7)
Prescheduled LOOP 'core:rlp' (0 c-steps) (SCHD-7)
Prescheduled SEQUENTIAL 'core' (total length 3 c-steps) (SCHD-8)
At least one feasible schedule exists. (CRAAS-9)
Resource allocation and scheduling done. (CRAAS-2)
Netlist written to file 'schedule.gnt' (NET-4)
Starting transformation 'allocate' on solution 'edge_detect.v22' (SOL-8)
Select qualified components for data operations ... (CRAAS-3)
Apply resource constraints on data operations ... (CRAAS-4)
Initial schedule of SEQUENTIAL 'core': Latency = 4, Area (Datapath, Register, Total) = 6115.88, 0.00, 6115.88 (CRAAS-11)
Optimized LOOP 'main': Latency = 4, Area (Datapath, Register, Total) = 6086.00, 0.00, 6086.00 (CRAAS-10)
Optimized LOOP 'main': Latency = 4, Area (Datapath, Register, Total) = 6084.49, 0.00, 6084.49 (CRAAS-10)
Final schedule of SEQUENTIAL 'core': Latency = 4, Area (Datapath, Register, Total) = 6084.49, 0.00, 6084.49 (CRAAS-12)
Completed transformation 'allocate' on solution 'edge_detect.v22': elapsed time 3.62 seconds, memory usage 423708kB, peak memory usage 459616kB (SOL-9)
