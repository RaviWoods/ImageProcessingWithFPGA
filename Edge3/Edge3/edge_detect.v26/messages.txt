
# Messages from "go new"

Creating project directory 'C:\fpga-catapult-c-spring\Edge3\Edge3'. (PRJ-1)
Branching solution 'solution.v1' at state 'new' (PRJ-2)
Branching solution 'solution.v1' at state 'new' (PRJ-2)
Branching solution 'solution.v1' at state 'new' (PRJ-2)
Branching solution 'solution.v1' at state 'new' (PRJ-2)
Branching solution 'solution.v2' at state 'new' (PRJ-2)
Branching solution 'solution.v2' at state 'new' (PRJ-2)
Branching solution 'solution.v2' at state 'new' (PRJ-2)
Branching solution 'solution.v2' at state 'new' (PRJ-2)
Branching solution 'solution.v2' at state 'new' (PRJ-2)
Branching solution 'solution.v2' at state 'new' (PRJ-2)
Branching solution 'solution.v3' at state 'new' (PRJ-2)
Branching solution 'solution.v3' at state 'new' (PRJ-2)
Branching solution 'solution.v3' at state 'new' (PRJ-2)
Branching solution 'solution.v3' at state 'new' (PRJ-2)
Branching solution 'solution.v3' at state 'new' (PRJ-2)
Branching solution 'solution.v3' at state 'new' (PRJ-2)
Branching solution 'solution.v4' at state 'new' (PRJ-2)
Branching solution 'solution.v4' at state 'new' (PRJ-2)
Branching solution 'solution.v5' at state 'new' (PRJ-2)

# Messages from "go analyze"

Front End called with arguments: -- {C:\fpga-catapult-c-spring\edge_detect_c\edge6.c} {C:\fpga-catapult-c-spring\edge_detect_c\shift_class.h} {C:\fpga-catapult-c-spring\edge_detect_c\edge.h} (CIN-69)
Edison Design Group C++/C Front End - Version 3.10.1 (CIN-1)
Pragma 'hls_design<top>' detected on routine 'edge_detect' (CIN-6)
Source file analysis completed (CIN-68)
Starting transformation 'analyze' on solution 'solution.v5' (SOL-8)
Completed transformation 'analyze' on solution 'solution.v5': elapsed time 1.81 seconds, memory usage 444420kB, peak memory usage 494264kB (SOL-9)
$PROJECT_HOME/../edge_detect_c/edge6.c(135): last line of file ends without a newline (CRD-1)
Branching solution 'solution.v5' at state 'analyze' (PRJ-2)

# Messages from "go compile"

Starting transformation 'compile' on solution 'solution.v5' (SOL-8)
Generating synthesis internal form... (CIN-3)
Found top design routine 'edge_detect' specified by directive (CIN-52)
Synthesizing routine 'edge_detect' (CIN-13)
Inlining routine 'edge_detect' (CIN-14)
Optimizing block '/edge_detect' ... (CIN-4)
Inout port 'vin' is only used as an input. (OPT-10)
Inout port 'vout' is only used as an output. (OPT-11)
Loop '/edge_detect/core/ACC_GX:for' iterated at most 3 times. (LOOP-2)
Loop '/edge_detect/core/ACC_GX' iterated at most 3 times. (LOOP-2)
Loop '/edge_detect/core/ACC_GY:for' iterated at most 3 times. (LOOP-2)
Loop '/edge_detect/core/ACC_GY' iterated at most 3 times. (LOOP-2)
Design 'edge_detect' was read (SOL-1)
Optimizing partition '/edge_detect': (Total ops = 299, Real ops = 93, Vars = 70) (SOL-10)
Optimizing partition '/edge_detect/core': (Total ops = 299, Real ops = 93, Vars = 68) (SOL-10)
Optimizing partition '/edge_detect/core': (Total ops = 277, Real ops = 79, Vars = 70) (SOL-10)
Optimizing partition '/edge_detect': (Total ops = 277, Real ops = 79, Vars = 72) (SOL-10)
Optimizing partition '/edge_detect': (Total ops = 277, Real ops = 79, Vars = 72) (SOL-10)
Optimizing partition '/edge_detect/core': (Total ops = 277, Real ops = 79, Vars = 70) (SOL-10)
Optimizing partition '/edge_detect/core': (Total ops = 219, Real ops = 76, Vars = 53) (SOL-10)
Optimizing partition '/edge_detect': (Total ops = 219, Real ops = 76, Vars = 55) (SOL-10)
Optimizing partition '/edge_detect': (Total ops = 219, Real ops = 76, Vars = 55) (SOL-10)
Optimizing partition '/edge_detect/core': (Total ops = 216, Real ops = 76, Vars = 56) (SOL-10)
Optimizing partition '/edge_detect/core': (Total ops = 240, Real ops = 69, Vars = 19) (SOL-10)
Optimizing partition '/edge_detect': (Total ops = 240, Real ops = 69, Vars = 21) (SOL-10)
Optimizing partition '/edge_detect/core': (Total ops = 240, Real ops = 69, Vars = 23) (SOL-10)
Optimizing partition '/edge_detect/core': (Total ops = 240, Real ops = 69, Vars = 19) (SOL-10)
Optimizing partition '/edge_detect': (Total ops = 240, Real ops = 69, Vars = 21) (SOL-10)
Optimizing partition '/edge_detect/core': (Total ops = 240, Real ops = 69, Vars = 19) (SOL-10)
Optimizing partition '/edge_detect': (Total ops = 240, Real ops = 69, Vars = 21) (SOL-10)
Optimizing partition '/edge_detect': (Total ops = 240, Real ops = 69, Vars = 21) (SOL-10)
Optimizing partition '/edge_detect/core': (Total ops = 240, Real ops = 69, Vars = 19) (SOL-10)
Optimizing partition '/edge_detect/core': (Total ops = 288, Real ops = 68, Vars = 20) (SOL-10)
Optimizing partition '/edge_detect/core': (Total ops = 245, Real ops = 64, Vars = 20) (SOL-10)
Optimizing partition '/edge_detect': (Total ops = 245, Real ops = 64, Vars = 22) (SOL-10)
Optimizing partition '/edge_detect/core': (Total ops = 240, Real ops = 64, Vars = 24) (SOL-10)
Optimizing partition '/edge_detect/core': (Total ops = 234, Real ops = 64, Vars = 20) (SOL-10)
Optimizing partition '/edge_detect': (Total ops = 234, Real ops = 64, Vars = 22) (SOL-10)
Optimizing partition '/edge_detect/core': (Total ops = 234, Real ops = 64, Vars = 20) (SOL-10)
Optimizing partition '/edge_detect': (Total ops = 234, Real ops = 64, Vars = 22) (SOL-10)
Completed transformation 'compile' on solution 'edge_detect.v26': elapsed time 10.23 seconds, memory usage 465380kB, peak memory usage 494264kB (SOL-9)

# Messages from "go architect"

Starting transformation 'architect' on solution 'edge_detect.v26' (SOL-8)
Loop '/edge_detect/core/ACC_GX:for' is left rolled. (LOOP-4)
Loop '/edge_detect/core/ACC_GX' is left rolled. (LOOP-4)
Loop '/edge_detect/core/ACC_GY:for' is left rolled. (LOOP-4)
Loop '/edge_detect/core/ACC_GY' is left rolled. (LOOP-4)
Loop '/edge_detect/core/main' is left rolled. (LOOP-4)
Loop 'ACC_GY' is merged and folded into Loop 'ACC_GX' (LOOP-9)
Loop 'ACC_GY:for' is merged and folded into Loop 'ACC_GX:for' (LOOP-9)
Optimizing partition '/edge_detect/core': (Total ops = 240, Real ops = 66, Vars = 22) (SOL-10)
Optimizing partition '/edge_detect/core': (Total ops = 238, Real ops = 66, Vars = 22) (SOL-10)
Optimizing partition '/edge_detect/core': (Total ops = 234, Real ops = 64, Vars = 20) (SOL-10)
Optimizing partition '/edge_detect/core': (Total ops = 239, Real ops = 65, Vars = 22) (SOL-10)
Optimizing partition '/edge_detect/core': (Total ops = 237, Real ops = 65, Vars = 22) (SOL-10)
Optimizing partition '/edge_detect/core': (Total ops = 230, Real ops = 62, Vars = 22) (SOL-10)
Optimizing partition '/edge_detect': (Total ops = 230, Real ops = 62, Vars = 27) (SOL-10)
Optimizing partition '/edge_detect/core': (Total ops = 230, Real ops = 62, Vars = 22) (SOL-10)
Optimizing partition '/edge_detect': (Total ops = 230, Real ops = 62, Vars = 27) (SOL-10)
I/O-Port inferred - resource 'vin:rsc' (from var: vin) mapped to 'mgc_ioport.mgc_in_wire' (size: 90). (MEM-2)
I/O-Port inferred - resource 'vout:rsc' (from var: vout) mapped to 'mgc_ioport.mgc_out_stdreg' (size: 30). (MEM-2)
Optimizing partition '/edge_detect': (Total ops = 237, Real ops = 62, Vars = 27) (SOL-10)
Optimizing partition '/edge_detect/core': (Total ops = 237, Real ops = 62, Vars = 22) (SOL-10)
Optimizing partition '/edge_detect/core': (Total ops = 235, Real ops = 62, Vars = 23) (SOL-10)
Optimizing partition '/edge_detect/core': (Total ops = 232, Real ops = 62, Vars = 23) (SOL-10)
Optimizing partition '/edge_detect': (Total ops = 232, Real ops = 62, Vars = 28) (SOL-10)
Optimizing partition '/edge_detect': (Total ops = 232, Real ops = 62, Vars = 28) (SOL-10)
Optimizing partition '/edge_detect/core': (Total ops = 232, Real ops = 62, Vars = 23) (SOL-10)
Design 'edge_detect' contains '122' real operations. (SOL-11)
Optimizing partition '/edge_detect/core': (Total ops = 240, Real ops = 63, Vars = 26) (SOL-10)
Optimizing partition '/edge_detect/core': (Total ops = 239, Real ops = 63, Vars = 26) (SOL-10)
Optimizing partition '/edge_detect/core': (Total ops = 446, Real ops = 92, Vars = 152) (SOL-10)
Optimizing partition '/edge_detect/core': (Total ops = 287, Real ops = 90, Vars = 45) (SOL-10)
Completed transformation 'architect' on solution 'edge_detect.v26': elapsed time 28.91 seconds, memory usage 465380kB, peak memory usage 494264kB (SOL-9)

# Messages from "go allocate"

Performing concurrent resource allocation and scheduling on '/edge_detect/core' (CRAAS-1)
Prescheduled LOOP 'main' (3 c-steps) (SCHD-7)
Prescheduled SEQUENTIAL 'core' (total length 3 c-steps) (SCHD-8)
At least one feasible schedule exists. (CRAAS-9)
Resource allocation and scheduling done. (CRAAS-2)
Netlist written to file 'schedule.gnt' (NET-4)
Starting transformation 'allocate' on solution 'edge_detect.v26' (SOL-8)
Select qualified components for data operations ... (CRAAS-3)
Apply resource constraints on data operations ... (CRAAS-4)
Initial schedule of SEQUENTIAL 'core': Latency = 10, Area (Datapath, Register, Total) = 3730.95, 0.00, 3730.95 (CRAAS-11)
Optimized LOOP 'main': Latency = 10, Area (Datapath, Register, Total) = 3728.15, 0.00, 3728.15 (CRAAS-10)
Optimized LOOP 'main': Latency = 10, Area (Datapath, Register, Total) = 3639.20, 0.00, 3639.20 (CRAAS-10)
Optimized LOOP 'main': Latency = 10, Area (Datapath, Register, Total) = 3637.68, 0.00, 3637.68 (CRAAS-10)
Final schedule of SEQUENTIAL 'core': Latency = 10, Area (Datapath, Register, Total) = 3637.68, 0.00, 3637.68 (CRAAS-12)
Completed transformation 'allocate' on solution 'edge_detect.v26': elapsed time 3.79 seconds, memory usage 465860kB, peak memory usage 494264kB (SOL-9)
