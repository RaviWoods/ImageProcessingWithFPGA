// ----------------------------------------------------------------------
//  HLS HDL:        Verilog Netlister
//  HLS Version:    2011a.126 Production Release
//  HLS Date:       Wed Aug  8 00:52:07 PDT 2012
// 
//  Generated by:   rbw14@EEWS104A-013
//  Generated date: Wed May 06 12:44:51 2015
// ----------------------------------------------------------------------

// 
// ------------------------------------------------------------------
//  Design Unit:    edge_detect_core
// ------------------------------------------------------------------


module edge_detect_core (
  clk, en, arst_n, vin_rsc_mgc_in_wire_d, vout_rsc_mgc_out_stdreg_d
);
  input clk;
  input en;
  input arst_n;
  input [89:0] vin_rsc_mgc_in_wire_d;
  output [29:0] vout_rsc_mgc_out_stdreg_d;
  reg [29:0] vout_rsc_mgc_out_stdreg_d;



  // Interconnect Declarations for Component Instantiations 
  always @(*)
  begin : core
    // Interconnect Declarations
    reg [15:0] red_1_lpi_1;
    reg [15:0] green_1_lpi_1;
    reg [15:0] blue_1_lpi_1;
    reg [14:0] bx_1_sg1_lpi_1;
    reg [15:0] bx_0_lpi_1;
    reg [15:0] bx_2_lpi_1;
    reg [14:0] gx_1_sg1_lpi_1;
    reg [15:0] gx_0_lpi_1;
    reg [15:0] gx_2_lpi_1;
    reg [14:0] rx_1_sg1_lpi_1;
    reg [15:0] rx_0_lpi_1;
    reg [15:0] rx_2_lpi_1;
    reg exit_ACC2_lpi_1;
    reg exit_ACC1_lpi_1;
    reg exit_SHIFT_lpi_1;
    reg [15:0] red1_1_lpi_1;
    reg [15:0] green1_1_lpi_1;
    reg [15:0] blue1_1_lpi_1;
    reg [1:0] i_6_lpi_1;
    reg [1:0] i_8_lpi_1;
    reg [1:0] i_9_lpi_1;
    reg [15:0] red_2_lpi_1;
    reg [15:0] green_2_lpi_1;
    reg [15:0] blue_2_lpi_1;
    reg [1:0] i_7_lpi_1;
    reg [89:0] regs_regs_1_sva;
    reg [89:0] regs_regs_0_sva;
    reg [89:0] regs_regs_2_sva;
    reg exit_ACC4_sva;
    reg [89:0] regs_operator_din_sva;
    reg [15:0] rx_0_lpi_1_dfm;
    reg [15:0] rx_2_lpi_1_dfm;
    reg [15:0] gx_0_lpi_1_dfm;
    reg [15:0] gx_2_lpi_1_dfm;
    reg [15:0] bx_0_lpi_1_dfm;
    reg [15:0] bx_2_lpi_1_dfm;
    reg [89:0] regs_operator_din_lpi_1_dfm;
    reg [15:0] red_1_lpi_1_dfm;
    reg [15:0] green_1_lpi_1_dfm;
    reg [15:0] blue_1_lpi_1_dfm;
    reg [14:0] rx_1_sg1_lpi_1_dfm;
    reg [14:0] gx_1_sg1_lpi_1_dfm;
    reg [14:0] bx_1_sg1_lpi_1_dfm;
    reg exit_ACC2_lpi_1_dfm;
    reg exit_ACC1_lpi_1_dfm;
    reg exit_SHIFT_lpi_1_dfm;
    reg [15:0] red1_1_sva;
    reg [15:0] green1_1_sva;
    reg [15:0] blue1_1_sva;
    reg [1:0] i_6_sva;
    reg exit_ACC4_sva_2;
    reg [15:0] abs_abs_return_3_lpi_1_dfm;
    reg [15:0] abs_abs_return_4_lpi_1_dfm;
    reg [15:0] abs_abs_return_5_lpi_1_dfm;
    reg [15:0] red_3_sva;
    reg [15:0] green_3_sva;
    reg [15:0] blue_3_sva;
    reg [11:0] acc_psp_sva;
    reg [3:0] acc_1_psp_sva;
    reg [2:0] acc_imod_1_sva;
    reg [11:0] FRAME_intensity_acc_psp_sva;
    reg [15:0] red_1_sva_1;
    reg [15:0] green_1_sva_1;
    reg [15:0] blue_1_sva_1;
    reg [1:0] i_8_sva;
    reg [15:0] ry_0_sva;
    reg [15:0] gy_0_sva;
    reg [15:0] by_0_sva;
    reg [15:0] ry_2_sva;
    reg [15:0] gy_2_sva;
    reg [15:0] by_2_sva;
    reg equal_tmp;
    reg equal_tmp_1;
    reg [15:0] ry_0_sva_2;
    reg [15:0] gy_0_sva_2;
    reg [15:0] by_0_sva_2;
    reg [15:0] ry_2_sva_2;
    reg [15:0] gy_2_sva_2;
    reg [15:0] by_2_sva_2;
    reg nor_tmp;
    reg [1:0] i_9_sva;
    reg exit_ACC2_sva_1;
    reg [15:0] abs_abs_return_lpi_1_dfm;
    reg [15:0] abs_abs_return_1_lpi_1_dfm;
    reg [15:0] abs_abs_return_2_lpi_1_dfm;
    reg FRAME_slc_1_svs;
    reg FRAME_slc_3_svs;
    reg FRAME_slc_5_svs;
    reg [1:0] i_6_lpi_1_dfm;
    reg [15:0] rx_0_sva_1;
    reg [15:0] gx_0_sva_1;
    reg [15:0] bx_0_sva_1;
    reg [14:0] rx_1_sg1_sva_1;
    reg [14:0] gx_1_sg1_sva_1;
    reg [14:0] bx_1_sg1_sva_1;
    reg [15:0] rx_2_sva_1;
    reg [15:0] gx_2_sva_1;
    reg [15:0] bx_2_sva_1;
    reg equal_tmp_2;
    reg [15:0] rx_0_sva_2;
    reg [15:0] gx_0_sva_2;
    reg [15:0] bx_0_sva_2;
    reg [14:0] rx_1_sg1_sva_2;
    reg [14:0] gx_1_sg1_sva_2;
    reg [14:0] bx_1_sg1_sva_2;
    reg [15:0] rx_2_sva_2;
    reg [15:0] gx_2_sva_2;
    reg [15:0] bx_2_sva_2;
    reg nor_tmp_1;
    reg [1:0] i_7_sva;
    reg exit_ACC1_sva_1;
    reg [15:0] red1_1_lpi_1_dfm_1;
    reg [15:0] green1_1_lpi_1_dfm_1;
    reg [15:0] blue1_1_lpi_1_dfm_1;
    reg [1:0] i_8_lpi_1_dfm_1;
    reg [1:0] i_9_lpi_1_dfm_1;
    reg unequal_tmp;
    reg [89:0] SHIFT_if_else_else_else_slc_regs_regs_ctmp_sva;
    reg [1:0] i_7_lpi_1_dfm_1;
    reg [1:0] SHIFT_acc_1_psp;
    reg ACC1_and_37_tmp;
    reg SHIFT_and_17_m1c;
    reg [1:0] SHIFT_i_1_lpi_3;
    reg [1:0] SHIFT_i_1_lpi_1_dfm_2;
    reg [14:0] ry_0_sva_4_sg1;
    reg [14:0] gy_0_sva_4_sg1;
    reg [14:0] by_0_sva_4_sg1;
    reg [14:0] ry_2_sva_4_sg1;
    reg [14:0] gy_2_sva_4_sg1;
    reg [14:0] by_2_sva_4_sg1;
    reg SHIFT_nand_10_cse;
    reg ACC1_and_14_cse;
    reg ACC1_and_15_cse;
    reg ACC2_and_7_cse;
    reg ACC2_and_8_cse;
    reg ACC2_and_9_cse;
    reg SHIFT_nand_19_cse;
    reg SHIFT_and_18_cse;
    reg SHIFT_and_61_cse;
    reg SHIFT_nand_cse;
    reg SHIFT_and_41_cse;
    reg SHIFT_nand_6_cse;
    reg SHIFT_nand_32_cse;
    reg [14:0] ry_0_lpi_1_sg1;
    reg ry_0_lpi_3;
    reg [14:0] gy_0_lpi_1_sg1;
    reg gy_0_lpi_3;
    reg [14:0] by_0_lpi_1_sg1;
    reg by_0_lpi_3;
    reg [14:0] ry_2_lpi_1_sg1;
    reg ry_2_lpi_3;
    reg [14:0] gy_2_lpi_1_sg1;
    reg gy_2_lpi_3;
    reg [14:0] by_2_lpi_1_sg1;
    reg by_2_lpi_3;
    reg [14:0] ry_0_lpi_1_dfm_2_sg1;
    reg [14:0] ry_2_lpi_1_dfm_2_sg1;
    reg [14:0] gy_0_lpi_1_dfm_2_sg1;
    reg [14:0] gy_2_lpi_1_dfm_2_sg1;
    reg [14:0] by_0_lpi_1_dfm_2_sg1;
    reg [14:0] by_2_lpi_1_dfm_2_sg1;
    reg SHIFT_or_cse;

    reg[14:0] ACC4_mux_nl;
    reg[0:0] ACC4_mux_15_nl;
    reg[14:0] ACC4_mux_13_nl;
    reg[0:0] ACC4_mux_16_nl;
    reg[14:0] ACC4_mux_14_nl;
    reg[0:0] ACC4_mux_17_nl;
    reg[15:0] FRAME_mux_nl;
    reg[15:0] FRAME_mux_1_nl;
    reg[15:0] FRAME_mux_2_nl;
    reg[15:0] ACC2_mux_nl;
    reg[15:0] ACC2_mux_43_nl;
    reg[15:0] ACC2_mux_44_nl;
    reg[0:0] ACC1_mux_55_nl;
    reg[0:0] ACC2_mux_41_nl;
    reg[0:0] ACC1_mux_56_nl;
    begin : core_rlpExit
      forever begin : core_rlp
        // C-Step 0 of Loop 'core_rlp'
        i_7_lpi_1 = 2'b0;
        blue_2_lpi_1 = 16'b0;
        green_2_lpi_1 = 16'b0;
        red_2_lpi_1 = 16'b0;
        i_9_lpi_1 = 2'b0;
        by_2_lpi_3 = 1'b0;
        by_2_lpi_1_sg1 = 15'b0;
        gy_2_lpi_3 = 1'b0;
        gy_2_lpi_1_sg1 = 15'b0;
        ry_2_lpi_3 = 1'b0;
        ry_2_lpi_1_sg1 = 15'b0;
        by_0_lpi_3 = 1'b0;
        by_0_lpi_1_sg1 = 15'b0;
        gy_0_lpi_3 = 1'b0;
        gy_0_lpi_1_sg1 = 15'b0;
        ry_0_lpi_3 = 1'b0;
        ry_0_lpi_1_sg1 = 15'b0;
        i_8_lpi_1 = 2'b0;
        i_6_lpi_1 = 2'b0;
        blue1_1_lpi_1 = 16'b0;
        green1_1_lpi_1 = 16'b0;
        red1_1_lpi_1 = 16'b0;
        exit_SHIFT_lpi_1 = 1'b0;
        exit_ACC1_lpi_1 = 1'b0;
        exit_ACC2_lpi_1 = 1'b0;
        SHIFT_i_1_lpi_3 = 2'b0;
        rx_2_lpi_1 = 16'b0;
        rx_0_lpi_1 = 16'b0;
        rx_1_sg1_lpi_1 = 15'b0;
        gx_2_lpi_1 = 16'b0;
        gx_0_lpi_1 = 16'b0;
        gx_1_sg1_lpi_1 = 15'b0;
        bx_2_lpi_1 = 16'b0;
        bx_0_lpi_1 = 16'b0;
        bx_1_sg1_lpi_1 = 15'b0;
        blue_1_lpi_1 = 16'b0;
        green_1_lpi_1 = 16'b0;
        red_1_lpi_1 = 16'b0;
        regs_regs_1_sva = 90'b0;
        regs_regs_0_sva = 90'b0;
        regs_regs_2_sva = 90'b0;
        exit_ACC4_sva = 1'b1;
        begin : mainExit
          forever begin : main
            // C-Step 0 of Loop 'main'
            begin : waitLoop0Exit
              forever begin : waitLoop0
                @(posedge clk or negedge ( arst_n ));
                if ( ~ arst_n )
                  disable core_rlpExit;
                if ( en )
                  disable waitLoop0Exit;
              end
            end
            // C-Step 1 of Loop 'main'
            ACC1_and_37_tmp = 1'b0;
            unequal_tmp = 1'b0;
            SHIFT_if_else_else_else_slc_regs_regs_ctmp_sva = 90'b0;
            nor_tmp = 1'b0;
            equal_tmp_1 = 1'b0;
            equal_tmp = 1'b0;
            FRAME_slc_5_svs = 1'b0;
            abs_abs_return_2_lpi_1_dfm = 16'b0;
            FRAME_slc_3_svs = 1'b0;
            abs_abs_return_1_lpi_1_dfm = 16'b0;
            FRAME_slc_1_svs = 1'b0;
            abs_abs_return_lpi_1_dfm = 16'b0;
            SHIFT_acc_1_psp = 2'b0;
            nor_tmp_1 = 1'b0;
            equal_tmp_2 = 1'b0;
            i_7_lpi_1_dfm_1 = 2'b0;
            i_9_lpi_1_dfm_1 = 2'b0;
            i_8_lpi_1_dfm_1 = 2'b0;
            blue1_1_lpi_1_dfm_1 = 16'b0;
            green1_1_lpi_1_dfm_1 = 16'b0;
            red1_1_lpi_1_dfm_1 = 16'b0;
            by_2_lpi_1_dfm_2_sg1 = 15'b0;
            by_0_lpi_1_dfm_2_sg1 = 15'b0;
            gy_2_lpi_1_dfm_2_sg1 = 15'b0;
            gy_0_lpi_1_dfm_2_sg1 = 15'b0;
            ry_2_lpi_1_dfm_2_sg1 = 15'b0;
            ry_0_lpi_1_dfm_2_sg1 = 15'b0;
            exit_ACC1_sva_1 = 1'b0;
            i_7_sva = 2'b0;
            bx_2_sva_2 = 16'b0;
            gx_2_sva_2 = 16'b0;
            rx_2_sva_2 = 16'b0;
            bx_1_sg1_sva_2 = 15'b0;
            gx_1_sg1_sva_2 = 15'b0;
            rx_1_sg1_sva_2 = 15'b0;
            bx_0_sva_2 = 16'b0;
            gx_0_sva_2 = 16'b0;
            rx_0_sva_2 = 16'b0;
            bx_2_sva_1 = 16'b0;
            gx_2_sva_1 = 16'b0;
            rx_2_sva_1 = 16'b0;
            bx_1_sg1_sva_1 = 15'b0;
            gx_1_sg1_sva_1 = 15'b0;
            rx_1_sg1_sva_1 = 15'b0;
            bx_0_sva_1 = 16'b0;
            gx_0_sva_1 = 16'b0;
            rx_0_sva_1 = 16'b0;
            i_6_lpi_1_dfm = 2'b0;
            exit_ACC2_sva_1 = 1'b0;
            i_9_sva = 2'b0;
            by_2_sva_2 = 16'b0;
            gy_2_sva_2 = 16'b0;
            ry_2_sva_2 = 16'b0;
            by_0_sva_2 = 16'b0;
            gy_0_sva_2 = 16'b0;
            ry_0_sva_2 = 16'b0;
            by_2_sva_4_sg1 = 15'b0;
            gy_2_sva_4_sg1 = 15'b0;
            ry_2_sva_4_sg1 = 15'b0;
            by_0_sva_4_sg1 = 15'b0;
            gy_0_sva_4_sg1 = 15'b0;
            ry_0_sva_4_sg1 = 15'b0;
            by_2_sva = 16'b0;
            gy_2_sva = 16'b0;
            ry_2_sva = 16'b0;
            by_0_sva = 16'b0;
            gy_0_sva = 16'b0;
            ry_0_sva = 16'b0;
            i_8_sva = 2'b0;
            blue_1_sva_1 = 16'b0;
            green_1_sva_1 = 16'b0;
            red_1_sva_1 = 16'b0;
            exit_ACC4_sva_2 = 1'b0;
            i_6_sva = 2'b0;
            blue1_1_sva = 16'b0;
            green1_1_sva = 16'b0;
            red1_1_sva = 16'b0;
            regs_operator_din_sva = 90'b0;
            if ( exit_ACC4_sva ) begin
              regs_operator_din_sva = vin_rsc_mgc_in_wire_d;
            end
            rx_0_lpi_1_dfm = rx_0_lpi_1 & (signext_16_1(~ exit_ACC4_sva));
            rx_2_lpi_1_dfm = rx_2_lpi_1 & (signext_16_1(~ exit_ACC4_sva));
            gx_0_lpi_1_dfm = gx_0_lpi_1 & (signext_16_1(~ exit_ACC4_sva));
            gx_2_lpi_1_dfm = gx_2_lpi_1 & (signext_16_1(~ exit_ACC4_sva));
            bx_0_lpi_1_dfm = bx_0_lpi_1 & (signext_16_1(~ exit_ACC4_sva));
            bx_2_lpi_1_dfm = bx_2_lpi_1 & (signext_16_1(~ exit_ACC4_sva));
            regs_operator_din_lpi_1_dfm = MUX_v_90_2_2({regs_operator_din_lpi_1_dfm
                , regs_operator_din_sva}, exit_ACC4_sva);
            red_1_lpi_1_dfm = red_1_lpi_1 & (signext_16_1(~ exit_ACC4_sva));
            green_1_lpi_1_dfm = green_1_lpi_1 & (signext_16_1(~ exit_ACC4_sva));
            blue_1_lpi_1_dfm = blue_1_lpi_1 & (signext_16_1(~ exit_ACC4_sva));
            SHIFT_i_1_lpi_1_dfm_2 = MUX_v_2_2_2({SHIFT_i_1_lpi_3 , 2'b10}, exit_ACC4_sva);
            rx_1_sg1_lpi_1_dfm = rx_1_sg1_lpi_1 & (signext_15_1(~ exit_ACC4_sva));
            gx_1_sg1_lpi_1_dfm = gx_1_sg1_lpi_1 & (signext_15_1(~ exit_ACC4_sva));
            bx_1_sg1_lpi_1_dfm = bx_1_sg1_lpi_1 & (signext_15_1(~ exit_ACC4_sva));
            exit_ACC2_lpi_1_dfm = exit_ACC2_lpi_1 & (~ exit_ACC4_sva);
            exit_ACC1_lpi_1_dfm = exit_ACC1_lpi_1 & (~ exit_ACC4_sva);
            exit_SHIFT_lpi_1_dfm = exit_SHIFT_lpi_1 & (~ exit_ACC4_sva);
            if ( exit_SHIFT_lpi_1_dfm ) begin
              if ( exit_ACC1_lpi_1_dfm ) begin
                if ( exit_ACC2_lpi_1_dfm ) begin
                  ACC4_mux_nl = MUX_v_15_4_2({ry_0_lpi_1_sg1 , 15'b0 , ry_2_lpi_1_sg1
                      , 15'b0}, i_6_lpi_1);
                  ACC4_mux_15_nl = MUX_s_1_4_2({ry_0_lpi_3 , 1'b0 , ry_2_lpi_3 ,
                      1'b0}, i_6_lpi_1);
                  red1_1_sva = red1_1_lpi_1 + ({(ACC4_mux_nl) , (ACC4_mux_15_nl)});
                  ACC4_mux_13_nl = MUX_v_15_4_2({gy_0_lpi_1_sg1 , 15'b0 , gy_2_lpi_1_sg1
                      , 15'b0}, i_6_lpi_1);
                  ACC4_mux_16_nl = MUX_s_1_4_2({gy_0_lpi_3 , 1'b0 , gy_2_lpi_3 ,
                      1'b0}, i_6_lpi_1);
                  green1_1_sva = green1_1_lpi_1 + ({(ACC4_mux_13_nl) , (ACC4_mux_16_nl)});
                  ACC4_mux_14_nl = MUX_v_15_4_2({by_0_lpi_1_sg1 , 15'b0 , by_2_lpi_1_sg1
                      , 15'b0}, i_6_lpi_1);
                  ACC4_mux_17_nl = MUX_s_1_4_2({by_0_lpi_3 , 1'b0 , by_2_lpi_3 ,
                      1'b0}, i_6_lpi_1);
                  blue1_1_sva = blue1_1_lpi_1 + ({(ACC4_mux_14_nl) , (ACC4_mux_17_nl)});
                  i_6_sva = i_6_lpi_1 + 2'b1;
                  exit_ACC4_sva_2 = ~ (readslicef_3_1_2((({1'b1 , i_6_sva}) + 3'b1)));
                  if ( exit_ACC4_sva_2 ) begin
                    if ( red1_1_sva[15] ) begin
                      abs_abs_return_3_lpi_1_dfm = conv_u2u_15_16(~ (red1_1_sva[14:0]))
                          + 16'b1;
                    end
                    else begin
                      abs_abs_return_3_lpi_1_dfm = {1'b0, red1_1_sva[14:0]};
                    end
                    if ( green1_1_sva[15] ) begin
                      abs_abs_return_4_lpi_1_dfm = conv_u2u_15_16(~ (green1_1_sva[14:0]))
                          + 16'b1;
                    end
                    else begin
                      abs_abs_return_4_lpi_1_dfm = {1'b0, green1_1_sva[14:0]};
                    end
                    if ( blue1_1_sva[15] ) begin
                      abs_abs_return_5_lpi_1_dfm = conv_u2u_15_16(~ (blue1_1_sva[14:0]))
                          + 16'b1;
                    end
                    else begin
                      abs_abs_return_5_lpi_1_dfm = {1'b0, blue1_1_sva[14:0]};
                    end
                    FRAME_mux_nl = MUX_v_16_2_2({abs_abs_return_3_lpi_1_dfm , 16'b1111111111},
                        readslicef_6_1_5(((~ (abs_abs_return_3_lpi_1_dfm[15:10]))
                        + 6'b1)));
                    red_3_sva = (FRAME_mux_nl) + red_2_lpi_1;
                    FRAME_mux_1_nl = MUX_v_16_2_2({abs_abs_return_4_lpi_1_dfm , 16'b1111111111},
                        readslicef_6_1_5(((~ (abs_abs_return_4_lpi_1_dfm[15:10]))
                        + 6'b1)));
                    green_3_sva = (FRAME_mux_1_nl) + green_2_lpi_1;
                    FRAME_mux_2_nl = MUX_v_16_2_2({abs_abs_return_5_lpi_1_dfm , 16'b1111111111},
                        readslicef_6_1_5(((~ (abs_abs_return_5_lpi_1_dfm[15:10]))
                        + 6'b1)));
                    blue_3_sva = (FRAME_mux_2_nl) + blue_2_lpi_1;
                    acc_psp_sva = conv_u2u_11_12(conv_u2u_10_11((green_3_sva[9:0])
                        | (signext_10_1(readslicef_7_1_6((({1'b1 , (~ (green_3_sva[15:10]))})
                        + 7'b1))))) + conv_u2u_10_11((blue_3_sva[9:0]) | (signext_10_1(readslicef_7_1_6((({1'b1
                        , (~ (blue_3_sva[15:10]))}) + 7'b1)))))) + conv_u2u_10_12((red_3_sva[9:0])
                        | (signext_10_1(readslicef_7_1_6((({1'b1 , (~ (red_3_sva[15:10]))})
                        + 7'b1)))));
                    acc_1_psp_sva = (readslicef_5_4_1((conv_u2u_4_5({(readslicef_4_3_1((conv_u2u_3_4({(readslicef_3_2_1((conv_u2u_2_3({(~
                        (acc_psp_sva[3])) , 1'b1}) + conv_u2u_2_3({(acc_psp_sva[4])
                        , (acc_psp_sva[8])})))) , 1'b1}) + conv_u2u_3_4({(readslicef_3_2_1((conv_u2u_2_3({(~
                        (acc_psp_sva[5])) , 1'b1}) + conv_u2u_2_3({(acc_psp_sva[6])
                        , (~ (acc_psp_sva[7]))})))) , (acc_psp_sva[10])})))) , 1'b1})
                        + conv_u2u_3_5({(readslicef_3_2_1((conv_u2u_2_3({(~ (acc_psp_sva[1]))
                        , 1'b1}) + conv_u2u_2_3({(acc_psp_sva[2]) , (~ (acc_psp_sva[9]))}))))
                        , (~ (acc_psp_sva[11]))})))) + ({3'b101 , (acc_psp_sva[0])});
                    acc_imod_1_sva = conv_s2s_2_3(conv_s2s_1_2(acc_1_psp_sva[1])
                        + conv_u2s_1_2(acc_1_psp_sva[0])) + conv_s2s_2_3(acc_1_psp_sva[3:2]);
                    FRAME_intensity_acc_psp_sva = conv_u2s_10_12({(acc_psp_sva[11])
                        , (conv_u2u_8_9({(acc_psp_sva[11]) , 1'b0 , (acc_psp_sva[11])
                        , 1'b0 , (acc_psp_sva[11]) , 1'b0 , (signext_2_1(acc_psp_sva[7]))})
                        + conv_u2u_8_9(readslicef_9_8_1((({(acc_psp_sva[9]) , 1'b0
                        , (acc_psp_sva[9]) , 1'b0 , (acc_psp_sva[9]) , 1'b0 , (signext_2_1(acc_psp_sva[5]))
                        , 1'b1}) + conv_u2u_8_9({(readslicef_8_7_1((conv_u2u_7_8({(acc_psp_sva[7])
                        , 1'b0 , (acc_psp_sva[5]) , 1'b0 , (signext_2_1(acc_psp_sva[9]))
                        , 1'b1}) + conv_u2u_6_8({(acc_psp_sva[6]) , 1'b0 , (acc_psp_sva[6])
                        , 1'b0 , (acc_psp_sva[6]) , (acc_imod_1_sva[1])})))) , (~
                        (readslicef_3_1_2((({1'b1 , (acc_imod_1_sva[0]) , 1'b1})
                        + conv_u2s_2_3({(~ (acc_imod_1_sva[1])) , (~ (acc_imod_1_sva[2]))})))))})))))})
                        + conv_s2s_10_12(conv_u2s_9_10({(acc_psp_sva[10]) , 1'b0
                        , (acc_psp_sva[10]) , 1'b0 , (acc_psp_sva[10]) , 1'b0 , (acc_psp_sva[10])
                        , 1'b0 , (acc_psp_sva[10])}) + conv_s2s_8_10(readslicef_9_8_1((conv_u2s_8_9({(acc_psp_sva[8])
                        , 1'b0 , (acc_psp_sva[8]) , 1'b0 , (acc_psp_sva[8]) , 1'b0
                        , (acc_psp_sva[8]) , 1'b1}) + conv_s2s_7_9({(readslicef_7_6_1((conv_s2s_5_7({(readslicef_5_4_1((conv_s2s_4_5({(readslicef_4_3_1((conv_u2s_3_4({(acc_psp_sva[3])
                        , (acc_psp_sva[1]) , 1'b1}) + conv_s2s_3_4({1'b1 , (acc_psp_sva[2])
                        , (acc_psp_sva[3])})))) , 1'b1}) + conv_s2s_3_5({(acc_1_psp_sva[3:2])
                        , (acc_psp_sva[4])})))) , 1'b1}) + conv_u2s_5_7({(acc_psp_sva[7])
                        , (acc_psp_sva[4]) , (signext_2_1(acc_psp_sva[11])) , (acc_1_psp_sva[1])}))))
                        , (~ (acc_imod_1_sva[2]))})))));
                    vout_rsc_mgc_out_stdreg_d <= {((FRAME_intensity_acc_psp_sva[9:0])
                        | ({4'b0, signext_6_2(FRAME_intensity_acc_psp_sva[11:10])}))
                        , (FRAME_intensity_acc_psp_sva[9:6]) , ((FRAME_intensity_acc_psp_sva[5:0])
                        | (signext_6_2(FRAME_intensity_acc_psp_sva[11:10]))) , (FRAME_intensity_acc_psp_sva[9:0])};
                  end
                end
                else begin
                  ACC2_mux_nl = MUX_v_16_4_2({rx_0_lpi_1_dfm , ({rx_1_sg1_lpi_1_dfm
                      , 1'b0}) , rx_2_lpi_1_dfm , 16'b0}, i_8_lpi_1);
                  red_1_sva_1 = red_1_lpi_1_dfm + (ACC2_mux_nl);
                  ACC2_mux_43_nl = MUX_v_16_4_2({gx_0_lpi_1_dfm , ({gx_1_sg1_lpi_1_dfm
                      , 1'b0}) , gx_2_lpi_1_dfm , 16'b0}, i_8_lpi_1);
                  green_1_sva_1 = green_1_lpi_1_dfm + (ACC2_mux_43_nl);
                  ACC2_mux_44_nl = MUX_v_16_4_2({bx_0_lpi_1_dfm , ({bx_1_sg1_lpi_1_dfm
                      , 1'b0}) , bx_2_lpi_1_dfm , 16'b0}, i_8_lpi_1);
                  blue_1_sva_1 = blue_1_lpi_1_dfm + (ACC2_mux_44_nl);
                  i_8_sva = i_8_lpi_1 + 2'b1;
                  equal_tmp = (i_9_lpi_1[0]) & (~ (i_9_lpi_1[1]));
                  equal_tmp_1 = (i_9_lpi_1[1]) & (~ (i_9_lpi_1[0]));
                  nor_tmp = ~((~((i_9_lpi_1[1]) | (i_9_lpi_1[0]))) | equal_tmp |
                      equal_tmp_1);
                  case (i_9_lpi_1)
                    2'b0 : begin
                      ry_0_sva = readslicef_17_16_1((conv_s2s_12_17({1'b1 , (~ (regs_regs_0_sva[29:20]))
                          , 1'b1}) + ({ry_0_lpi_1_sg1 , ry_0_lpi_3 , 1'b1})));
                      gy_0_sva = readslicef_17_16_1((conv_s2s_12_17({1'b1 , (~ (regs_regs_0_sva[19:10]))
                          , 1'b1}) + ({gy_0_lpi_1_sg1 , gy_0_lpi_3 , 1'b1})));
                      by_0_sva = readslicef_17_16_1((conv_s2s_12_17({1'b1 , (~ (regs_regs_0_sva[9:0]))
                          , 1'b1}) + ({by_0_lpi_1_sg1 , by_0_lpi_3 , 1'b1})));
                      ry_2_sva = ({ry_2_lpi_1_sg1 , ry_2_lpi_3}) + conv_u2s_10_16(regs_regs_0_sva[89:80]);
                      gy_2_sva = ({gy_2_lpi_1_sg1 , gy_2_lpi_3}) + conv_u2s_10_16(regs_regs_0_sva[79:70]);
                      by_2_sva = ({by_2_lpi_1_sg1 , by_2_lpi_3}) + conv_u2s_10_16(regs_regs_0_sva[69:60]);
                    end
                    2'b1 : begin
                      ry_0_sva_4_sg1 = readslicef_16_15_1((conv_s2s_12_16({1'b1 ,
                          (~ (regs_regs_1_sva[29:20])) , 1'b1}) + ({ry_0_lpi_1_sg1
                          , 1'b1})));
                      gy_0_sva_4_sg1 = readslicef_16_15_1((conv_s2s_12_16({1'b1 ,
                          (~ (regs_regs_1_sva[19:10])) , 1'b1}) + ({gy_0_lpi_1_sg1
                          , 1'b1})));
                      by_0_sva_4_sg1 = readslicef_16_15_1((conv_s2s_12_16({1'b1 ,
                          (~ (regs_regs_1_sva[9:0])) , 1'b1}) + ({by_0_lpi_1_sg1
                          , 1'b1})));
                      ry_2_sva_4_sg1 = ry_2_lpi_1_sg1 + conv_u2s_10_15(regs_regs_1_sva[89:80]);
                      gy_2_sva_4_sg1 = gy_2_lpi_1_sg1 + conv_u2s_10_15(regs_regs_1_sva[79:70]);
                      by_2_sva_4_sg1 = by_2_lpi_1_sg1 + conv_u2s_10_15(regs_regs_1_sva[69:60]);
                    end
                    2'b10 : begin
                      ry_0_sva_2 = readslicef_17_16_1((conv_s2s_12_17({1'b1 , (~
                          (regs_regs_2_sva[29:20])) , 1'b1}) + ({ry_0_lpi_1_sg1 ,
                          ry_0_lpi_3 , 1'b1})));
                      gy_0_sva_2 = readslicef_17_16_1((conv_s2s_12_17({1'b1 , (~
                          (regs_regs_2_sva[19:10])) , 1'b1}) + ({gy_0_lpi_1_sg1 ,
                          gy_0_lpi_3 , 1'b1})));
                      by_0_sva_2 = readslicef_17_16_1((conv_s2s_12_17({1'b1 , (~
                          (regs_regs_2_sva[9:0])) , 1'b1}) + ({by_0_lpi_1_sg1 , by_0_lpi_3
                          , 1'b1})));
                      ry_2_sva_2 = ({ry_2_lpi_1_sg1 , ry_2_lpi_3}) + conv_u2s_10_16(regs_regs_2_sva[89:80]);
                      gy_2_sva_2 = ({gy_2_lpi_1_sg1 , gy_2_lpi_3}) + conv_u2s_10_16(regs_regs_2_sva[79:70]);
                      by_2_sva_2 = ({by_2_lpi_1_sg1 , by_2_lpi_3}) + conv_u2s_10_16(regs_regs_2_sva[69:60]);
                    end
                    default : begin
                      // NOP
                    end
                  endcase
                  i_9_sva = i_9_lpi_1 + 2'b1;
                  exit_ACC2_sva_1 = ~((readslicef_3_1_2((({1'b1 , i_8_sva}) + 3'b1)))
                      | (readslicef_3_1_2((({1'b1 , i_9_sva}) + 3'b1))));
                  if ( exit_ACC2_sva_1 ) begin
                    if ( red_1_sva_1[15] ) begin
                      abs_abs_return_lpi_1_dfm = conv_u2u_15_16(~ (red_1_sva_1[14:0]))
                          + 16'b1;
                    end
                    else begin
                      abs_abs_return_lpi_1_dfm = {1'b0, red_1_sva_1[14:0]};
                    end
                    if ( green_1_sva_1[15] ) begin
                      abs_abs_return_1_lpi_1_dfm = conv_u2u_15_16(~ (green_1_sva_1[14:0]))
                          + 16'b1;
                    end
                    else begin
                      abs_abs_return_1_lpi_1_dfm = {1'b0, green_1_sva_1[14:0]};
                    end
                    if ( blue_1_sva_1[15] ) begin
                      abs_abs_return_2_lpi_1_dfm = conv_u2u_15_16(~ (blue_1_sva_1[14:0]))
                          + 16'b1;
                    end
                    else begin
                      abs_abs_return_2_lpi_1_dfm = {1'b0, blue_1_sva_1[14:0]};
                    end
                    FRAME_slc_1_svs = readslicef_6_1_5(((~ (abs_abs_return_lpi_1_dfm[15:10]))
                        + 6'b1));
                    FRAME_slc_3_svs = readslicef_6_1_5(((~ (abs_abs_return_1_lpi_1_dfm[15:10]))
                        + 6'b1));
                    FRAME_slc_5_svs = readslicef_6_1_5(((~ (abs_abs_return_2_lpi_1_dfm[15:10]))
                        + 6'b1));
                  end
                  i_6_lpi_1_dfm = i_6_lpi_1 & (signext_2_1(~ exit_ACC2_sva_1));
                end
              end
              else begin
                equal_tmp_2 = (i_7_lpi_1[1]) & (~ (i_7_lpi_1[0]));
                nor_tmp_1 = ~((~((i_7_lpi_1[1]) | (i_7_lpi_1[0]))) | equal_tmp_2);
                case (i_7_lpi_1)
                  2'b0 : begin
                    rx_0_sva_1 = readslicef_17_16_1((conv_s2s_12_17({1'b1 , (~ (regs_regs_0_sva[29:20]))
                        , 1'b1}) + ({rx_0_lpi_1_dfm , 1'b1})));
                    gx_0_sva_1 = readslicef_17_16_1((conv_s2s_12_17({1'b1 , (~ (regs_regs_0_sva[19:10]))
                        , 1'b1}) + ({gx_0_lpi_1_dfm , 1'b1})));
                    bx_0_sva_1 = readslicef_17_16_1((conv_s2s_12_17({1'b1 , (~ (regs_regs_0_sva[9:0]))
                        , 1'b1}) + ({bx_0_lpi_1_dfm , 1'b1})));
                    rx_1_sg1_sva_1 = readslicef_16_15_1((conv_s2s_12_16({1'b1 , (~
                        (regs_regs_0_sva[59:50])) , 1'b1}) + ({rx_1_sg1_lpi_1_dfm
                        , 1'b1})));
                    gx_1_sg1_sva_1 = readslicef_16_15_1((conv_s2s_12_16({1'b1 , (~
                        (regs_regs_0_sva[49:40])) , 1'b1}) + ({gx_1_sg1_lpi_1_dfm
                        , 1'b1})));
                    bx_1_sg1_sva_1 = readslicef_16_15_1((conv_s2s_12_16({1'b1 , (~
                        (regs_regs_0_sva[39:30])) , 1'b1}) + ({bx_1_sg1_lpi_1_dfm
                        , 1'b1})));
                    rx_2_sva_1 = readslicef_17_16_1((conv_s2s_12_17({1'b1 , (~ (regs_regs_0_sva[89:80]))
                        , 1'b1}) + ({rx_2_lpi_1_dfm , 1'b1})));
                    gx_2_sva_1 = readslicef_17_16_1((conv_s2s_12_17({1'b1 , (~ (regs_regs_0_sva[79:70]))
                        , 1'b1}) + ({gx_2_lpi_1_dfm , 1'b1})));
                    bx_2_sva_1 = readslicef_17_16_1((conv_s2s_12_17({1'b1 , (~ (regs_regs_0_sva[69:60]))
                        , 1'b1}) + ({bx_2_lpi_1_dfm , 1'b1})));
                  end
                  2'b10 : begin
                    rx_0_sva_2 = rx_0_lpi_1_dfm + conv_u2s_10_16(regs_regs_2_sva[29:20]);
                    gx_0_sva_2 = gx_0_lpi_1_dfm + conv_u2s_10_16(regs_regs_2_sva[19:10]);
                    bx_0_sva_2 = bx_0_lpi_1_dfm + conv_u2s_10_16(regs_regs_2_sva[9:0]);
                    rx_1_sg1_sva_2 = rx_1_sg1_lpi_1_dfm + conv_u2s_10_15(regs_regs_2_sva[59:50]);
                    gx_1_sg1_sva_2 = gx_1_sg1_lpi_1_dfm + conv_u2s_10_15(regs_regs_2_sva[49:40]);
                    bx_1_sg1_sva_2 = bx_1_sg1_lpi_1_dfm + conv_u2s_10_15(regs_regs_2_sva[39:30]);
                    rx_2_sva_2 = rx_2_lpi_1_dfm + conv_u2s_10_16(regs_regs_2_sva[89:80]);
                    gx_2_sva_2 = gx_2_lpi_1_dfm + conv_u2s_10_16(regs_regs_2_sva[79:70]);
                    bx_2_sva_2 = bx_2_lpi_1_dfm + conv_u2s_10_16(regs_regs_2_sva[69:60]);
                  end
                  default : begin
                    // NOP
                  end
                endcase
                i_7_sva = i_7_lpi_1 + 2'b1;
                exit_ACC1_sva_1 = ~ (readslicef_3_1_2((({1'b1 , i_7_sva}) + 3'b1)));
                ry_0_lpi_1_dfm_2_sg1 = ry_0_lpi_1_sg1 & (signext_15_1(~ exit_ACC1_sva_1));
                ry_2_lpi_1_dfm_2_sg1 = ry_2_lpi_1_sg1 & (signext_15_1(~ exit_ACC1_sva_1));
                gy_0_lpi_1_dfm_2_sg1 = gy_0_lpi_1_sg1 & (signext_15_1(~ exit_ACC1_sva_1));
                gy_2_lpi_1_dfm_2_sg1 = gy_2_lpi_1_sg1 & (signext_15_1(~ exit_ACC1_sva_1));
                by_0_lpi_1_dfm_2_sg1 = by_0_lpi_1_sg1 & (signext_15_1(~ exit_ACC1_sva_1));
                by_2_lpi_1_dfm_2_sg1 = by_2_lpi_1_sg1 & (signext_15_1(~ exit_ACC1_sva_1));
                red1_1_lpi_1_dfm_1 = red1_1_lpi_1 & (signext_16_1(~ exit_ACC1_sva_1));
                green1_1_lpi_1_dfm_1 = green1_1_lpi_1 & (signext_16_1(~ exit_ACC1_sva_1));
                blue1_1_lpi_1_dfm_1 = blue1_1_lpi_1 & (signext_16_1(~ exit_ACC1_sva_1));
                i_8_lpi_1_dfm_1 = i_8_lpi_1 & (signext_2_1(~ exit_ACC1_sva_1));
                i_9_lpi_1_dfm_1 = i_9_lpi_1 & (signext_2_1(~ exit_ACC1_sva_1));
              end
              ACC1_and_37_tmp = (~ exit_ACC2_lpi_1_dfm) & exit_ACC1_lpi_1_dfm;
            end
            else begin
              unequal_tmp = (SHIFT_i_1_lpi_1_dfm_2[1]) | (SHIFT_i_1_lpi_1_dfm_2[0]);
              case (SHIFT_i_1_lpi_1_dfm_2)
                2'b0 : begin
                  // NOP
                end
                default : begin
                  SHIFT_if_else_else_else_slc_regs_regs_ctmp_sva = MUX_v_90_2_2({regs_regs_1_sva
                      , regs_regs_0_sva}, SHIFT_i_1_lpi_1_dfm_2[0]);
                end
              endcase
              SHIFT_acc_1_psp = SHIFT_i_1_lpi_1_dfm_2 + 2'b11;
              i_7_lpi_1_dfm_1 = i_7_lpi_1 & (signext_2_1(~ (SHIFT_acc_1_psp[1])));
            end
            SHIFT_and_17_m1c = exit_ACC1_lpi_1_dfm & exit_SHIFT_lpi_1_dfm;
            regs_regs_0_sva = MUX_v_90_2_2({regs_operator_din_lpi_1_dfm , regs_regs_0_sva},
                unequal_tmp | exit_SHIFT_lpi_1_dfm);
            regs_regs_1_sva = MUX_v_90_2_2({regs_regs_1_sva , SHIFT_if_else_else_else_slc_regs_regs_ctmp_sva},
                (SHIFT_i_1_lpi_1_dfm_2[0]) & unequal_tmp & (~ exit_SHIFT_lpi_1_dfm));
            regs_regs_2_sva = MUX_v_90_2_2({regs_regs_2_sva , SHIFT_if_else_else_else_slc_regs_regs_ctmp_sva},
                (~ (SHIFT_i_1_lpi_1_dfm_2[0])) & unequal_tmp & (~ exit_SHIFT_lpi_1_dfm));
            SHIFT_nand_10_cse = ~(exit_SHIFT_lpi_1_dfm & (~(exit_ACC1_lpi_1_dfm |
                nor_tmp_1)));
            ACC1_and_14_cse = (~(equal_tmp_2 | nor_tmp_1)) & (~ exit_ACC1_lpi_1_dfm)
                & exit_SHIFT_lpi_1_dfm;
            ACC1_and_15_cse = equal_tmp_2 & (~ exit_ACC1_lpi_1_dfm) & exit_SHIFT_lpi_1_dfm;
            rx_0_lpi_1 = MUX1HOT_v_16_3_2({rx_0_lpi_1_dfm , rx_0_sva_1 , rx_0_sva_2},
                {SHIFT_nand_10_cse , ACC1_and_14_cse , ACC1_and_15_cse});
            rx_2_lpi_1 = MUX1HOT_v_16_3_2({rx_2_lpi_1_dfm , rx_2_sva_1 , rx_2_sva_2},
                {SHIFT_nand_10_cse , ACC1_and_14_cse , ACC1_and_15_cse});
            gx_0_lpi_1 = MUX1HOT_v_16_3_2({gx_0_lpi_1_dfm , gx_0_sva_1 , gx_0_sva_2},
                {SHIFT_nand_10_cse , ACC1_and_14_cse , ACC1_and_15_cse});
            gx_2_lpi_1 = MUX1HOT_v_16_3_2({gx_2_lpi_1_dfm , gx_2_sva_1 , gx_2_sva_2},
                {SHIFT_nand_10_cse , ACC1_and_14_cse , ACC1_and_15_cse});
            bx_0_lpi_1 = MUX1HOT_v_16_3_2({bx_0_lpi_1_dfm , bx_0_sva_1 , bx_0_sva_2},
                {SHIFT_nand_10_cse , ACC1_and_14_cse , ACC1_and_15_cse});
            bx_2_lpi_1 = MUX1HOT_v_16_3_2({bx_2_lpi_1_dfm , bx_2_sva_1 , bx_2_sva_2},
                {SHIFT_nand_10_cse , ACC1_and_14_cse , ACC1_and_15_cse});
            ACC2_and_7_cse = (~(equal_tmp | equal_tmp_1 | nor_tmp)) & (~ exit_ACC2_lpi_1_dfm)
                & SHIFT_and_17_m1c;
            ACC2_and_8_cse = equal_tmp & (~ exit_ACC2_lpi_1_dfm) & SHIFT_and_17_m1c;
            ACC2_and_9_cse = equal_tmp_1 & (~ exit_ACC2_lpi_1_dfm) & SHIFT_and_17_m1c;
            SHIFT_nand_19_cse = ~((~((nor_tmp | exit_ACC2_lpi_1_dfm) & SHIFT_and_17_m1c))
                & exit_SHIFT_lpi_1_dfm);
            SHIFT_and_18_cse = (~ exit_ACC1_lpi_1_dfm) & exit_SHIFT_lpi_1_dfm;
            SHIFT_or_cse = ACC2_and_8_cse | SHIFT_nand_19_cse;
            ry_0_lpi_3 = MUX1HOT_s_1_4_2({(ry_0_sva[0]) , ry_0_lpi_3 , (ry_0_sva_2[0])
                , (ry_0_lpi_3 & (~ exit_ACC1_sva_1))}, {ACC2_and_7_cse , SHIFT_or_cse
                , ACC2_and_9_cse , SHIFT_and_18_cse});
            ry_0_lpi_1_sg1 = MUX1HOT_v_15_5_2({(ry_0_sva[15:1]) , ry_0_sva_4_sg1
                , (ry_0_sva_2[15:1]) , ry_0_lpi_1_sg1 , ry_0_lpi_1_dfm_2_sg1}, {ACC2_and_7_cse
                , ACC2_and_8_cse , ACC2_and_9_cse , SHIFT_nand_19_cse , SHIFT_and_18_cse});
            ry_2_lpi_3 = MUX1HOT_s_1_4_2({(ry_2_sva[0]) , ry_2_lpi_3 , (ry_2_sva_2[0])
                , (ry_2_lpi_3 & (~ exit_ACC1_sva_1))}, {ACC2_and_7_cse , SHIFT_or_cse
                , ACC2_and_9_cse , SHIFT_and_18_cse});
            ry_2_lpi_1_sg1 = MUX1HOT_v_15_5_2({(ry_2_sva[15:1]) , ry_2_sva_4_sg1
                , (ry_2_sva_2[15:1]) , ry_2_lpi_1_sg1 , ry_2_lpi_1_dfm_2_sg1}, {ACC2_and_7_cse
                , ACC2_and_8_cse , ACC2_and_9_cse , SHIFT_nand_19_cse , SHIFT_and_18_cse});
            gy_0_lpi_3 = MUX1HOT_s_1_4_2({(gy_0_sva[0]) , gy_0_lpi_3 , (gy_0_sva_2[0])
                , (gy_0_lpi_3 & (~ exit_ACC1_sva_1))}, {ACC2_and_7_cse , SHIFT_or_cse
                , ACC2_and_9_cse , SHIFT_and_18_cse});
            gy_0_lpi_1_sg1 = MUX1HOT_v_15_5_2({(gy_0_sva[15:1]) , gy_0_sva_4_sg1
                , (gy_0_sva_2[15:1]) , gy_0_lpi_1_sg1 , gy_0_lpi_1_dfm_2_sg1}, {ACC2_and_7_cse
                , ACC2_and_8_cse , ACC2_and_9_cse , SHIFT_nand_19_cse , SHIFT_and_18_cse});
            gy_2_lpi_3 = MUX1HOT_s_1_4_2({(gy_2_sva[0]) , gy_2_lpi_3 , (gy_2_sva_2[0])
                , (gy_2_lpi_3 & (~ exit_ACC1_sva_1))}, {ACC2_and_7_cse , SHIFT_or_cse
                , ACC2_and_9_cse , SHIFT_and_18_cse});
            gy_2_lpi_1_sg1 = MUX1HOT_v_15_5_2({(gy_2_sva[15:1]) , gy_2_sva_4_sg1
                , (gy_2_sva_2[15:1]) , gy_2_lpi_1_sg1 , gy_2_lpi_1_dfm_2_sg1}, {ACC2_and_7_cse
                , ACC2_and_8_cse , ACC2_and_9_cse , SHIFT_nand_19_cse , SHIFT_and_18_cse});
            by_0_lpi_3 = MUX1HOT_s_1_4_2({(by_0_sva[0]) , by_0_lpi_3 , (by_0_sva_2[0])
                , (by_0_lpi_3 & (~ exit_ACC1_sva_1))}, {ACC2_and_7_cse , SHIFT_or_cse
                , ACC2_and_9_cse , SHIFT_and_18_cse});
            by_0_lpi_1_sg1 = MUX1HOT_v_15_5_2({(by_0_sva[15:1]) , by_0_sva_4_sg1
                , (by_0_sva_2[15:1]) , by_0_lpi_1_sg1 , by_0_lpi_1_dfm_2_sg1}, {ACC2_and_7_cse
                , ACC2_and_8_cse , ACC2_and_9_cse , SHIFT_nand_19_cse , SHIFT_and_18_cse});
            by_2_lpi_3 = MUX1HOT_s_1_4_2({(by_2_sva[0]) , by_2_lpi_3 , (by_2_sva_2[0])
                , (by_2_lpi_3 & (~ exit_ACC1_sva_1))}, {ACC2_and_7_cse , SHIFT_or_cse
                , ACC2_and_9_cse , SHIFT_and_18_cse});
            by_2_lpi_1_sg1 = MUX1HOT_v_15_5_2({(by_2_sva[15:1]) , by_2_sva_4_sg1
                , (by_2_sva_2[15:1]) , by_2_lpi_1_sg1 , by_2_lpi_1_dfm_2_sg1}, {ACC2_and_7_cse
                , ACC2_and_8_cse , ACC2_and_9_cse , SHIFT_nand_19_cse , SHIFT_and_18_cse});
            SHIFT_and_61_cse = (~ exit_ACC2_lpi_1_dfm) & exit_ACC1_lpi_1_dfm & exit_SHIFT_lpi_1_dfm;
            red_1_lpi_1 = MUX_v_16_2_2({red_1_lpi_1_dfm , red_1_sva_1}, SHIFT_and_61_cse);
            SHIFT_nand_32_cse = ~(exit_SHIFT_lpi_1_dfm & ACC1_and_37_tmp & exit_ACC2_sva_1);
            red_2_lpi_1 = MUX1HOT_v_16_3_2({red_2_lpi_1 , abs_abs_return_lpi_1_dfm
                , 16'b1111111111}, {SHIFT_nand_32_cse , ((~ FRAME_slc_1_svs) & exit_ACC2_sva_1
                & ACC1_and_37_tmp & exit_SHIFT_lpi_1_dfm) , (FRAME_slc_1_svs & exit_ACC2_sva_1
                & ACC1_and_37_tmp & exit_SHIFT_lpi_1_dfm)});
            green_1_lpi_1 = MUX_v_16_2_2({green_1_lpi_1_dfm , green_1_sva_1}, SHIFT_and_61_cse);
            green_2_lpi_1 = MUX1HOT_v_16_3_2({green_2_lpi_1 , abs_abs_return_1_lpi_1_dfm
                , 16'b1111111111}, {SHIFT_nand_32_cse , ((~ FRAME_slc_3_svs) & exit_ACC2_sva_1
                & ACC1_and_37_tmp & exit_SHIFT_lpi_1_dfm) , (FRAME_slc_3_svs & exit_ACC2_sva_1
                & ACC1_and_37_tmp & exit_SHIFT_lpi_1_dfm)});
            blue_1_lpi_1 = MUX_v_16_2_2({blue_1_lpi_1_dfm , blue_1_sva_1}, SHIFT_and_61_cse);
            blue_2_lpi_1 = MUX1HOT_v_16_3_2({blue_2_lpi_1 , abs_abs_return_2_lpi_1_dfm
                , 16'b1111111111}, {SHIFT_nand_32_cse , ((~ FRAME_slc_5_svs) & exit_ACC2_sva_1
                & ACC1_and_37_tmp & exit_SHIFT_lpi_1_dfm) , (FRAME_slc_5_svs & exit_ACC2_sva_1
                & ACC1_and_37_tmp & exit_SHIFT_lpi_1_dfm)});
            SHIFT_nand_cse = ~((~((~ exit_ACC2_lpi_1_dfm) & SHIFT_and_17_m1c)) &
                exit_SHIFT_lpi_1_dfm);
            SHIFT_and_41_cse = exit_ACC2_lpi_1_dfm & SHIFT_and_17_m1c;
            red1_1_lpi_1 = MUX1HOT_v_16_3_2({red1_1_lpi_1 , red1_1_sva , red1_1_lpi_1_dfm_1},
                {SHIFT_nand_cse , SHIFT_and_41_cse , SHIFT_and_18_cse});
            green1_1_lpi_1 = MUX1HOT_v_16_3_2({green1_1_lpi_1 , green1_1_sva , green1_1_lpi_1_dfm_1},
                {SHIFT_nand_cse , SHIFT_and_41_cse , SHIFT_and_18_cse});
            blue1_1_lpi_1 = MUX1HOT_v_16_3_2({blue1_1_lpi_1 , blue1_1_sva , blue1_1_lpi_1_dfm_1},
                {SHIFT_nand_cse , SHIFT_and_41_cse , SHIFT_and_18_cse});
            i_6_lpi_1 = MUX1HOT_v_2_3_2({i_6_lpi_1 , i_6_sva , i_6_lpi_1_dfm}, {(~(exit_SHIFT_lpi_1_dfm
                & exit_ACC1_lpi_1_dfm)) , (exit_ACC2_lpi_1_dfm & exit_ACC1_lpi_1_dfm
                & exit_SHIFT_lpi_1_dfm) , SHIFT_and_61_cse});
            SHIFT_i_1_lpi_3 = MUX_v_2_2_2({SHIFT_acc_1_psp , SHIFT_i_1_lpi_1_dfm_2},
                exit_SHIFT_lpi_1_dfm);
            i_7_lpi_1 = MUX1HOT_v_2_3_2({i_7_lpi_1_dfm_1 , i_7_sva , i_7_lpi_1},
                {(~ exit_SHIFT_lpi_1_dfm) , SHIFT_and_18_cse , SHIFT_and_17_m1c});
            SHIFT_nand_6_cse = ~((~(exit_ACC2_lpi_1_dfm & SHIFT_and_17_m1c)) & exit_SHIFT_lpi_1_dfm);
            i_8_lpi_1 = MUX1HOT_v_2_3_2({i_8_sva , i_8_lpi_1 , i_8_lpi_1_dfm_1},
                {SHIFT_and_61_cse , SHIFT_nand_6_cse , SHIFT_and_18_cse});
            i_9_lpi_1 = MUX1HOT_v_2_3_2({i_9_sva , i_9_lpi_1 , i_9_lpi_1_dfm_1},
                {SHIFT_and_61_cse , SHIFT_nand_6_cse , SHIFT_and_18_cse});
            rx_1_sg1_lpi_1 = MUX1HOT_v_15_3_2({rx_1_sg1_lpi_1_dfm , rx_1_sg1_sva_1
                , rx_1_sg1_sva_2}, {SHIFT_nand_10_cse , ACC1_and_14_cse , ACC1_and_15_cse});
            gx_1_sg1_lpi_1 = MUX1HOT_v_15_3_2({gx_1_sg1_lpi_1_dfm , gx_1_sg1_sva_1
                , gx_1_sg1_sva_2}, {SHIFT_nand_10_cse , ACC1_and_14_cse , ACC1_and_15_cse});
            bx_1_sg1_lpi_1 = MUX1HOT_v_15_3_2({bx_1_sg1_lpi_1_dfm , bx_1_sg1_sva_1
                , bx_1_sg1_sva_2}, {SHIFT_nand_10_cse , ACC1_and_14_cse , ACC1_and_15_cse});
            exit_ACC4_sva = exit_ACC4_sva_2 & exit_ACC2_lpi_1_dfm & exit_ACC1_lpi_1_dfm
                & exit_SHIFT_lpi_1_dfm;
            ACC2_mux_41_nl = MUX_s_1_2_2({exit_ACC2_sva_1 , exit_ACC2_lpi_1_dfm},
                exit_ACC2_lpi_1_dfm);
            ACC1_mux_55_nl = MUX_s_1_2_2({exit_ACC2_lpi_1_dfm , (ACC2_mux_41_nl)},
                exit_ACC1_lpi_1_dfm);
            exit_ACC2_lpi_1 = MUX_s_1_2_2({exit_ACC2_lpi_1_dfm , (ACC1_mux_55_nl)},
                exit_SHIFT_lpi_1_dfm);
            ACC1_mux_56_nl = MUX_s_1_2_2({exit_ACC1_sva_1 , exit_ACC1_lpi_1_dfm},
                exit_ACC1_lpi_1_dfm);
            exit_ACC1_lpi_1 = MUX_s_1_2_2({exit_ACC1_lpi_1_dfm , (ACC1_mux_56_nl)},
                exit_SHIFT_lpi_1_dfm);
            exit_SHIFT_lpi_1 = MUX_s_1_2_2({(SHIFT_acc_1_psp[1]) , exit_SHIFT_lpi_1_dfm},
                exit_SHIFT_lpi_1_dfm);
          end
        end
      end
    end
    SHIFT_or_cse = 1'b0;
    by_2_lpi_1_dfm_2_sg1 = 15'b0;
    by_0_lpi_1_dfm_2_sg1 = 15'b0;
    gy_2_lpi_1_dfm_2_sg1 = 15'b0;
    gy_0_lpi_1_dfm_2_sg1 = 15'b0;
    ry_2_lpi_1_dfm_2_sg1 = 15'b0;
    ry_0_lpi_1_dfm_2_sg1 = 15'b0;
    by_2_lpi_3 = 1'b0;
    by_2_lpi_1_sg1 = 15'b0;
    gy_2_lpi_3 = 1'b0;
    gy_2_lpi_1_sg1 = 15'b0;
    ry_2_lpi_3 = 1'b0;
    ry_2_lpi_1_sg1 = 15'b0;
    by_0_lpi_3 = 1'b0;
    by_0_lpi_1_sg1 = 15'b0;
    gy_0_lpi_3 = 1'b0;
    gy_0_lpi_1_sg1 = 15'b0;
    ry_0_lpi_3 = 1'b0;
    ry_0_lpi_1_sg1 = 15'b0;
    SHIFT_nand_32_cse = 1'b0;
    SHIFT_nand_6_cse = 1'b0;
    SHIFT_and_41_cse = 1'b0;
    SHIFT_nand_cse = 1'b0;
    SHIFT_and_61_cse = 1'b0;
    SHIFT_and_18_cse = 1'b0;
    SHIFT_nand_19_cse = 1'b0;
    ACC2_and_9_cse = 1'b0;
    ACC2_and_8_cse = 1'b0;
    ACC2_and_7_cse = 1'b0;
    ACC1_and_15_cse = 1'b0;
    ACC1_and_14_cse = 1'b0;
    SHIFT_nand_10_cse = 1'b0;
    by_2_sva_4_sg1 = 15'b0;
    gy_2_sva_4_sg1 = 15'b0;
    ry_2_sva_4_sg1 = 15'b0;
    by_0_sva_4_sg1 = 15'b0;
    gy_0_sva_4_sg1 = 15'b0;
    ry_0_sva_4_sg1 = 15'b0;
    SHIFT_i_1_lpi_1_dfm_2 = 2'b0;
    SHIFT_i_1_lpi_3 = 2'b0;
    SHIFT_and_17_m1c = 1'b0;
    ACC1_and_37_tmp = 1'b0;
    SHIFT_acc_1_psp = 2'b0;
    i_7_lpi_1_dfm_1 = 2'b0;
    SHIFT_if_else_else_else_slc_regs_regs_ctmp_sva = 90'b0;
    unequal_tmp = 1'b0;
    i_9_lpi_1_dfm_1 = 2'b0;
    i_8_lpi_1_dfm_1 = 2'b0;
    blue1_1_lpi_1_dfm_1 = 16'b0;
    green1_1_lpi_1_dfm_1 = 16'b0;
    red1_1_lpi_1_dfm_1 = 16'b0;
    exit_ACC1_sva_1 = 1'b0;
    i_7_sva = 2'b0;
    nor_tmp_1 = 1'b0;
    bx_2_sva_2 = 16'b0;
    gx_2_sva_2 = 16'b0;
    rx_2_sva_2 = 16'b0;
    bx_1_sg1_sva_2 = 15'b0;
    gx_1_sg1_sva_2 = 15'b0;
    rx_1_sg1_sva_2 = 15'b0;
    bx_0_sva_2 = 16'b0;
    gx_0_sva_2 = 16'b0;
    rx_0_sva_2 = 16'b0;
    equal_tmp_2 = 1'b0;
    bx_2_sva_1 = 16'b0;
    gx_2_sva_1 = 16'b0;
    rx_2_sva_1 = 16'b0;
    bx_1_sg1_sva_1 = 15'b0;
    gx_1_sg1_sva_1 = 15'b0;
    rx_1_sg1_sva_1 = 15'b0;
    bx_0_sva_1 = 16'b0;
    gx_0_sva_1 = 16'b0;
    rx_0_sva_1 = 16'b0;
    i_6_lpi_1_dfm = 2'b0;
    FRAME_slc_5_svs = 1'b0;
    FRAME_slc_3_svs = 1'b0;
    FRAME_slc_1_svs = 1'b0;
    abs_abs_return_2_lpi_1_dfm = 16'b0;
    abs_abs_return_1_lpi_1_dfm = 16'b0;
    abs_abs_return_lpi_1_dfm = 16'b0;
    exit_ACC2_sva_1 = 1'b0;
    i_9_sva = 2'b0;
    nor_tmp = 1'b0;
    by_2_sva_2 = 16'b0;
    gy_2_sva_2 = 16'b0;
    ry_2_sva_2 = 16'b0;
    by_0_sva_2 = 16'b0;
    gy_0_sva_2 = 16'b0;
    ry_0_sva_2 = 16'b0;
    equal_tmp_1 = 1'b0;
    equal_tmp = 1'b0;
    by_2_sva = 16'b0;
    gy_2_sva = 16'b0;
    ry_2_sva = 16'b0;
    by_0_sva = 16'b0;
    gy_0_sva = 16'b0;
    ry_0_sva = 16'b0;
    i_8_sva = 2'b0;
    blue_1_sva_1 = 16'b0;
    green_1_sva_1 = 16'b0;
    red_1_sva_1 = 16'b0;
    FRAME_intensity_acc_psp_sva = 12'b0;
    acc_imod_1_sva = 3'b0;
    acc_1_psp_sva = 4'b0;
    acc_psp_sva = 12'b0;
    blue_3_sva = 16'b0;
    green_3_sva = 16'b0;
    red_3_sva = 16'b0;
    abs_abs_return_5_lpi_1_dfm = 16'b0;
    abs_abs_return_4_lpi_1_dfm = 16'b0;
    abs_abs_return_3_lpi_1_dfm = 16'b0;
    exit_ACC4_sva_2 = 1'b0;
    i_6_sva = 2'b0;
    blue1_1_sva = 16'b0;
    green1_1_sva = 16'b0;
    red1_1_sva = 16'b0;
    exit_SHIFT_lpi_1_dfm = 1'b0;
    exit_ACC1_lpi_1_dfm = 1'b0;
    exit_ACC2_lpi_1_dfm = 1'b0;
    bx_1_sg1_lpi_1_dfm = 15'b0;
    gx_1_sg1_lpi_1_dfm = 15'b0;
    rx_1_sg1_lpi_1_dfm = 15'b0;
    blue_1_lpi_1_dfm = 16'b0;
    green_1_lpi_1_dfm = 16'b0;
    red_1_lpi_1_dfm = 16'b0;
    regs_operator_din_lpi_1_dfm = 90'b0;
    bx_2_lpi_1_dfm = 16'b0;
    bx_0_lpi_1_dfm = 16'b0;
    gx_2_lpi_1_dfm = 16'b0;
    gx_0_lpi_1_dfm = 16'b0;
    rx_2_lpi_1_dfm = 16'b0;
    rx_0_lpi_1_dfm = 16'b0;
    regs_operator_din_sva = 90'b0;
    exit_ACC4_sva = 1'b0;
    regs_regs_2_sva = 90'b0;
    regs_regs_0_sva = 90'b0;
    regs_regs_1_sva = 90'b0;
    i_7_lpi_1 = 2'b0;
    blue_2_lpi_1 = 16'b0;
    green_2_lpi_1 = 16'b0;
    red_2_lpi_1 = 16'b0;
    i_9_lpi_1 = 2'b0;
    i_8_lpi_1 = 2'b0;
    i_6_lpi_1 = 2'b0;
    blue1_1_lpi_1 = 16'b0;
    green1_1_lpi_1 = 16'b0;
    red1_1_lpi_1 = 16'b0;
    exit_SHIFT_lpi_1 = 1'b0;
    exit_ACC1_lpi_1 = 1'b0;
    exit_ACC2_lpi_1 = 1'b0;
    rx_2_lpi_1 = 16'b0;
    rx_0_lpi_1 = 16'b0;
    rx_1_sg1_lpi_1 = 15'b0;
    gx_2_lpi_1 = 16'b0;
    gx_0_lpi_1 = 16'b0;
    gx_1_sg1_lpi_1 = 15'b0;
    bx_2_lpi_1 = 16'b0;
    bx_0_lpi_1 = 16'b0;
    bx_1_sg1_lpi_1 = 15'b0;
    blue_1_lpi_1 = 16'b0;
    green_1_lpi_1 = 16'b0;
    red_1_lpi_1 = 16'b0;
    vout_rsc_mgc_out_stdreg_d <= 30'b0;
  end


  function [15:0] signext_16_1;
    input [0:0] vector;
  begin
    signext_16_1= {{15{vector[0]}}, vector};
  end
  endfunction


  function [89:0] MUX_v_90_2_2;
    input [179:0] inputs;
    input [0:0] sel;
    reg [89:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = inputs[179:90];
      end
      1'b1 : begin
        result = inputs[89:0];
      end
      default : begin
        result = inputs[179:90];
      end
    endcase
    MUX_v_90_2_2 = result;
  end
  endfunction


  function [1:0] MUX_v_2_2_2;
    input [3:0] inputs;
    input [0:0] sel;
    reg [1:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = inputs[3:2];
      end
      1'b1 : begin
        result = inputs[1:0];
      end
      default : begin
        result = inputs[3:2];
      end
    endcase
    MUX_v_2_2_2 = result;
  end
  endfunction


  function [14:0] signext_15_1;
    input [0:0] vector;
  begin
    signext_15_1= {{14{vector[0]}}, vector};
  end
  endfunction


  function [14:0] MUX_v_15_4_2;
    input [59:0] inputs;
    input [1:0] sel;
    reg [14:0] result;
  begin
    case (sel)
      2'b00 : begin
        result = inputs[59:45];
      end
      2'b01 : begin
        result = inputs[44:30];
      end
      2'b10 : begin
        result = inputs[29:15];
      end
      2'b11 : begin
        result = inputs[14:0];
      end
      default : begin
        result = inputs[59:45];
      end
    endcase
    MUX_v_15_4_2 = result;
  end
  endfunction


  function [0:0] MUX_s_1_4_2;
    input [3:0] inputs;
    input [1:0] sel;
    reg [0:0] result;
  begin
    case (sel)
      2'b00 : begin
        result = inputs[3:3];
      end
      2'b01 : begin
        result = inputs[2:2];
      end
      2'b10 : begin
        result = inputs[1:1];
      end
      2'b11 : begin
        result = inputs[0:0];
      end
      default : begin
        result = inputs[3:3];
      end
    endcase
    MUX_s_1_4_2 = result;
  end
  endfunction


  function [0:0] readslicef_3_1_2;
    input [2:0] vector;
    reg [2:0] tmp;
  begin
    tmp = vector >> 2;
    readslicef_3_1_2 = tmp[0:0];
  end
  endfunction


  function [15:0] MUX_v_16_2_2;
    input [31:0] inputs;
    input [0:0] sel;
    reg [15:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = inputs[31:16];
      end
      1'b1 : begin
        result = inputs[15:0];
      end
      default : begin
        result = inputs[31:16];
      end
    endcase
    MUX_v_16_2_2 = result;
  end
  endfunction


  function [0:0] readslicef_6_1_5;
    input [5:0] vector;
    reg [5:0] tmp;
  begin
    tmp = vector >> 5;
    readslicef_6_1_5 = tmp[0:0];
  end
  endfunction


  function [0:0] readslicef_7_1_6;
    input [6:0] vector;
    reg [6:0] tmp;
  begin
    tmp = vector >> 6;
    readslicef_7_1_6 = tmp[0:0];
  end
  endfunction


  function [9:0] signext_10_1;
    input [0:0] vector;
  begin
    signext_10_1= {{9{vector[0]}}, vector};
  end
  endfunction


  function [3:0] readslicef_5_4_1;
    input [4:0] vector;
    reg [4:0] tmp;
  begin
    tmp = vector >> 1;
    readslicef_5_4_1 = tmp[3:0];
  end
  endfunction


  function [2:0] readslicef_4_3_1;
    input [3:0] vector;
    reg [3:0] tmp;
  begin
    tmp = vector >> 1;
    readslicef_4_3_1 = tmp[2:0];
  end
  endfunction


  function [1:0] readslicef_3_2_1;
    input [2:0] vector;
    reg [2:0] tmp;
  begin
    tmp = vector >> 1;
    readslicef_3_2_1 = tmp[1:0];
  end
  endfunction


  function [1:0] signext_2_1;
    input [0:0] vector;
  begin
    signext_2_1= {{1{vector[0]}}, vector};
  end
  endfunction


  function [7:0] readslicef_9_8_1;
    input [8:0] vector;
    reg [8:0] tmp;
  begin
    tmp = vector >> 1;
    readslicef_9_8_1 = tmp[7:0];
  end
  endfunction


  function [6:0] readslicef_8_7_1;
    input [7:0] vector;
    reg [7:0] tmp;
  begin
    tmp = vector >> 1;
    readslicef_8_7_1 = tmp[6:0];
  end
  endfunction


  function [5:0] readslicef_7_6_1;
    input [6:0] vector;
    reg [6:0] tmp;
  begin
    tmp = vector >> 1;
    readslicef_7_6_1 = tmp[5:0];
  end
  endfunction


  function [5:0] signext_6_2;
    input [1:0] vector;
  begin
    signext_6_2= {{4{vector[1]}}, vector};
  end
  endfunction


  function [15:0] MUX_v_16_4_2;
    input [63:0] inputs;
    input [1:0] sel;
    reg [15:0] result;
  begin
    case (sel)
      2'b00 : begin
        result = inputs[63:48];
      end
      2'b01 : begin
        result = inputs[47:32];
      end
      2'b10 : begin
        result = inputs[31:16];
      end
      2'b11 : begin
        result = inputs[15:0];
      end
      default : begin
        result = inputs[63:48];
      end
    endcase
    MUX_v_16_4_2 = result;
  end
  endfunction


  function [15:0] readslicef_17_16_1;
    input [16:0] vector;
    reg [16:0] tmp;
  begin
    tmp = vector >> 1;
    readslicef_17_16_1 = tmp[15:0];
  end
  endfunction


  function [14:0] readslicef_16_15_1;
    input [15:0] vector;
    reg [15:0] tmp;
  begin
    tmp = vector >> 1;
    readslicef_16_15_1 = tmp[14:0];
  end
  endfunction


  function [15:0] MUX1HOT_v_16_3_2;
    input [47:0] inputs;
    input [2:0] sel;
    reg [15:0] result;
    integer i;
  begin
    result = inputs[0+:16] & {16{sel[0]}};
    for( i = 1; i < 3; i = i + 1 )
      result = result | (inputs[i*16+:16] & {16{sel[i]}});
    MUX1HOT_v_16_3_2 = result;
  end
  endfunction


  function [0:0] MUX1HOT_s_1_4_2;
    input [3:0] inputs;
    input [3:0] sel;
    reg [0:0] result;
    integer i;
  begin
    result = inputs[0+:1] & {1{sel[0]}};
    for( i = 1; i < 4; i = i + 1 )
      result = result | (inputs[i*1+:1] & {1{sel[i]}});
    MUX1HOT_s_1_4_2 = result;
  end
  endfunction


  function [14:0] MUX1HOT_v_15_5_2;
    input [74:0] inputs;
    input [4:0] sel;
    reg [14:0] result;
    integer i;
  begin
    result = inputs[0+:15] & {15{sel[0]}};
    for( i = 1; i < 5; i = i + 1 )
      result = result | (inputs[i*15+:15] & {15{sel[i]}});
    MUX1HOT_v_15_5_2 = result;
  end
  endfunction


  function [1:0] MUX1HOT_v_2_3_2;
    input [5:0] inputs;
    input [2:0] sel;
    reg [1:0] result;
    integer i;
  begin
    result = inputs[0+:2] & {2{sel[0]}};
    for( i = 1; i < 3; i = i + 1 )
      result = result | (inputs[i*2+:2] & {2{sel[i]}});
    MUX1HOT_v_2_3_2 = result;
  end
  endfunction


  function [14:0] MUX1HOT_v_15_3_2;
    input [44:0] inputs;
    input [2:0] sel;
    reg [14:0] result;
    integer i;
  begin
    result = inputs[0+:15] & {15{sel[0]}};
    for( i = 1; i < 3; i = i + 1 )
      result = result | (inputs[i*15+:15] & {15{sel[i]}});
    MUX1HOT_v_15_3_2 = result;
  end
  endfunction


  function [0:0] MUX_s_1_2_2;
    input [1:0] inputs;
    input [0:0] sel;
    reg [0:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = inputs[1:1];
      end
      1'b1 : begin
        result = inputs[0:0];
      end
      default : begin
        result = inputs[1:1];
      end
    endcase
    MUX_s_1_2_2 = result;
  end
  endfunction


  function  [15:0] conv_u2u_15_16 ;
    input [14:0]  vector ;
  begin
    conv_u2u_15_16 = {1'b0, vector};
  end
  endfunction


  function  [11:0] conv_u2u_11_12 ;
    input [10:0]  vector ;
  begin
    conv_u2u_11_12 = {1'b0, vector};
  end
  endfunction


  function  [10:0] conv_u2u_10_11 ;
    input [9:0]  vector ;
  begin
    conv_u2u_10_11 = {1'b0, vector};
  end
  endfunction


  function  [11:0] conv_u2u_10_12 ;
    input [9:0]  vector ;
  begin
    conv_u2u_10_12 = {{2{1'b0}}, vector};
  end
  endfunction


  function  [4:0] conv_u2u_4_5 ;
    input [3:0]  vector ;
  begin
    conv_u2u_4_5 = {1'b0, vector};
  end
  endfunction


  function  [3:0] conv_u2u_3_4 ;
    input [2:0]  vector ;
  begin
    conv_u2u_3_4 = {1'b0, vector};
  end
  endfunction


  function  [2:0] conv_u2u_2_3 ;
    input [1:0]  vector ;
  begin
    conv_u2u_2_3 = {1'b0, vector};
  end
  endfunction


  function  [4:0] conv_u2u_3_5 ;
    input [2:0]  vector ;
  begin
    conv_u2u_3_5 = {{2{1'b0}}, vector};
  end
  endfunction


  function signed [2:0] conv_s2s_2_3 ;
    input signed [1:0]  vector ;
  begin
    conv_s2s_2_3 = {vector[1], vector};
  end
  endfunction


  function signed [1:0] conv_s2s_1_2 ;
    input signed [0:0]  vector ;
  begin
    conv_s2s_1_2 = {vector[0], vector};
  end
  endfunction


  function signed [1:0] conv_u2s_1_2 ;
    input [0:0]  vector ;
  begin
    conv_u2s_1_2 = {1'b0, vector};
  end
  endfunction


  function signed [11:0] conv_u2s_10_12 ;
    input [9:0]  vector ;
  begin
    conv_u2s_10_12 = {{2{1'b0}}, vector};
  end
  endfunction


  function  [8:0] conv_u2u_8_9 ;
    input [7:0]  vector ;
  begin
    conv_u2u_8_9 = {1'b0, vector};
  end
  endfunction


  function  [7:0] conv_u2u_7_8 ;
    input [6:0]  vector ;
  begin
    conv_u2u_7_8 = {1'b0, vector};
  end
  endfunction


  function  [7:0] conv_u2u_6_8 ;
    input [5:0]  vector ;
  begin
    conv_u2u_6_8 = {{2{1'b0}}, vector};
  end
  endfunction


  function signed [2:0] conv_u2s_2_3 ;
    input [1:0]  vector ;
  begin
    conv_u2s_2_3 = {1'b0, vector};
  end
  endfunction


  function signed [11:0] conv_s2s_10_12 ;
    input signed [9:0]  vector ;
  begin
    conv_s2s_10_12 = {{2{vector[9]}}, vector};
  end
  endfunction


  function signed [9:0] conv_u2s_9_10 ;
    input [8:0]  vector ;
  begin
    conv_u2s_9_10 = {1'b0, vector};
  end
  endfunction


  function signed [9:0] conv_s2s_8_10 ;
    input signed [7:0]  vector ;
  begin
    conv_s2s_8_10 = {{2{vector[7]}}, vector};
  end
  endfunction


  function signed [8:0] conv_u2s_8_9 ;
    input [7:0]  vector ;
  begin
    conv_u2s_8_9 = {1'b0, vector};
  end
  endfunction


  function signed [8:0] conv_s2s_7_9 ;
    input signed [6:0]  vector ;
  begin
    conv_s2s_7_9 = {{2{vector[6]}}, vector};
  end
  endfunction


  function signed [6:0] conv_s2s_5_7 ;
    input signed [4:0]  vector ;
  begin
    conv_s2s_5_7 = {{2{vector[4]}}, vector};
  end
  endfunction


  function signed [4:0] conv_s2s_4_5 ;
    input signed [3:0]  vector ;
  begin
    conv_s2s_4_5 = {vector[3], vector};
  end
  endfunction


  function signed [3:0] conv_u2s_3_4 ;
    input [2:0]  vector ;
  begin
    conv_u2s_3_4 = {1'b0, vector};
  end
  endfunction


  function signed [3:0] conv_s2s_3_4 ;
    input signed [2:0]  vector ;
  begin
    conv_s2s_3_4 = {vector[2], vector};
  end
  endfunction


  function signed [4:0] conv_s2s_3_5 ;
    input signed [2:0]  vector ;
  begin
    conv_s2s_3_5 = {{2{vector[2]}}, vector};
  end
  endfunction


  function signed [6:0] conv_u2s_5_7 ;
    input [4:0]  vector ;
  begin
    conv_u2s_5_7 = {{2{1'b0}}, vector};
  end
  endfunction


  function signed [16:0] conv_s2s_12_17 ;
    input signed [11:0]  vector ;
  begin
    conv_s2s_12_17 = {{5{vector[11]}}, vector};
  end
  endfunction


  function signed [15:0] conv_u2s_10_16 ;
    input [9:0]  vector ;
  begin
    conv_u2s_10_16 = {{6{1'b0}}, vector};
  end
  endfunction


  function signed [15:0] conv_s2s_12_16 ;
    input signed [11:0]  vector ;
  begin
    conv_s2s_12_16 = {{4{vector[11]}}, vector};
  end
  endfunction


  function signed [14:0] conv_u2s_10_15 ;
    input [9:0]  vector ;
  begin
    conv_u2s_10_15 = {{5{1'b0}}, vector};
  end
  endfunction

endmodule

// ------------------------------------------------------------------
//  Design Unit:    edge_detect
//  Generated from file(s):
//  140) $PROJECT_HOME/../edge_detect_c/edge5.c
// ------------------------------------------------------------------


module edge_detect (
  vin_rsc_z, vout_rsc_z, clk, en, arst_n
);
  input [89:0] vin_rsc_z;
  output [29:0] vout_rsc_z;
  input clk;
  input en;
  input arst_n;


  // Interconnect Declarations
  wire [89:0] vin_rsc_mgc_in_wire_d;
  wire [29:0] vout_rsc_mgc_out_stdreg_d;


  // Interconnect Declarations for Component Instantiations 
  mgc_in_wire #(.rscid(1),
  .width(90)) vin_rsc_mgc_in_wire (
      .d(vin_rsc_mgc_in_wire_d),
      .z(vin_rsc_z)
    );
  mgc_out_stdreg #(.rscid(2),
  .width(30)) vout_rsc_mgc_out_stdreg (
      .d(vout_rsc_mgc_out_stdreg_d),
      .z(vout_rsc_z)
    );
  edge_detect_core edge_detect_core_inst (
      .clk(clk),
      .en(en),
      .arst_n(arst_n),
      .vin_rsc_mgc_in_wire_d(vin_rsc_mgc_in_wire_d),
      .vout_rsc_mgc_out_stdreg_d(vout_rsc_mgc_out_stdreg_d)
    );
endmodule



