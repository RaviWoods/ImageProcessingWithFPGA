//  Catapult University Version 2011a.126 (Production Release) Wed Aug  8 00:52:07 PDT 2012
//  
//  Copyright (c) Calypto Design Systems, Inc., 1996-2012, All Rights Reserved.
//                       UNPUBLISHED, LICENSED SOFTWARE.
//            CONFIDENTIAL AND PROPRIETARY INFORMATION WHICH IS THE
//          PROPERTY OF CALYPTO DESIGN SYSTEMS OR ITS LICENSORS
//  
//  Running on Windows 7 rbw14@EEWS104A-013 Service Pack 1 6.01.7601 i686
//  
//  Package information: SIFLIBS v17.0_1.1, HLS_PKGS v17.0_1.1, 
//                       DesignPad v2.78_0.0
//  
//  This version may only be used for academic purposes.  Some optimizations 
//  are disabled, so results obtained from this version may be sub-optimal.
//  
//  Start time Wed May 06 11:50:28 2015
# -------------------------------------------------
# Logging session transcript to file "C:\Users\rbw14\AppData\Local\Temp\log10602540adc.0"
# Loading options from registry.
project new -name Edge3
set_working_dir C:/fpga-catapult-c-spring/Edge3
solution file add ../edge_detect_c/edge3.c
# /INPUTFILES/1
solution file add ../edge_detect_c/edge.h
# /INPUTFILES/2
solution file add ../edge_detect_c/shift_class.h
# /INPUTFILES/3
go analyze
# Creating project directory 'C:\fpga-catapult-c-spring\Edge3\Edge3'. (PRJ-1)
# Moving session transcript to file "C:\fpga-catapult-c-spring\Edge3\catapult.log"
# Info: Starting transformation 'analyze' on solution 'solution.v1' (SOL-8)
# Front End called with arguments: -- {C:\fpga-catapult-c-spring\edge_detect_c\shift_class.h} {C:\fpga-catapult-c-spring\edge_detect_c\edge.h} {C:\fpga-catapult-c-spring\edge_detect_c\edge3.c} (CIN-69)
# Edison Design Group C++/C Front End - Version 3.10.1 (CIN-1)
# $PROJECT_HOME/../edge_detect_c/edge3.c(49): Pragma 'hls_design<top>' detected on routine 'edge_detect' (CIN-6)
# Source file analysis completed (CIN-68)
# Info: Completed transformation 'analyze' on solution 'solution.v1': elapsed time 1.78 seconds, memory usage 145564kB, peak memory usage 221720kB (SOL-9)
directive set -CLOCKS {clk {-CLOCK_PERIOD 0.0 -CLOCK_EDGE rising -CLOCK_HIGH_TIME 0.000000 -CLOCK_OFFSET 0.000000 -CLOCK_UNCERTAINTY 0.0 -RESET_KIND async -RESET_SYNC_NAME rst -RESET_SYNC_ACTIVE high -RESET_ASYNC_NAME arst_n -RESET_ASYNC_ACTIVE low -ENABLE_NAME en -ENABLE_ACTIVE high}}
# /CLOCKS {clk {-CLOCK_PERIOD 0.0 -CLOCK_EDGE rising -CLOCK_UNCERTAINTY 0.0 -RESET_SYNC_NAME rst -RESET_ASYNC_NAME arst_n -RESET_KIND async -RESET_SYNC_ACTIVE high -RESET_ASYNC_ACTIVE low -ENABLE_NAME en -ENABLE_ACTIVE high}}
directive set -DESIGN_HIERARCHY edge_detect
# /DESIGN_HIERARCHY edge_detect
directive set -TECHLIBS {{Altera_accel_CycloneIII.lib Altera_accel_CycloneIII} {mgc_Altera-Cyclone-III-6_beh_psr.lib {{mgc_Altera-Cyclone-III-6_beh_psr part EP3C16F484C}}}}
# /TECHLIBS {{Altera_accel_CycloneIII.lib Altera_accel_CycloneIII} {mgc_Altera-Cyclone-III-6_beh_psr.lib {{mgc_Altera-Cyclone-III-6_beh_psr part EP3C16F484C}}}}
directive set -CLOCKS {clk {-CLOCK_PERIOD 20.0 -CLOCK_EDGE rising -CLOCK_HIGH_TIME 10.00 -CLOCK_OFFSET 0.000000 -CLOCK_UNCERTAINTY 0.0 -RESET_KIND async -RESET_SYNC_NAME rst -RESET_SYNC_ACTIVE high -RESET_ASYNC_NAME arst_n -RESET_ASYNC_ACTIVE low -ENABLE_NAME en -ENABLE_ACTIVE high}}
# /CLOCKS {clk {-CLOCK_PERIOD 20.0 -CLOCK_EDGE rising -CLOCK_UNCERTAINTY 0.0 -CLOCK_HIGH_TIME 10.0 -RESET_SYNC_NAME rst -RESET_ASYNC_NAME arst_n -RESET_KIND async -RESET_SYNC_ACTIVE high -RESET_ASYNC_ACTIVE low -ENABLE_NAME en -ENABLE_ACTIVE high}}
go compile
# Info: Starting transformation 'compile' on solution 'solution.v1' (SOL-8)
# Reading component library '$MGC_HOME\pkgs\siflibs\mgc_busdefs.lib' [mgc_busdefs]... (LIB-49)
# Reading component library '$MGC_HOME\pkgs\siflibs\stdops.lib' [STDOPS]... (LIB-49)
# Reading component library '$MGC_HOME\pkgs\siflibs\mgc_ioport.lib' [mgc_ioport]... (LIB-49)
# Reading component library '$MGC_HOME\pkgs\ccs_altera\Altera_accel_CycloneIII.lib' [Altera_accel_CycloneIII]... (LIB-49)
# Reading component library '$MGC_HOME\pkgs\siflibs\psr2010a_up2\mgc_Altera-Cyclone-III-6_beh_psr.lib' [mgc_Altera-Cyclone-III-6_beh_psr]... (LIB-49)
# Generating synthesis internal form... (CIN-3)
# $PROJECT_HOME/../edge_detect_c/edge3.c(50): Found top design routine 'edge_detect' specified by directive (CIN-52)
# $PROJECT_HOME/../edge_detect_c/edge3.c(50): Synthesizing routine 'edge_detect' (CIN-13)
# $PROJECT_HOME/../edge_detect_c/edge3.c(50): Inlining routine 'edge_detect' (CIN-14)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(13): Inlining member function 'shift_class<ac_int<90, false>, 3>::shift_class' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(32): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator<<' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(48): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(48): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(48): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(48): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(48): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(48): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/edge3.c(157): Inlining routine 'AbsAndMax' (CIN-14)
# $PROJECT_HOME/../edge_detect_c/edge3.c(157): Inlining routine 'AbsAndMax' (CIN-14)
# $PROJECT_HOME/../edge_detect_c/edge3.c(157): Inlining routine 'AbsAndMax' (CIN-14)
# $PROJECT_HOME/../edge_detect_c/edge3.c(157): Inlining routine 'AbsAndMax' (CIN-14)
# $PROJECT_HOME/../edge_detect_c/edge3.c(157): Inlining routine 'AbsAndMax' (CIN-14)
# $PROJECT_HOME/../edge_detect_c/edge3.c(157): Inlining routine 'AbsAndMax' (CIN-14)
# $PROJECT_HOME/../edge_detect_c/edge3.c(157): Inlining routine 'AbsAndMax' (CIN-14)
# $PROJECT_HOME/../edge_detect_c/edge3.c(157): Inlining routine 'AbsAndMax' (CIN-14)
# $PROJECT_HOME/../edge_detect_c/edge3.c(157): Inlining routine 'AbsAndMax' (CIN-14)
# $PROJECT_HOME/../edge_detect_c/edge3.c(50): Optimizing block '/edge_detect' ... (CIN-4)
# $PROJECT_HOME/../edge_detect_c/edge3.c(50): Inout port 'vin' is only used as an input. (OPT-10)
# $PROJECT_HOME/../edge_detect_c/edge3.c(50): Inout port 'vout' is only used as an output. (OPT-11)
# Info: Optimizing partition '/edge_detect': (Total ops = 486, Real ops = 126, Vars = 130) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 486, Real ops = 126, Vars = 128) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 464, Real ops = 116, Vars = 130) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 464, Real ops = 116, Vars = 132) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 464, Real ops = 116, Vars = 132) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 464, Real ops = 116, Vars = 130) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 378, Real ops = 113, Vars = 96) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 364, Real ops = 113, Vars = 95) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 364, Real ops = 113, Vars = 95) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 364, Real ops = 113, Vars = 97) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 364, Real ops = 113, Vars = 97) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 361, Real ops = 113, Vars = 104) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 318, Real ops = 102, Vars = 38) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 318, Real ops = 102, Vars = 40) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 318, Real ops = 102, Vars = 43) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 318, Real ops = 102, Vars = 38) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 318, Real ops = 102, Vars = 40) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 318, Real ops = 102, Vars = 38) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 318, Real ops = 102, Vars = 40) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 318, Real ops = 102, Vars = 40) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 318, Real ops = 102, Vars = 38) (SOL-10)
# $PROJECT_HOME/../edge_detect_c/edge3.c(88): Loop '/edge_detect/core/RESET' iterated at most 3 times. (LOOP-2)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(34): Loop '/edge_detect/core/SHIFT' iterated at most 3 times. (LOOP-2)
# $PROJECT_HOME/../edge_detect_c/edge3.c(101): Loop '/edge_detect/core/ACC_GX:for' iterated at most 3 times. (LOOP-2)
# $PROJECT_HOME/../edge_detect_c/edge3.c(100): Loop '/edge_detect/core/ACC_GX' iterated at most 3 times. (LOOP-2)
# $PROJECT_HOME/../edge_detect_c/edge3.c(109): Loop '/edge_detect/core/ACC_GY:for' iterated at most 3 times. (LOOP-2)
# $PROJECT_HOME/../edge_detect_c/edge3.c(108): Loop '/edge_detect/core/ACC_GY' iterated at most 3 times. (LOOP-2)
# $PROJECT_HOME/../edge_detect_c/edge3.c(116): Loop '/edge_detect/core/ACC3' iterated at most 3 times. (LOOP-2)
# $PROJECT_HOME/../edge_detect_c/edge3.c(78): Loop '/edge_detect/core/FRAME' iterated at most 1 times. (LOOP-2)
# $PROJECT_HOME/../edge_detect_c/edge3.c(89): Detected constant initialization of array 'red_x', optimizing loop 'RESET' (LOOP-12)
# $PROJECT_HOME/../edge_detect_c/edge3.c(90): Detected constant initialization of array 'green_x', optimizing loop 'RESET' (LOOP-12)
# $PROJECT_HOME/../edge_detect_c/edge3.c(91): Detected constant initialization of array 'blue_x', optimizing loop 'RESET' (LOOP-12)
# $PROJECT_HOME/../edge_detect_c/edge3.c(92): Detected constant initialization of array 'red_y', optimizing loop 'RESET' (LOOP-12)
# $PROJECT_HOME/../edge_detect_c/edge3.c(93): Detected constant initialization of array 'green_y', optimizing loop 'RESET' (LOOP-12)
# $PROJECT_HOME/../edge_detect_c/edge3.c(94): Detected constant initialization of array 'blue_y', optimizing loop 'RESET' (LOOP-12)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 369, Real ops = 98, Vars = 40) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 281, Real ops = 90, Vars = 39) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 281, Real ops = 90, Vars = 41) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 275, Real ops = 90, Vars = 45) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 268, Real ops = 90, Vars = 39) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 268, Real ops = 90, Vars = 41) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 268, Real ops = 90, Vars = 39) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 268, Real ops = 90, Vars = 41) (SOL-10)
# Design 'edge_detect' was read (SOL-1)
# Info: Completed transformation 'compile' on solution 'edge_detect.v1': elapsed time 1.76 seconds, memory usage 160288kB, peak memory usage 221720kB (SOL-9)
directive set /edge_detect/core/main -PIPELINE_INIT_INTERVAL 1
# /edge_detect/core/main/PIPELINE_INIT_INTERVAL 1
directive set /edge_detect/core/main -DISTRIBUTED_PIPELINE true
# /edge_detect/core/main/DISTRIBUTED_PIPELINE true
go allocate
# Info: Starting transformation 'architect' on solution 'edge_detect.v1' (SOL-8)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(34): Loop '/edge_detect/core/SHIFT' is left rolled. (LOOP-4)
# $PROJECT_HOME/../edge_detect_c/edge3.c(101): Loop '/edge_detect/core/ACC_GX:for' is left rolled. (LOOP-4)
# $PROJECT_HOME/../edge_detect_c/edge3.c(100): Loop '/edge_detect/core/ACC_GX' is left rolled. (LOOP-4)
# $PROJECT_HOME/../edge_detect_c/edge3.c(109): Loop '/edge_detect/core/ACC_GY:for' is left rolled. (LOOP-4)
# $PROJECT_HOME/../edge_detect_c/edge3.c(108): Loop '/edge_detect/core/ACC_GY' is left rolled. (LOOP-4)
# $PROJECT_HOME/../edge_detect_c/edge3.c(116): Loop '/edge_detect/core/ACC3' is left rolled. (LOOP-4)
# $PROJECT_HOME/../edge_detect_c/edge3.c(50): Loop '/edge_detect/core/main' is left rolled. (LOOP-4)
# Loop 'ACC_GY' is merged and folded into Loop 'ACC_GX' (LOOP-9)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 274, Real ops = 92, Vars = 41) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 272, Real ops = 92, Vars = 41) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 268, Real ops = 90, Vars = 39) (SOL-10)
# Loop 'ACC_GY:for' is merged and folded into Loop 'ACC_GX:for' (LOOP-9)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 273, Real ops = 91, Vars = 41) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 271, Real ops = 91, Vars = 41) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 267, Real ops = 89, Vars = 39) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 267, Real ops = 89, Vars = 44) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 267, Real ops = 89, Vars = 39) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 267, Real ops = 89, Vars = 44) (SOL-10)
# $PROJECT_HOME/../edge_detect_c/edge3.c(50): I/O-Port inferred - resource 'vin:rsc' (from var: vin) mapped to 'mgc_ioport.mgc_in_wire' (size: 90). (MEM-2)
# $PROJECT_HOME/../edge_detect_c/edge3.c(50): I/O-Port inferred - resource 'vout:rsc' (from var: vout) mapped to 'mgc_ioport.mgc_out_stdreg' (size: 30). (MEM-2)
# Info: Optimizing partition '/edge_detect': (Total ops = 269, Real ops = 89, Vars = 44) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 269, Real ops = 89, Vars = 39) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 268, Real ops = 89, Vars = 39) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 268, Real ops = 89, Vars = 44) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 407, Real ops = 128, Vars = 85) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 368, Real ops = 140, Vars = 118) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 371, Real ops = 139, Vars = 60) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 327, Real ops = 119, Vars = 66) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 327, Real ops = 119, Vars = 71) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 327, Real ops = 119, Vars = 66) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 327, Real ops = 119, Vars = 71) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 340, Real ops = 120, Vars = 71) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 344, Real ops = 120, Vars = 71) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 338, Real ops = 120, Vars = 71) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 1383, Real ops = 360, Vars = 683) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 556, Real ops = 264, Vars = 138) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 555, Real ops = 264, Vars = 137) (SOL-10)
# Design 'edge_detect' contains '286' real operations. (SOL-11)
# Info: Completed transformation 'architect' on solution 'edge_detect.v1': elapsed time 3.98 seconds, memory usage 161456kB, peak memory usage 221720kB (SOL-9)
# Info: Starting transformation 'allocate' on solution 'edge_detect.v1' (SOL-8)
# Performing concurrent resource allocation and scheduling on '/edge_detect/core' (CRAAS-1)
# Info: Select qualified components for data operations ... (CRAAS-3)
# Info: Apply resource constraints on data operations ... (CRAAS-4)
# $PROJECT_HOME/../edge_detect_c/edge3.c(50): Prescheduled LOOP 'main' (2 c-steps) (SCHD-7)
# $PROJECT_HOME/../edge_detect_c/edge3.c(50): Prescheduled LOOP 'core:rlp' (0 c-steps) (SCHD-7)
# $PROJECT_HOME/../edge_detect_c/edge3.c(50): Prescheduled SEQUENTIAL 'core' (total length 2 c-steps) (SCHD-8)
# Info: Initial schedule of SEQUENTIAL 'core': Latency = 15, Area (Datapath, Register, Total) = 6344.96, 0.00, 6344.96 (CRAAS-11)
# At least one feasible schedule exists. (CRAAS-9)
# Info: Optimized LOOP 'main': Latency = 15, Area (Datapath, Register, Total) = 6306.66, 0.00, 6306.66 (CRAAS-10)
# Info: Optimized LOOP 'main': Latency = 15, Area (Datapath, Register, Total) = 6268.36, 0.00, 6268.36 (CRAAS-10)
# Info: Optimized LOOP 'main': Latency = 15, Area (Datapath, Register, Total) = 6264.17, 0.00, 6264.17 (CRAAS-10)
# Info: Final schedule of SEQUENTIAL 'core': Latency = 15, Area (Datapath, Register, Total) = 6264.17, 0.00, 6264.17 (CRAAS-12)
# Resource allocation and scheduling done. (CRAAS-2)
# Netlist written to file 'schedule.gnt' (NET-4)
# Info: Completed transformation 'allocate' on solution 'edge_detect.v1': elapsed time 0.78 seconds, memory usage 164592kB, peak memory usage 221720kB (SOL-9)
go extract
# Info: Starting transformation 'schedule' on solution 'edge_detect.v1' (SOL-8)
# Performing concurrent resource allocation and scheduling on '/edge_detect/core' (CRAAS-1)
# Warning: Cannot build distributed pipeline in process 'core' because of missing handshake for resource 'vout:rsc' (SCHD-15)
# Global signal 'vin:rsc.z' added to design 'edge_detect' for component 'vin:rsc:mgc_in_wire' (LIB-3)
# Global signal 'vout:rsc.z' added to design 'edge_detect' for component 'vout:rsc:mgc_out_stdreg' (LIB-3)
# Info: Optimizing partition '/edge_detect': (Total ops = 595, Real ops = 287, Vars = 176) (SOL-10)
# Info: Optimizing partition '/edge_detect/edge_detect:core': (Total ops = 585, Real ops = 286, Vars = 168) (SOL-10)
# Info: Optimizing partition '/edge_detect/edge_detect:core/core': (Total ops = 577, Real ops = 286, Vars = 167) (SOL-10)
# Info: Optimizing partition '/edge_detect/edge_detect:core/core': (Total ops = 485, Real ops = 259, Vars = 140) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 499, Real ops = 259, Vars = 152) (SOL-10)
# Info: Optimizing partition '/edge_detect/edge_detect:core': (Total ops = 490, Real ops = 259, Vars = 145) (SOL-10)
# Info: Optimizing partition '/edge_detect/edge_detect:core/core': (Total ops = 485, Real ops = 259, Vars = 140) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 499, Real ops = 259, Vars = 152) (SOL-10)
# Info: Optimizing partition '/edge_detect/edge_detect:core': (Total ops = 490, Real ops = 259, Vars = 145) (SOL-10)
# Report written to file 'cycle.rpt'
# Netlist written to file 'cycle.v' (NET-4)
# Info: Completed transformation 'schedule' on solution 'edge_detect.v1': elapsed time 2.40 seconds, memory usage 174056kB, peak memory usage 221720kB (SOL-9)
# Info: Starting transformation 'dpfsm' on solution 'edge_detect.v1' (SOL-8)
# Performing FSM extraction... (FSM-1)
# Info: Optimizing partition '/edge_detect': (Total ops = 917, Real ops = 331, Vars = 1042) (SOL-10)
# Info: Optimizing partition '/edge_detect/edge_detect:core': (Total ops = 908, Real ops = 331, Vars = 1035) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 547, Real ops = 323, Vars = 141) (SOL-10)
# Info: Optimizing partition '/edge_detect/edge_detect:core': (Total ops = 538, Real ops = 323, Vars = 134) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 436, Real ops = 298, Vars = 139) (SOL-10)
# Info: Optimizing partition '/edge_detect/edge_detect:core': (Total ops = 427, Real ops = 298, Vars = 132) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 434, Real ops = 296, Vars = 139) (SOL-10)
# Info: Optimizing partition '/edge_detect/edge_detect:core': (Total ops = 425, Real ops = 296, Vars = 132) (SOL-10)
# Info: Optimizing partition '/edge_detect/edge_detect:core': (Total ops = 425, Real ops = 296, Vars = 132) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 434, Real ops = 296, Vars = 139) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 434, Real ops = 296, Vars = 139) (SOL-10)
# Info: Optimizing partition '/edge_detect/edge_detect:core': (Total ops = 425, Real ops = 296, Vars = 132) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 575, Real ops = 410, Vars = 292) (SOL-10)
# Info: Optimizing partition '/edge_detect/edge_detect:core': (Total ops = 566, Real ops = 410, Vars = 285) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 468, Real ops = 326, Vars = 159) (SOL-10)
# Info: Optimizing partition '/edge_detect/edge_detect:core': (Total ops = 459, Real ops = 326, Vars = 152) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 460, Real ops = 320, Vars = 152) (SOL-10)
# Info: Optimizing partition '/edge_detect/edge_detect:core': (Total ops = 451, Real ops = 320, Vars = 145) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 452, Real ops = 313, Vars = 144) (SOL-10)
# Info: Optimizing partition '/edge_detect/edge_detect:core': (Total ops = 443, Real ops = 313, Vars = 137) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 451, Real ops = 312, Vars = 144) (SOL-10)
# Info: Optimizing partition '/edge_detect/edge_detect:core': (Total ops = 442, Real ops = 312, Vars = 137) (SOL-10)
# Info: Completed transformation 'dpfsm' on solution 'edge_detect.v1': elapsed time 1.26 seconds, memory usage 174056kB, peak memory usage 221720kB (SOL-9)
# Info: Starting transformation 'extract' on solution 'edge_detect.v1' (SOL-8)
# Warning: Reassigned operation ACC3:acc:mgc_Altera-Cyclone-III-6_beh_psr.mgc_add(3,0,3,0,3) to mgc_Altera-Cyclone-III-6_beh_psr.mgc_add(2,0,1,0,2) (ASG-1)
# Warning: Reassigned operation ACC_GX:for:acc:mgc_Altera-Cyclone-III-6_beh_psr.mgc_add(3,0,3,0,3) to mgc_Altera-Cyclone-III-6_beh_psr.mgc_add(2,0,1,0,2) (ASG-1)
# Warning: Reassigned operation ACC_GY:for:acc:mgc_Altera-Cyclone-III-6_beh_psr.mgc_add(3,0,3,0,3) to mgc_Altera-Cyclone-III-6_beh_psr.mgc_add(2,0,1,0,2) (ASG-1)
# Warning: Reassigned operation ACC_GX:acc:mgc_Altera-Cyclone-III-6_beh_psr.mgc_add(3,0,3,0,3) to mgc_Altera-Cyclone-III-6_beh_psr.mgc_add(2,0,1,0,2) (ASG-1)
# Warning: Reassigned operation ACC_GY:acc:mgc_Altera-Cyclone-III-6_beh_psr.mgc_add(3,0,3,0,3) to mgc_Altera-Cyclone-III-6_beh_psr.mgc_add(2,0,1,0,2) (ASG-1)
# Info: Optimizing partition '/edge_detect': (Total ops = 643, Real ops = 343, Vars = 636) (SOL-10)
# Info: Optimizing partition '/edge_detect/edge_detect:core': (Total ops = 634, Real ops = 343, Vars = 629) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 440, Real ops = 303, Vars = 145) (SOL-10)
# Info: Optimizing partition '/edge_detect/edge_detect:core': (Total ops = 431, Real ops = 303, Vars = 138) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 440, Real ops = 303, Vars = 145) (SOL-10)
# Info: Optimizing partition '/edge_detect/edge_detect:core': (Total ops = 431, Real ops = 303, Vars = 138) (SOL-10)
# Info: Optimizing partition '/edge_detect/edge_detect:core': (Total ops = 431, Real ops = 303, Vars = 138) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 440, Real ops = 303, Vars = 145) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 440, Real ops = 303, Vars = 145) (SOL-10)
# Info: Optimizing partition '/edge_detect/edge_detect:core': (Total ops = 431, Real ops = 303, Vars = 138) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 440, Real ops = 303, Vars = 145) (SOL-10)
# Info: Optimizing partition '/edge_detect/edge_detect:core': (Total ops = 431, Real ops = 303, Vars = 138) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 644, Real ops = 335, Vars = 637) (SOL-10)
# Info: Optimizing partition '/edge_detect/edge_detect:core': (Total ops = 635, Real ops = 335, Vars = 630) (SOL-10)
# Netlist written to file 'schematic.nlv' (NET-4)
# Info: Optimizing partition '/edge_detect': (Total ops = 644, Real ops = 335, Vars = 637) (SOL-10)
# Info: Optimizing partition '/edge_detect/edge_detect:core': (Total ops = 635, Real ops = 335, Vars = 630) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 440, Real ops = 303, Vars = 145) (SOL-10)
# Info: Optimizing partition '/edge_detect/edge_detect:core': (Total ops = 431, Real ops = 303, Vars = 138) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 440, Real ops = 303, Vars = 145) (SOL-10)
# Info: Optimizing partition '/edge_detect/edge_detect:core': (Total ops = 431, Real ops = 303, Vars = 138) (SOL-10)
# Report written to file 'rtl.rpt'
# Netlist written to file 'rtl.v' (NET-4)
# generate concat
# order file name is: rtl.v_order.txt
# Add dependent file: C:/PROGRA~1/CALYPT~1/CATAPU~1.126/Mgc_home/pkgs/hls_pkgs/mgc_comps_src/mgc_shift_r_beh_v2.v
# Add dependent file: ./rtl_mgc_ioport.v
# Add dependent file: ./rtl_mgc_ioport_v2001.v
# Add dependent file: ./rtl.v
# Finished writing concatenated file: C:/fpga-catapult-c-spring/Edge3/Edge3/edge_detect.v1/concat_rtl.v
# Synthesis timing script written to file './rtl.v.psr_timing'
# IO timing constraints written to synthesis script file
# Synthesis script written to file 'rtl.v.psr'
# Info: Completed transformation 'extract' on solution 'edge_detect.v1': elapsed time 3.24 seconds, memory usage 174056kB, peak memory usage 221720kB (SOL-9)
# Input file has changed
go new
solution file set {$PROJECT_HOME/../edge_detect_c/edge3.c} -updated
# Info: Branching solution 'solution.v1' at state 'new' (PRJ-2)
go extract
# Info: Starting transformation 'analyze' on solution 'solution.v1' (SOL-8)
# Front End called with arguments: -- {C:\fpga-catapult-c-spring\edge_detect_c\shift_class.h} {C:\fpga-catapult-c-spring\edge_detect_c\edge.h} {C:\fpga-catapult-c-spring\edge_detect_c\edge3.c} (CIN-69)
# Edison Design Group C++/C Front End - Version 3.10.1 (CIN-1)
# $PROJECT_HOME/../edge_detect_c/edge3.c(49): Pragma 'hls_design<top>' detected on routine 'edge_detect' (CIN-6)
# Source file analysis completed (CIN-68)
# Info: Completed transformation 'analyze' on solution 'solution.v1': elapsed time 2.08 seconds, memory usage 171512kB, peak memory usage 250292kB (SOL-9)
# Info: Starting transformation 'compile' on solution 'solution.v1' (SOL-8)
# Generating synthesis internal form... (CIN-3)
# $PROJECT_HOME/../edge_detect_c/edge3.c(50): Found top design routine 'edge_detect' specified by directive (CIN-52)
# $PROJECT_HOME/../edge_detect_c/edge3.c(50): Synthesizing routine 'edge_detect' (CIN-13)
# $PROJECT_HOME/../edge_detect_c/edge3.c(50): Inlining routine 'edge_detect' (CIN-14)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(13): Inlining member function 'shift_class<ac_int<90, false>, 3>::shift_class' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(32): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator<<' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(48): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(48): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(48): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(48): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(48): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(48): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/edge3.c(162): Inlining routine 'AbsAndMax' (CIN-14)
# $PROJECT_HOME/../edge_detect_c/edge3.c(162): Inlining routine 'AbsAndMax' (CIN-14)
# $PROJECT_HOME/../edge_detect_c/edge3.c(162): Inlining routine 'AbsAndMax' (CIN-14)
# $PROJECT_HOME/../edge_detect_c/edge3.c(162): Inlining routine 'AbsAndMax' (CIN-14)
# $PROJECT_HOME/../edge_detect_c/edge3.c(162): Inlining routine 'AbsAndMax' (CIN-14)
# $PROJECT_HOME/../edge_detect_c/edge3.c(162): Inlining routine 'AbsAndMax' (CIN-14)
# $PROJECT_HOME/../edge_detect_c/edge3.c(162): Inlining routine 'AbsAndMax' (CIN-14)
# $PROJECT_HOME/../edge_detect_c/edge3.c(162): Inlining routine 'AbsAndMax' (CIN-14)
# $PROJECT_HOME/../edge_detect_c/edge3.c(162): Inlining routine 'AbsAndMax' (CIN-14)
# $PROJECT_HOME/../edge_detect_c/edge3.c(50): Optimizing block '/edge_detect' ... (CIN-4)
# $PROJECT_HOME/../edge_detect_c/edge3.c(50): Inout port 'vin' is only used as an input. (OPT-10)
# $PROJECT_HOME/../edge_detect_c/edge3.c(50): Inout port 'vout' is only used as an output. (OPT-11)
# Info: Optimizing partition '/edge_detect': (Total ops = 590, Real ops = 150, Vars = 150) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 590, Real ops = 150, Vars = 148) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 568, Real ops = 140, Vars = 150) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 568, Real ops = 140, Vars = 152) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 568, Real ops = 140, Vars = 152) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 568, Real ops = 140, Vars = 150) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 481, Real ops = 137, Vars = 116) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 467, Real ops = 137, Vars = 115) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 467, Real ops = 137, Vars = 115) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 467, Real ops = 137, Vars = 117) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 467, Real ops = 137, Vars = 117) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 465, Real ops = 137, Vars = 125) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 470, Real ops = 125, Vars = 42) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 470, Real ops = 125, Vars = 44) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 470, Real ops = 125, Vars = 46) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 470, Real ops = 125, Vars = 42) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 470, Real ops = 125, Vars = 44) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 470, Real ops = 125, Vars = 42) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 470, Real ops = 125, Vars = 44) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 470, Real ops = 125, Vars = 44) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 470, Real ops = 125, Vars = 42) (SOL-10)
# $PROJECT_HOME/../edge_detect_c/edge3.c(88): Loop '/edge_detect/core/RESET' iterated at most 3 times. (LOOP-2)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(34): Loop '/edge_detect/core/SHIFT' iterated at most 3 times. (LOOP-2)
# $PROJECT_HOME/../edge_detect_c/edge3.c(101): Loop '/edge_detect/core/ACC_GX:for' iterated at most 3 times. (LOOP-2)
# $PROJECT_HOME/../edge_detect_c/edge3.c(100): Loop '/edge_detect/core/ACC_GX' iterated at most 3 times. (LOOP-2)
# $PROJECT_HOME/../edge_detect_c/edge3.c(109): Loop '/edge_detect/core/ACC_GY:for' iterated at most 3 times. (LOOP-2)
# $PROJECT_HOME/../edge_detect_c/edge3.c(108): Loop '/edge_detect/core/ACC_GY' iterated at most 3 times. (LOOP-2)
# $PROJECT_HOME/../edge_detect_c/edge3.c(116): Loop '/edge_detect/core/ACC3' iterated at most 3 times. (LOOP-2)
# $PROJECT_HOME/../edge_detect_c/edge3.c(78): Loop '/edge_detect/core/FRAME' iterated at most 1 times. (LOOP-2)
# $PROJECT_HOME/../edge_detect_c/edge3.c(89): Detected constant initialization of array 'red_x', optimizing loop 'RESET' (LOOP-12)
# $PROJECT_HOME/../edge_detect_c/edge3.c(90): Detected constant initialization of array 'green_x', optimizing loop 'RESET' (LOOP-12)
# $PROJECT_HOME/../edge_detect_c/edge3.c(91): Detected constant initialization of array 'blue_x', optimizing loop 'RESET' (LOOP-12)
# $PROJECT_HOME/../edge_detect_c/edge3.c(92): Detected constant initialization of array 'red_y', optimizing loop 'RESET' (LOOP-12)
# $PROJECT_HOME/../edge_detect_c/edge3.c(93): Detected constant initialization of array 'green_y', optimizing loop 'RESET' (LOOP-12)
# $PROJECT_HOME/../edge_detect_c/edge3.c(94): Detected constant initialization of array 'blue_y', optimizing loop 'RESET' (LOOP-12)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 680, Real ops = 121, Vars = 44) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 423, Real ops = 112, Vars = 43) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 423, Real ops = 112, Vars = 45) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 417, Real ops = 112, Vars = 49) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 410, Real ops = 112, Vars = 43) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 410, Real ops = 112, Vars = 45) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 410, Real ops = 112, Vars = 43) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 410, Real ops = 112, Vars = 45) (SOL-10)
# Design 'edge_detect' was read (SOL-1)
# Info: Completed transformation 'compile' on solution 'edge_detect.v2': elapsed time 2.60 seconds, memory usage 169784kB, peak memory usage 250292kB (SOL-9)
# Info: Starting transformation 'architect' on solution 'edge_detect.v2' (SOL-8)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(34): Loop '/edge_detect/core/SHIFT' is left rolled. (LOOP-4)
# $PROJECT_HOME/../edge_detect_c/edge3.c(101): Loop '/edge_detect/core/ACC_GX:for' is left rolled. (LOOP-4)
# $PROJECT_HOME/../edge_detect_c/edge3.c(100): Loop '/edge_detect/core/ACC_GX' is left rolled. (LOOP-4)
# $PROJECT_HOME/../edge_detect_c/edge3.c(109): Loop '/edge_detect/core/ACC_GY:for' is left rolled. (LOOP-4)
# $PROJECT_HOME/../edge_detect_c/edge3.c(108): Loop '/edge_detect/core/ACC_GY' is left rolled. (LOOP-4)
# $PROJECT_HOME/../edge_detect_c/edge3.c(116): Loop '/edge_detect/core/ACC3' is left rolled. (LOOP-4)
# $PROJECT_HOME/../edge_detect_c/edge3.c(50): Loop '/edge_detect/core/main' is left rolled. (LOOP-4)
# Loop 'ACC_GY' is merged and folded into Loop 'ACC_GX' (LOOP-9)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 416, Real ops = 114, Vars = 45) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 414, Real ops = 114, Vars = 45) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 410, Real ops = 112, Vars = 43) (SOL-10)
# Loop 'ACC_GY:for' is merged and folded into Loop 'ACC_GX:for' (LOOP-9)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 415, Real ops = 113, Vars = 45) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 413, Real ops = 113, Vars = 45) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 409, Real ops = 111, Vars = 43) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 409, Real ops = 111, Vars = 48) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 409, Real ops = 111, Vars = 43) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 409, Real ops = 111, Vars = 48) (SOL-10)
# $PROJECT_HOME/../edge_detect_c/edge3.c(50): I/O-Port inferred - resource 'vin:rsc' (from var: vin) mapped to 'mgc_ioport.mgc_in_wire' (size: 90). (MEM-2)
# $PROJECT_HOME/../edge_detect_c/edge3.c(50): I/O-Port inferred - resource 'vout:rsc' (from var: vout) mapped to 'mgc_ioport.mgc_out_stdreg' (size: 30). (MEM-2)
# Info: Optimizing partition '/edge_detect': (Total ops = 411, Real ops = 111, Vars = 48) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 411, Real ops = 111, Vars = 43) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 410, Real ops = 111, Vars = 43) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 410, Real ops = 111, Vars = 48) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 549, Real ops = 150, Vars = 89) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 510, Real ops = 162, Vars = 122) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 513, Real ops = 161, Vars = 64) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 469, Real ops = 141, Vars = 70) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 469, Real ops = 141, Vars = 75) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 469, Real ops = 141, Vars = 70) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 469, Real ops = 141, Vars = 75) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 482, Real ops = 142, Vars = 75) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 486, Real ops = 142, Vars = 75) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 480, Real ops = 142, Vars = 75) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 1577, Real ops = 394, Vars = 715) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 700, Real ops = 286, Vars = 141) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 699, Real ops = 286, Vars = 140) (SOL-10)
# Design 'edge_detect' contains '332' real operations. (SOL-11)
# Info: Completed transformation 'architect' on solution 'edge_detect.v2': elapsed time 6.83 seconds, memory usage 170248kB, peak memory usage 250292kB (SOL-9)
# Info: Starting transformation 'allocate' on solution 'edge_detect.v2' (SOL-8)
# Performing concurrent resource allocation and scheduling on '/edge_detect/core' (CRAAS-1)
# Info: Select qualified components for data operations ... (CRAAS-3)
# Info: Apply resource constraints on data operations ... (CRAAS-4)
# $PROJECT_HOME/../edge_detect_c/edge3.c(50): Prescheduled LOOP 'main' (3 c-steps) (SCHD-7)
# $PROJECT_HOME/../edge_detect_c/edge3.c(50): Prescheduled LOOP 'core:rlp' (0 c-steps) (SCHD-7)
# $PROJECT_HOME/../edge_detect_c/edge3.c(50): Prescheduled SEQUENTIAL 'core' (total length 3 c-steps) (SCHD-8)
# Info: Initial schedule of SEQUENTIAL 'core': Latency = 16, Area (Datapath, Register, Total) = 6629.96, 0.00, 6629.96 (CRAAS-11)
# At least one feasible schedule exists. (CRAAS-9)
# Info: Optimized LOOP 'main': Latency = 16, Area (Datapath, Register, Total) = 6591.66, 0.00, 6591.66 (CRAAS-10)
# Info: Optimized LOOP 'main': Latency = 16, Area (Datapath, Register, Total) = 6553.35, 0.00, 6553.35 (CRAAS-10)
# Info: Optimized LOOP 'main': Latency = 16, Area (Datapath, Register, Total) = 6549.17, 0.00, 6549.17 (CRAAS-10)
# Info: Optimized LOOP 'main': Latency = 16, Area (Datapath, Register, Total) = 6540.51, 0.00, 6540.51 (CRAAS-10)
# Info: Optimized LOOP 'main': Latency = 16, Area (Datapath, Register, Total) = 6537.99, 0.00, 6537.99 (CRAAS-10)
# Info: Final schedule of SEQUENTIAL 'core': Latency = 16, Area (Datapath, Register, Total) = 6537.99, 0.00, 6537.99 (CRAAS-12)
# Resource allocation and scheduling done. (CRAAS-2)
# Netlist written to file 'schedule.gnt' (NET-4)
# Info: Completed transformation 'allocate' on solution 'edge_detect.v2': elapsed time 1.28 seconds, memory usage 172496kB, peak memory usage 250292kB (SOL-9)
# Info: Starting transformation 'schedule' on solution 'edge_detect.v2' (SOL-8)
# Performing concurrent resource allocation and scheduling on '/edge_detect/core' (CRAAS-1)
# Warning: Cannot build distributed pipeline in process 'core' because of missing handshake for resource 'vout:rsc' (SCHD-15)
# Global signal 'vin:rsc.z' added to design 'edge_detect' for component 'vin:rsc:mgc_in_wire' (LIB-3)
# Global signal 'vout:rsc.z' added to design 'edge_detect' for component 'vout:rsc:mgc_out_stdreg' (LIB-3)
# Info: Optimizing partition '/edge_detect': (Total ops = 879, Real ops = 333, Vars = 287) (SOL-10)
# Info: Optimizing partition '/edge_detect/edge_detect:core': (Total ops = 869, Real ops = 332, Vars = 279) (SOL-10)
# Info: Optimizing partition '/edge_detect/edge_detect:core/core': (Total ops = 860, Real ops = 332, Vars = 279) (SOL-10)
# Info: Optimizing partition '/edge_detect/edge_detect:core/core': (Total ops = 760, Real ops = 304, Vars = 252) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 773, Real ops = 304, Vars = 264) (SOL-10)
# Info: Optimizing partition '/edge_detect/edge_detect:core': (Total ops = 764, Real ops = 304, Vars = 257) (SOL-10)
# Info: Optimizing partition '/edge_detect/edge_detect:core/core': (Total ops = 759, Real ops = 304, Vars = 252) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 773, Real ops = 304, Vars = 264) (SOL-10)
# Info: Optimizing partition '/edge_detect/edge_detect:core': (Total ops = 764, Real ops = 304, Vars = 257) (SOL-10)
# Report written to file 'cycle.rpt'
# Netlist written to file 'cycle.v' (NET-4)
# Info: Completed transformation 'schedule' on solution 'edge_detect.v2': elapsed time 3.35 seconds, memory usage 185988kB, peak memory usage 250292kB (SOL-9)
# Info: Starting transformation 'dpfsm' on solution 'edge_detect.v2' (SOL-8)
# Performing FSM extraction... (FSM-1)
# Info: Optimizing partition '/edge_detect': (Total ops = 1303, Real ops = 458, Vars = 1382) (SOL-10)
# Info: Optimizing partition '/edge_detect/edge_detect:core': (Total ops = 1294, Real ops = 458, Vars = 1375) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 955, Real ops = 420, Vars = 168) (SOL-10)
# Info: Optimizing partition '/edge_detect/edge_detect:core': (Total ops = 946, Real ops = 420, Vars = 161) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 670, Real ops = 374, Vars = 165) (SOL-10)
# Info: Optimizing partition '/edge_detect/edge_detect:core': (Total ops = 661, Real ops = 374, Vars = 158) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 669, Real ops = 373, Vars = 165) (SOL-10)
# Info: Optimizing partition '/edge_detect/edge_detect:core': (Total ops = 660, Real ops = 373, Vars = 158) (SOL-10)
# Info: Optimizing partition '/edge_detect/edge_detect:core': (Total ops = 660, Real ops = 373, Vars = 158) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 669, Real ops = 373, Vars = 165) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 669, Real ops = 373, Vars = 165) (SOL-10)
# Info: Optimizing partition '/edge_detect/edge_detect:core': (Total ops = 660, Real ops = 373, Vars = 158) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 810, Real ops = 487, Vars = 318) (SOL-10)
# Info: Optimizing partition '/edge_detect/edge_detect:core': (Total ops = 801, Real ops = 487, Vars = 311) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 703, Real ops = 403, Vars = 185) (SOL-10)
# Info: Optimizing partition '/edge_detect/edge_detect:core': (Total ops = 694, Real ops = 403, Vars = 178) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 695, Real ops = 397, Vars = 178) (SOL-10)
# Info: Optimizing partition '/edge_detect/edge_detect:core': (Total ops = 686, Real ops = 397, Vars = 171) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 687, Real ops = 390, Vars = 170) (SOL-10)
# Info: Optimizing partition '/edge_detect/edge_detect:core': (Total ops = 678, Real ops = 390, Vars = 163) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 686, Real ops = 389, Vars = 170) (SOL-10)
# Info: Optimizing partition '/edge_detect/edge_detect:core': (Total ops = 677, Real ops = 389, Vars = 163) (SOL-10)
# Info: Completed transformation 'dpfsm' on solution 'edge_detect.v2': elapsed time 1.82 seconds, memory usage 186996kB, peak memory usage 250292kB (SOL-9)
# Info: Starting transformation 'extract' on solution 'edge_detect.v2' (SOL-8)
# Warning: Reassigned operation FRAME:acc#21:mgc_Altera-Cyclone-III-6_beh_psr.mgc_add(6,0,6,0,7) to mgc_Altera-Cyclone-III-6_beh_psr.mgc_add(5,0,4,0,5) (ASG-1)
# Warning: Reassigned operation ACC3:acc:mgc_Altera-Cyclone-III-6_beh_psr.mgc_add(3,0,3,0,3) to mgc_Altera-Cyclone-III-6_beh_psr.mgc_add(2,0,1,0,2) (ASG-1)
# Warning: Reassigned operation ACC_GX:for:acc:mgc_Altera-Cyclone-III-6_beh_psr.mgc_add(3,0,3,0,3) to mgc_Altera-Cyclone-III-6_beh_psr.mgc_add(2,0,1,0,2) (ASG-1)
# Warning: Reassigned operation ACC_GY:for:acc:mgc_Altera-Cyclone-III-6_beh_psr.mgc_add(3,0,3,0,3) to mgc_Altera-Cyclone-III-6_beh_psr.mgc_add(2,0,1,0,2) (ASG-1)
# Warning: Reassigned operation ACC_GX:acc:mgc_Altera-Cyclone-III-6_beh_psr.mgc_add(3,0,3,0,3) to mgc_Altera-Cyclone-III-6_beh_psr.mgc_add(2,0,1,0,2) (ASG-1)
# Warning: Reassigned operation ACC_GY:acc:mgc_Altera-Cyclone-III-6_beh_psr.mgc_add(3,0,3,0,3) to mgc_Altera-Cyclone-III-6_beh_psr.mgc_add(2,0,1,0,2) (ASG-1)
# Info: Optimizing partition '/edge_detect': (Total ops = 873, Real ops = 418, Vars = 866) (SOL-10)
# Info: Optimizing partition '/edge_detect/edge_detect:core': (Total ops = 864, Real ops = 418, Vars = 859) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 654, Real ops = 379, Vars = 170) (SOL-10)
# Info: Optimizing partition '/edge_detect/edge_detect:core': (Total ops = 645, Real ops = 379, Vars = 163) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 654, Real ops = 379, Vars = 170) (SOL-10)
# Info: Optimizing partition '/edge_detect/edge_detect:core': (Total ops = 645, Real ops = 379, Vars = 163) (SOL-10)
# Info: Optimizing partition '/edge_detect/edge_detect:core': (Total ops = 645, Real ops = 379, Vars = 163) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 654, Real ops = 379, Vars = 170) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 654, Real ops = 379, Vars = 170) (SOL-10)
# Info: Optimizing partition '/edge_detect/edge_detect:core': (Total ops = 645, Real ops = 379, Vars = 163) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 654, Real ops = 379, Vars = 170) (SOL-10)
# Info: Optimizing partition '/edge_detect/edge_detect:core': (Total ops = 645, Real ops = 379, Vars = 163) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 853, Real ops = 409, Vars = 846) (SOL-10)
# Info: Optimizing partition '/edge_detect/edge_detect:core': (Total ops = 844, Real ops = 409, Vars = 839) (SOL-10)
# Netlist written to file 'schematic.nlv' (NET-4)
# Info: Optimizing partition '/edge_detect': (Total ops = 853, Real ops = 409, Vars = 846) (SOL-10)
# Info: Optimizing partition '/edge_detect/edge_detect:core': (Total ops = 844, Real ops = 409, Vars = 839) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 652, Real ops = 379, Vars = 170) (SOL-10)
# Info: Optimizing partition '/edge_detect/edge_detect:core': (Total ops = 643, Real ops = 379, Vars = 163) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 652, Real ops = 379, Vars = 170) (SOL-10)
# Info: Optimizing partition '/edge_detect/edge_detect:core': (Total ops = 643, Real ops = 379, Vars = 163) (SOL-10)
# Report written to file 'rtl.rpt'
# Netlist written to file 'rtl.v' (NET-4)
# generate concat
# order file name is: rtl.v_order.txt
# Add dependent file: C:/PROGRA~1/CALYPT~1/CATAPU~1.126/Mgc_home/pkgs/hls_pkgs/mgc_comps_src/mgc_shift_r_beh_v2.v
# Add dependent file: ./rtl_mgc_ioport.v
# Add dependent file: ./rtl_mgc_ioport_v2001.v
# Add dependent file: ./rtl.v
# Finished writing concatenated file: C:/fpga-catapult-c-spring/Edge3/Edge3/edge_detect.v2/concat_rtl.v
# Synthesis timing script written to file './rtl.v.psr_timing'
# IO timing constraints written to synthesis script file
# Synthesis script written to file 'rtl.v.psr'
# Info: Completed transformation 'extract' on solution 'edge_detect.v2': elapsed time 4.54 seconds, memory usage 189036kB, peak memory usage 250292kB (SOL-9)
go compile
directive set /edge_detect/core/main -UNROLL 2
# Info: Branching solution 'edge_detect.v3' at state 'compile' (PRJ-2)
# /edge_detect/core/main/UNROLL 2
go extract
# Info: Starting transformation 'architect' on solution 'edge_detect.v3' (SOL-8)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(34): Loop '/edge_detect/core/SHIFT' is left rolled. (LOOP-4)
# $PROJECT_HOME/../edge_detect_c/edge3.c(101): Loop '/edge_detect/core/ACC_GX:for' is left rolled. (LOOP-4)
# $PROJECT_HOME/../edge_detect_c/edge3.c(100): Loop '/edge_detect/core/ACC_GX' is left rolled. (LOOP-4)
# $PROJECT_HOME/../edge_detect_c/edge3.c(109): Loop '/edge_detect/core/ACC_GY:for' is left rolled. (LOOP-4)
# $PROJECT_HOME/../edge_detect_c/edge3.c(108): Loop '/edge_detect/core/ACC_GY' is left rolled. (LOOP-4)
# $PROJECT_HOME/../edge_detect_c/edge3.c(116): Loop '/edge_detect/core/ACC3' is left rolled. (LOOP-4)
# $PROJECT_HOME/../edge_detect_c/edge3.c(50): Loop '/edge_detect/core/main' is being partially unrolled 2 times. (LOOP-3)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 820, Real ops = 225, Vars = 43) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 820, Real ops = 225, Vars = 79) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 820, Real ops = 225, Vars = 79) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 820, Real ops = 225, Vars = 84) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 820, Real ops = 225, Vars = 79) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 820, Real ops = 225, Vars = 84) (SOL-10)
# Loop 'main-1:ACC_GY' is merged and folded into Loop 'main-1:ACC_GX' (LOOP-9)
# Loop 'main-2:ACC_GY' is merged and folded into Loop 'main-2:ACC_GX' (LOOP-9)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 830, Real ops = 227, Vars = 83) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 826, Real ops = 227, Vars = 83) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 818, Real ops = 223, Vars = 79) (SOL-10)
# Loop 'main-1:ACC_GY:for' is merged and folded into Loop 'main-1:ACC_GX:for' (LOOP-9)
# Loop 'main-2:ACC_GY:for' is merged and folded into Loop 'main-2:ACC_GX:for' (LOOP-9)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 828, Real ops = 225, Vars = 83) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 824, Real ops = 225, Vars = 83) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 816, Real ops = 221, Vars = 79) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 816, Real ops = 221, Vars = 84) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 816, Real ops = 221, Vars = 79) (SOL-10)
# $PROJECT_HOME/../edge_detect_c/edge3.c(50): I/O-Port inferred - resource 'vin:rsc' (from var: vin) mapped to 'mgc_ioport.mgc_in_wire' (size: 90). (MEM-2)
# $PROJECT_HOME/../edge_detect_c/edge3.c(50): I/O-Port inferred - resource 'vout:rsc' (from var: vout) mapped to 'mgc_ioport.mgc_out_stdreg' (size: 30). (MEM-2)
# Info: Optimizing partition '/edge_detect': (Total ops = 820, Real ops = 221, Vars = 84) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 820, Real ops = 221, Vars = 79) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 818, Real ops = 221, Vars = 79) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 818, Real ops = 221, Vars = 84) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 1094, Real ops = 299, Vars = 152) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 1016, Real ops = 323, Vars = 223) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 1022, Real ops = 321, Vars = 125) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 934, Real ops = 281, Vars = 137) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 934, Real ops = 281, Vars = 142) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 934, Real ops = 281, Vars = 137) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 934, Real ops = 281, Vars = 142) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 958, Real ops = 283, Vars = 147) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 966, Real ops = 283, Vars = 147) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 954, Real ops = 283, Vars = 147) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 3612, Real ops = 1031, Vars = 1656) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 1539, Real ops = 632, Vars = 362) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 1538, Real ops = 632, Vars = 361) (SOL-10)
# Design 'edge_detect' contains '724' real operations. (SOL-11)
# Info: Completed transformation 'architect' on solution 'edge_detect.v3': elapsed time 14.24 seconds, memory usage 193532kB, peak memory usage 250292kB (SOL-9)
# Info: Starting transformation 'allocate' on solution 'edge_detect.v3' (SOL-8)
# Performing concurrent resource allocation and scheduling on '/edge_detect/core' (CRAAS-1)
# Info: Select qualified components for data operations ... (CRAAS-3)
# Info: Apply resource constraints on data operations ... (CRAAS-4)
# $PROJECT_HOME/../edge_detect_c/edge3.c(50): Prescheduled LOOP 'main' (3 c-steps) (SCHD-7)
# $PROJECT_HOME/../edge_detect_c/edge3.c(50): Prescheduled LOOP 'core:rlp' (0 c-steps) (SCHD-7)
# $PROJECT_HOME/../edge_detect_c/edge3.c(50): Prescheduled SEQUENTIAL 'core' (total length 3 c-steps) (SCHD-8)
# Error:  insufficient resources 'mgc_ioport.mgc_in_wire(1,90)' to schedule 'core'. 2 are needed, but only 1 instances are available (SCHD-4)
# Error: Design 'edge_detect' could not schedule partition '/edge_detect/core' - resource competition
go allocate
# Info: Starting transformation 'allocate' on solution 'edge_detect.v3' (SOL-8)
# Performing concurrent resource allocation and scheduling on '/edge_detect/core' (CRAAS-1)
# Info: Select qualified components for data operations ... (CRAAS-3)
# Info: Apply resource constraints on data operations ... (CRAAS-4)
# $PROJECT_HOME/../edge_detect_c/edge3.c(50): Prescheduled LOOP 'main' (3 c-steps) (SCHD-7)
# $PROJECT_HOME/../edge_detect_c/edge3.c(50): Prescheduled LOOP 'core:rlp' (0 c-steps) (SCHD-7)
# $PROJECT_HOME/../edge_detect_c/edge3.c(50): Prescheduled SEQUENTIAL 'core' (total length 3 c-steps) (SCHD-8)
# Error:  insufficient resources 'mgc_ioport.mgc_in_wire(1,90)' to schedule 'core'. 2 are needed, but only 1 instances are available (SCHD-4)
# Error: Design 'edge_detect' could not schedule partition '/edge_detect/core' - resource competition
go compile
directive set /edge_detect/core/main -UNROLL no
# Info: Branching solution 'edge_detect.v4' at state 'compile' (PRJ-2)
# /edge_detect/core/main/UNROLL no
go new
solution file remove {$PROJECT_HOME/../edge_detect_c/edge3.c}
# Info: Branching solution 'solution.v1' at state 'new' (PRJ-2)
solution file add ../edge_detect_c/edge4.c
# /INPUTFILES/4
go extract
# Info: Starting transformation 'analyze' on solution 'solution.v1' (SOL-8)
# Front End called with arguments: -- {C:\fpga-catapult-c-spring\edge_detect_c\edge4.c} {C:\fpga-catapult-c-spring\edge_detect_c\shift_class.h} {C:\fpga-catapult-c-spring\edge_detect_c\edge.h} (CIN-69)
# Edison Design Group C++/C Front End - Version 3.10.1 (CIN-1)
# $PROJECT_HOME/../edge_detect_c/edge4.c(49): Pragma 'hls_design<top>' detected on routine 'edge_detect' (CIN-6)
# Source file analysis completed (CIN-68)
# Info: Completed transformation 'analyze' on solution 'solution.v1': elapsed time 2.11 seconds, memory usage 202076kB, peak memory usage 267392kB (SOL-9)
# Info: Starting transformation 'compile' on solution 'solution.v1' (SOL-8)
# Generating synthesis internal form... (CIN-3)
# $PROJECT_HOME/../edge_detect_c/edge4.c(50): Found top design routine 'edge_detect' specified by directive (CIN-52)
# $PROJECT_HOME/../edge_detect_c/edge4.c(50): Synthesizing routine 'edge_detect' (CIN-13)
# $PROJECT_HOME/../edge_detect_c/edge4.c(50): Inlining routine 'edge_detect' (CIN-14)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(13): Inlining member function 'shift_class<ac_int<90, false>, 3>::shift_class' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(32): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator<<' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(48): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(48): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(48): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(48): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(48): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(48): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/edge4.c(162): Inlining routine 'AbsAndMax' (CIN-14)
# $PROJECT_HOME/../edge_detect_c/edge4.c(162): Inlining routine 'AbsAndMax' (CIN-14)
# $PROJECT_HOME/../edge_detect_c/edge4.c(162): Inlining routine 'AbsAndMax' (CIN-14)
# $PROJECT_HOME/../edge_detect_c/edge4.c(162): Inlining routine 'AbsAndMax' (CIN-14)
# $PROJECT_HOME/../edge_detect_c/edge4.c(162): Inlining routine 'AbsAndMax' (CIN-14)
# $PROJECT_HOME/../edge_detect_c/edge4.c(162): Inlining routine 'AbsAndMax' (CIN-14)
# $PROJECT_HOME/../edge_detect_c/edge4.c(162): Inlining routine 'AbsAndMax' (CIN-14)
# $PROJECT_HOME/../edge_detect_c/edge4.c(162): Inlining routine 'AbsAndMax' (CIN-14)
# $PROJECT_HOME/../edge_detect_c/edge4.c(162): Inlining routine 'AbsAndMax' (CIN-14)
# $PROJECT_HOME/../edge_detect_c/edge4.c(50): Optimizing block '/edge_detect' ... (CIN-4)
# $PROJECT_HOME/../edge_detect_c/edge4.c(50): Inout port 'vin' is only used as an input. (OPT-10)
# $PROJECT_HOME/../edge_detect_c/edge4.c(50): Inout port 'vout' is only used as an output. (OPT-11)
# Info: Optimizing partition '/edge_detect': (Total ops = 866, Real ops = 212, Vars = 214) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 866, Real ops = 212, Vars = 212) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 834, Real ops = 200, Vars = 216) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 834, Real ops = 200, Vars = 218) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 834, Real ops = 200, Vars = 218) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 834, Real ops = 200, Vars = 216) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 725, Real ops = 197, Vars = 174) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 711, Real ops = 197, Vars = 173) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 711, Real ops = 197, Vars = 173) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 711, Real ops = 197, Vars = 175) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 711, Real ops = 197, Vars = 175) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 709, Real ops = 197, Vars = 183) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 674, Real ops = 162, Vars = 48) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 674, Real ops = 162, Vars = 50) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 674, Real ops = 162, Vars = 50) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 674, Real ops = 162, Vars = 48) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 674, Real ops = 162, Vars = 50) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 674, Real ops = 162, Vars = 48) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 674, Real ops = 162, Vars = 50) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 674, Real ops = 162, Vars = 50) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 674, Real ops = 162, Vars = 48) (SOL-10)
# $PROJECT_HOME/../edge_detect_c/edge4.c(90): Loop '/edge_detect/core/RESET' iterated at most 3 times. (LOOP-2)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(34): Loop '/edge_detect/core/SHIFT' iterated at most 3 times. (LOOP-2)
# $PROJECT_HOME/../edge_detect_c/edge4.c(105): Loop '/edge_detect/core/ACC_GX:for' iterated at most 3 times. (LOOP-2)
# $PROJECT_HOME/../edge_detect_c/edge4.c(104): Loop '/edge_detect/core/ACC_GX' iterated at most 3 times. (LOOP-2)
# $PROJECT_HOME/../edge_detect_c/edge4.c(111): Loop '/edge_detect/core/ACC_GY:for' iterated at most 3 times. (LOOP-2)
# $PROJECT_HOME/../edge_detect_c/edge4.c(110): Loop '/edge_detect/core/ACC_GY' iterated at most 3 times. (LOOP-2)
# $PROJECT_HOME/../edge_detect_c/edge4.c(116): Loop '/edge_detect/core/ACC3' iterated at most 3 times. (LOOP-2)
# $PROJECT_HOME/../edge_detect_c/edge4.c(80): Loop '/edge_detect/core/FRAME' iterated at most 1 times. (LOOP-2)
# $PROJECT_HOME/../edge_detect_c/edge4.c(91): Detected constant initialization of array 'avg_x', optimizing loop 'RESET' (LOOP-12)
# $PROJECT_HOME/../edge_detect_c/edge4.c(92): Detected constant initialization of array 'avg_y', optimizing loop 'RESET' (LOOP-12)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 878, Real ops = 159, Vars = 49) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 640, Real ops = 150, Vars = 48) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 640, Real ops = 150, Vars = 50) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 633, Real ops = 150, Vars = 54) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 626, Real ops = 150, Vars = 48) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 626, Real ops = 150, Vars = 50) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 626, Real ops = 150, Vars = 48) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 626, Real ops = 150, Vars = 50) (SOL-10)
# Design 'edge_detect' was read (SOL-1)
# Info: Completed transformation 'compile' on solution 'edge_detect.v5': elapsed time 4.26 seconds, memory usage 197808kB, peak memory usage 267392kB (SOL-9)
# Info: Starting transformation 'architect' on solution 'edge_detect.v5' (SOL-8)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(34): Loop '/edge_detect/core/SHIFT' is left rolled. (LOOP-4)
# $PROJECT_HOME/../edge_detect_c/edge4.c(105): Loop '/edge_detect/core/ACC_GX:for' is left rolled. (LOOP-4)
# $PROJECT_HOME/../edge_detect_c/edge4.c(104): Loop '/edge_detect/core/ACC_GX' is left rolled. (LOOP-4)
# $PROJECT_HOME/../edge_detect_c/edge4.c(111): Loop '/edge_detect/core/ACC_GY:for' is left rolled. (LOOP-4)
# $PROJECT_HOME/../edge_detect_c/edge4.c(110): Loop '/edge_detect/core/ACC_GY' is left rolled. (LOOP-4)
# $PROJECT_HOME/../edge_detect_c/edge4.c(116): Loop '/edge_detect/core/ACC3' is left rolled. (LOOP-4)
# $PROJECT_HOME/../edge_detect_c/edge4.c(50): Loop '/edge_detect/core/main' is left rolled. (LOOP-4)
# Loop 'ACC_GY' is merged and folded into Loop 'ACC_GX' (LOOP-9)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 632, Real ops = 152, Vars = 50) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 630, Real ops = 152, Vars = 50) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 626, Real ops = 150, Vars = 48) (SOL-10)
# Loop 'ACC_GY:for' is merged and folded into Loop 'ACC_GX:for' (LOOP-9)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 631, Real ops = 151, Vars = 50) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 629, Real ops = 151, Vars = 50) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 625, Real ops = 149, Vars = 48) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 625, Real ops = 149, Vars = 53) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 625, Real ops = 149, Vars = 48) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 625, Real ops = 149, Vars = 53) (SOL-10)
# $PROJECT_HOME/../edge_detect_c/edge4.c(50): I/O-Port inferred - resource 'vin:rsc' (from var: vin) mapped to 'mgc_ioport.mgc_in_wire' (size: 90). (MEM-2)
# $PROJECT_HOME/../edge_detect_c/edge4.c(50): I/O-Port inferred - resource 'vout:rsc' (from var: vout) mapped to 'mgc_ioport.mgc_out_stdreg' (size: 30). (MEM-2)
# Info: Optimizing partition '/edge_detect': (Total ops = 627, Real ops = 149, Vars = 53) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 627, Real ops = 149, Vars = 48) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 626, Real ops = 149, Vars = 48) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 626, Real ops = 149, Vars = 53) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 681, Real ops = 164, Vars = 70) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 666, Real ops = 168, Vars = 79) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 665, Real ops = 167, Vars = 57) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 665, Real ops = 167, Vars = 62) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 665, Real ops = 167, Vars = 57) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 665, Real ops = 167, Vars = 62) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 678, Real ops = 168, Vars = 62) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 682, Real ops = 168, Vars = 62) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 676, Real ops = 168, Vars = 62) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 1594, Real ops = 382, Vars = 600) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 822, Real ops = 260, Vars = 116) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 821, Real ops = 260, Vars = 115) (SOL-10)
# Design 'edge_detect' contains '352' real operations. (SOL-11)
# Info: Completed transformation 'architect' on solution 'edge_detect.v5': elapsed time 10.30 seconds, memory usage 199272kB, peak memory usage 267392kB (SOL-9)
# Info: Starting transformation 'allocate' on solution 'edge_detect.v5' (SOL-8)
# Performing concurrent resource allocation and scheduling on '/edge_detect/core' (CRAAS-1)
# Info: Select qualified components for data operations ... (CRAAS-3)
# Info: Apply resource constraints on data operations ... (CRAAS-4)
# $PROJECT_HOME/../edge_detect_c/edge4.c(50): Prescheduled LOOP 'main' (4 c-steps) (SCHD-7)
# $PROJECT_HOME/../edge_detect_c/edge4.c(50): Prescheduled LOOP 'core:rlp' (0 c-steps) (SCHD-7)
# $PROJECT_HOME/../edge_detect_c/edge4.c(50): Prescheduled SEQUENTIAL 'core' (total length 4 c-steps) (SCHD-8)
# Info: Initial schedule of SEQUENTIAL 'core': Latency = 17, Area (Datapath, Register, Total) = 6387.40, 0.00, 6387.40 (CRAAS-11)
# At least one feasible schedule exists. (CRAAS-9)
# Info: Optimized LOOP 'main': Latency = 17, Area (Datapath, Register, Total) = 6349.10, 0.00, 6349.10 (CRAAS-10)
# Info: Optimized LOOP 'main': Latency = 17, Area (Datapath, Register, Total) = 6310.80, 0.00, 6310.80 (CRAAS-10)
# Info: Optimized LOOP 'main': Latency = 17, Area (Datapath, Register, Total) = 6299.65, 0.00, 6299.65 (CRAAS-10)
# Info: Optimized LOOP 'main': Latency = 17, Area (Datapath, Register, Total) = 6290.03, 0.00, 6290.03 (CRAAS-10)
# Info: Optimized LOOP 'main': Latency = 17, Area (Datapath, Register, Total) = 6280.34, 0.00, 6280.34 (CRAAS-10)
# Info: Optimized LOOP 'main': Latency = 17, Area (Datapath, Register, Total) = 6270.51, 0.00, 6270.51 (CRAAS-10)
# Info: Optimized LOOP 'main': Latency = 17, Area (Datapath, Register, Total) = 6260.74, 0.00, 6260.74 (CRAAS-10)
# Info: Optimized LOOP 'main': Latency = 17, Area (Datapath, Register, Total) = 6259.35, 0.00, 6259.35 (CRAAS-10)
# Info: Optimized LOOP 'main': Latency = 17, Area (Datapath, Register, Total) = 6244.41, 0.00, 6244.41 (CRAAS-10)
# Info: Optimized LOOP 'main': Latency = 17, Area (Datapath, Register, Total) = 6242.20, 0.00, 6242.20 (CRAAS-10)
# Info: Final schedule of SEQUENTIAL 'core': Latency = 17, Area (Datapath, Register, Total) = 6242.20, 0.00, 6242.20 (CRAAS-12)
# Resource allocation and scheduling done. (CRAAS-2)
# Netlist written to file 'schedule.gnt' (NET-4)
# Info: Completed transformation 'allocate' on solution 'edge_detect.v5': elapsed time 2.42 seconds, memory usage 200740kB, peak memory usage 267392kB (SOL-9)
# Info: Starting transformation 'schedule' on solution 'edge_detect.v5' (SOL-8)
# Performing concurrent resource allocation and scheduling on '/edge_detect/core' (CRAAS-1)
# Warning: Cannot build distributed pipeline in process 'core' because of missing handshake for resource 'vout:rsc' (SCHD-15)
# Global signal 'vin:rsc.z' added to design 'edge_detect' for component 'vin:rsc:mgc_in_wire' (LIB-3)
# Global signal 'vout:rsc.z' added to design 'edge_detect' for component 'vout:rsc:mgc_out_stdreg' (LIB-3)
# Info: Optimizing partition '/edge_detect': (Total ops = 1292, Real ops = 365, Vars = 426) (SOL-10)
# Info: Optimizing partition '/edge_detect/edge_detect:core': (Total ops = 1282, Real ops = 364, Vars = 418) (SOL-10)
# Info: Optimizing partition '/edge_detect/edge_detect:core/core': (Total ops = 1273, Real ops = 364, Vars = 418) (SOL-10)
# Info: Optimizing partition '/edge_detect/edge_detect:core/core': (Total ops = 1233, Real ops = 366, Vars = 392) (SOL-10)
# Info: Optimizing partition '/edge_detect/edge_detect:core/core': (Total ops = 1220, Real ops = 366, Vars = 392) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 1234, Real ops = 366, Vars = 404) (SOL-10)
# Info: Optimizing partition '/edge_detect/edge_detect:core': (Total ops = 1225, Real ops = 366, Vars = 397) (SOL-10)
# Info: Optimizing partition '/edge_detect/edge_detect:core/core': (Total ops = 1219, Real ops = 366, Vars = 402) (SOL-10)
# Info: Optimizing partition '/edge_detect/edge_detect:core/core': (Total ops = 1219, Real ops = 366, Vars = 396) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 1233, Real ops = 366, Vars = 408) (SOL-10)
# Info: Optimizing partition '/edge_detect/edge_detect:core': (Total ops = 1224, Real ops = 366, Vars = 401) (SOL-10)
# Info: Optimizing partition '/edge_detect/edge_detect:core/core': (Total ops = 1219, Real ops = 366, Vars = 396) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 1233, Real ops = 366, Vars = 408) (SOL-10)
# Info: Optimizing partition '/edge_detect/edge_detect:core': (Total ops = 1224, Real ops = 366, Vars = 401) (SOL-10)
# Report written to file 'cycle.rpt'
# Netlist written to file 'cycle.v' (NET-4)
# Info: Completed transformation 'schedule' on solution 'edge_detect.v5': elapsed time 6.49 seconds, memory usage 213016kB, peak memory usage 267392kB (SOL-9)
# Info: Starting transformation 'dpfsm' on solution 'edge_detect.v5' (SOL-8)
# Performing FSM extraction... (FSM-1)
# Info: Optimizing partition '/edge_detect': (Total ops = 2092, Real ops = 831, Vars = 1908) (SOL-10)
# Info: Optimizing partition '/edge_detect/edge_detect:core': (Total ops = 2083, Real ops = 831, Vars = 1901) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 2027, Real ops = 651, Vars = 220) (SOL-10)
# Info: Optimizing partition '/edge_detect/edge_detect:core': (Total ops = 2018, Real ops = 651, Vars = 213) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 1230, Real ops = 540, Vars = 217) (SOL-10)
# Info: Optimizing partition '/edge_detect/edge_detect:core': (Total ops = 1221, Real ops = 540, Vars = 210) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 1223, Real ops = 537, Vars = 215) (SOL-10)
# Info: Optimizing partition '/edge_detect/edge_detect:core': (Total ops = 1214, Real ops = 537, Vars = 208) (SOL-10)
# Info: Optimizing partition '/edge_detect/edge_detect:core': (Total ops = 1214, Real ops = 537, Vars = 208) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 1223, Real ops = 537, Vars = 215) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 1223, Real ops = 537, Vars = 215) (SOL-10)
# Info: Optimizing partition '/edge_detect/edge_detect:core': (Total ops = 1214, Real ops = 537, Vars = 208) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 1298, Real ops = 597, Vars = 314) (SOL-10)
# Info: Optimizing partition '/edge_detect/edge_detect:core': (Total ops = 1289, Real ops = 597, Vars = 307) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 1275, Real ops = 585, Vars = 241) (SOL-10)
# Info: Optimizing partition '/edge_detect/edge_detect:core': (Total ops = 1266, Real ops = 585, Vars = 234) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 1261, Real ops = 573, Vars = 228) (SOL-10)
# Info: Optimizing partition '/edge_detect/edge_detect:core': (Total ops = 1252, Real ops = 573, Vars = 221) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 1253, Real ops = 566, Vars = 220) (SOL-10)
# Info: Optimizing partition '/edge_detect/edge_detect:core': (Total ops = 1244, Real ops = 566, Vars = 213) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 1252, Real ops = 565, Vars = 220) (SOL-10)
# Info: Optimizing partition '/edge_detect/edge_detect:core': (Total ops = 1243, Real ops = 565, Vars = 213) (SOL-10)
# Info: Completed transformation 'dpfsm' on solution 'edge_detect.v5': elapsed time 3.21 seconds, memory usage 214468kB, peak memory usage 267392kB (SOL-9)
# Info: Starting transformation 'extract' on solution 'edge_detect.v5' (SOL-8)
# Warning: Reassigned operation FRAME:acc#21:mgc_Altera-Cyclone-III-6_beh_psr.mgc_add(6,0,6,0,7) to mgc_Altera-Cyclone-III-6_beh_psr.mgc_add(5,0,4,0,5) (ASG-1)
# Warning: Reassigned operation ACC3:acc:mgc_Altera-Cyclone-III-6_beh_psr.mgc_add(3,0,3,0,3) to mgc_Altera-Cyclone-III-6_beh_psr.mgc_add(2,0,1,0,2) (ASG-1)
# Warning: Reassigned operation ACC_GX:for:acc:mgc_Altera-Cyclone-III-6_beh_psr.mgc_add(3,0,3,0,3) to mgc_Altera-Cyclone-III-6_beh_psr.mgc_add(2,0,1,0,2) (ASG-1)
# Warning: Reassigned operation ACC_GY:for:acc:mgc_Altera-Cyclone-III-6_beh_psr.mgc_add(3,0,3,0,3) to mgc_Altera-Cyclone-III-6_beh_psr.mgc_add(2,0,1,0,2) (ASG-1)
# Warning: Reassigned operation ACC_GX:acc:mgc_Altera-Cyclone-III-6_beh_psr.mgc_add(3,0,3,0,3) to mgc_Altera-Cyclone-III-6_beh_psr.mgc_add(2,0,1,0,2) (ASG-1)
# Warning: Reassigned operation ACC_GY:acc:mgc_Altera-Cyclone-III-6_beh_psr.mgc_add(3,0,3,0,3) to mgc_Altera-Cyclone-III-6_beh_psr.mgc_add(2,0,1,0,2) (ASG-1)
# Warning: Reassigned operation FRAME:acc#37:DEFAULT to mgc_Altera-Cyclone-III-6_beh_psr.mgc_add(11,0,11,0,12) (ASG-1)
# Info: Optimizing partition '/edge_detect': (Total ops = 1312, Real ops = 583, Vars = 1305) (SOL-10)
# Info: Optimizing partition '/edge_detect/edge_detect:core': (Total ops = 1303, Real ops = 583, Vars = 1298) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 1099, Real ops = 513, Vars = 210) (SOL-10)
# Info: Optimizing partition '/edge_detect/edge_detect:core': (Total ops = 1090, Real ops = 513, Vars = 203) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 1099, Real ops = 513, Vars = 210) (SOL-10)
# Info: Optimizing partition '/edge_detect/edge_detect:core': (Total ops = 1090, Real ops = 513, Vars = 203) (SOL-10)
# Info: Optimizing partition '/edge_detect/edge_detect:core': (Total ops = 1090, Real ops = 513, Vars = 203) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 1099, Real ops = 513, Vars = 210) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 1099, Real ops = 513, Vars = 210) (SOL-10)
# Info: Optimizing partition '/edge_detect/edge_detect:core': (Total ops = 1090, Real ops = 513, Vars = 203) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 1099, Real ops = 513, Vars = 210) (SOL-10)
# Info: Optimizing partition '/edge_detect/edge_detect:core': (Total ops = 1090, Real ops = 513, Vars = 203) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 1152, Real ops = 531, Vars = 1145) (SOL-10)
# Info: Optimizing partition '/edge_detect/edge_detect:core': (Total ops = 1143, Real ops = 531, Vars = 1138) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 1152, Real ops = 531, Vars = 1145) (SOL-10)
# Info: Optimizing partition '/edge_detect/edge_detect:core': (Total ops = 1143, Real ops = 531, Vars = 1138) (SOL-10)
# Netlist written to file 'schematic.nlv' (NET-4)
# Info: Optimizing partition '/edge_detect': (Total ops = 1152, Real ops = 531, Vars = 1145) (SOL-10)
# Info: Optimizing partition '/edge_detect/edge_detect:core': (Total ops = 1143, Real ops = 531, Vars = 1138) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 1093, Real ops = 513, Vars = 210) (SOL-10)
# Info: Optimizing partition '/edge_detect/edge_detect:core': (Total ops = 1084, Real ops = 513, Vars = 203) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 1093, Real ops = 513, Vars = 210) (SOL-10)
# Info: Optimizing partition '/edge_detect/edge_detect:core': (Total ops = 1084, Real ops = 513, Vars = 203) (SOL-10)
# Report written to file 'rtl.rpt'
# Netlist written to file 'rtl.v' (NET-4)
# generate concat
# order file name is: rtl.v_order.txt
# Add dependent file: C:/PROGRA~1/CALYPT~1/CATAPU~1.126/Mgc_home/pkgs/hls_pkgs/mgc_comps_src/mgc_shift_r_beh_v2.v
# Add dependent file: ./rtl_mgc_ioport.v
# Add dependent file: ./rtl_mgc_ioport_v2001.v
# Add dependent file: ./rtl.v
# Finished writing concatenated file: C:/fpga-catapult-c-spring/Edge3/Edge3/edge_detect.v5/concat_rtl.v
# Synthesis timing script written to file './rtl.v.psr_timing'
# IO timing constraints written to synthesis script file
# Synthesis script written to file 'rtl.v.psr'
# Info: Completed transformation 'extract' on solution 'edge_detect.v5': elapsed time 7.27 seconds, memory usage 216692kB, peak memory usage 267392kB (SOL-9)
go analyze
directive set -CLOCKS {clk {-CLOCK_PERIOD 37.037037037 -CLOCK_EDGE rising -CLOCK_HIGH_TIME 18.52 -CLOCK_OFFSET 0.000000 -CLOCK_UNCERTAINTY 0.0 -RESET_KIND async -RESET_SYNC_NAME rst -RESET_SYNC_ACTIVE high -RESET_ASYNC_NAME arst_n -RESET_ASYNC_ACTIVE low -ENABLE_NAME en -ENABLE_ACTIVE high}}
# Info: Branching solution 'solution.v1' at state 'analyze' (PRJ-2)
# /CLOCKS {clk {-CLOCK_PERIOD 37.037037037 -CLOCK_EDGE rising -CLOCK_UNCERTAINTY 0.0 -CLOCK_HIGH_TIME 18.52 -RESET_SYNC_NAME rst -RESET_ASYNC_NAME arst_n -RESET_KIND async -RESET_SYNC_ACTIVE high -RESET_ASYNC_ACTIVE low -ENABLE_NAME en -ENABLE_ACTIVE high}}
go extract
# Info: Starting transformation 'compile' on solution 'solution.v1' (SOL-8)
# Generating synthesis internal form... (CIN-3)
# $PROJECT_HOME/../edge_detect_c/edge4.c(50): Found top design routine 'edge_detect' specified by directive (CIN-52)
# $PROJECT_HOME/../edge_detect_c/edge4.c(50): Synthesizing routine 'edge_detect' (CIN-13)
# $PROJECT_HOME/../edge_detect_c/edge4.c(50): Inlining routine 'edge_detect' (CIN-14)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(13): Inlining member function 'shift_class<ac_int<90, false>, 3>::shift_class' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(32): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator<<' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(48): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(48): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(48): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(48): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(48): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(48): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/edge4.c(162): Inlining routine 'AbsAndMax' (CIN-14)
# $PROJECT_HOME/../edge_detect_c/edge4.c(162): Inlining routine 'AbsAndMax' (CIN-14)
# $PROJECT_HOME/../edge_detect_c/edge4.c(162): Inlining routine 'AbsAndMax' (CIN-14)
# $PROJECT_HOME/../edge_detect_c/edge4.c(162): Inlining routine 'AbsAndMax' (CIN-14)
# $PROJECT_HOME/../edge_detect_c/edge4.c(162): Inlining routine 'AbsAndMax' (CIN-14)
# $PROJECT_HOME/../edge_detect_c/edge4.c(162): Inlining routine 'AbsAndMax' (CIN-14)
# $PROJECT_HOME/../edge_detect_c/edge4.c(162): Inlining routine 'AbsAndMax' (CIN-14)
# $PROJECT_HOME/../edge_detect_c/edge4.c(162): Inlining routine 'AbsAndMax' (CIN-14)
# $PROJECT_HOME/../edge_detect_c/edge4.c(162): Inlining routine 'AbsAndMax' (CIN-14)
# $PROJECT_HOME/../edge_detect_c/edge4.c(50): Optimizing block '/edge_detect' ... (CIN-4)
# $PROJECT_HOME/../edge_detect_c/edge4.c(50): Inout port 'vin' is only used as an input. (OPT-10)
# $PROJECT_HOME/../edge_detect_c/edge4.c(50): Inout port 'vout' is only used as an output. (OPT-11)
# Info: Optimizing partition '/edge_detect': (Total ops = 866, Real ops = 212, Vars = 214) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 866, Real ops = 212, Vars = 212) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 834, Real ops = 200, Vars = 216) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 834, Real ops = 200, Vars = 218) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 834, Real ops = 200, Vars = 218) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 834, Real ops = 200, Vars = 216) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 725, Real ops = 197, Vars = 174) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 711, Real ops = 197, Vars = 173) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 711, Real ops = 197, Vars = 173) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 711, Real ops = 197, Vars = 175) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 711, Real ops = 197, Vars = 175) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 709, Real ops = 197, Vars = 183) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 674, Real ops = 162, Vars = 48) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 674, Real ops = 162, Vars = 50) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 674, Real ops = 162, Vars = 50) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 674, Real ops = 162, Vars = 48) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 674, Real ops = 162, Vars = 50) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 674, Real ops = 162, Vars = 48) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 674, Real ops = 162, Vars = 50) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 674, Real ops = 162, Vars = 50) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 674, Real ops = 162, Vars = 48) (SOL-10)
# $PROJECT_HOME/../edge_detect_c/edge4.c(90): Loop '/edge_detect/core/RESET' iterated at most 3 times. (LOOP-2)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(34): Loop '/edge_detect/core/SHIFT' iterated at most 3 times. (LOOP-2)
# $PROJECT_HOME/../edge_detect_c/edge4.c(105): Loop '/edge_detect/core/ACC_GX:for' iterated at most 3 times. (LOOP-2)
# $PROJECT_HOME/../edge_detect_c/edge4.c(104): Loop '/edge_detect/core/ACC_GX' iterated at most 3 times. (LOOP-2)
# $PROJECT_HOME/../edge_detect_c/edge4.c(111): Loop '/edge_detect/core/ACC_GY:for' iterated at most 3 times. (LOOP-2)
# $PROJECT_HOME/../edge_detect_c/edge4.c(110): Loop '/edge_detect/core/ACC_GY' iterated at most 3 times. (LOOP-2)
# $PROJECT_HOME/../edge_detect_c/edge4.c(116): Loop '/edge_detect/core/ACC3' iterated at most 3 times. (LOOP-2)
# $PROJECT_HOME/../edge_detect_c/edge4.c(80): Loop '/edge_detect/core/FRAME' iterated at most 1 times. (LOOP-2)
# $PROJECT_HOME/../edge_detect_c/edge4.c(91): Detected constant initialization of array 'avg_x', optimizing loop 'RESET' (LOOP-12)
# $PROJECT_HOME/../edge_detect_c/edge4.c(92): Detected constant initialization of array 'avg_y', optimizing loop 'RESET' (LOOP-12)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 878, Real ops = 159, Vars = 49) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 640, Real ops = 150, Vars = 48) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 640, Real ops = 150, Vars = 50) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 633, Real ops = 150, Vars = 54) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 626, Real ops = 150, Vars = 48) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 626, Real ops = 150, Vars = 50) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 626, Real ops = 150, Vars = 48) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 626, Real ops = 150, Vars = 50) (SOL-10)
# Design 'edge_detect' was read (SOL-1)
# Info: Completed transformation 'compile' on solution 'edge_detect.v6': elapsed time 5.10 seconds, memory usage 224076kB, peak memory usage 267392kB (SOL-9)
# Info: Starting transformation 'architect' on solution 'edge_detect.v6' (SOL-8)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(34): Loop '/edge_detect/core/SHIFT' is left rolled. (LOOP-4)
# $PROJECT_HOME/../edge_detect_c/edge4.c(105): Loop '/edge_detect/core/ACC_GX:for' is left rolled. (LOOP-4)
# $PROJECT_HOME/../edge_detect_c/edge4.c(104): Loop '/edge_detect/core/ACC_GX' is left rolled. (LOOP-4)
# $PROJECT_HOME/../edge_detect_c/edge4.c(111): Loop '/edge_detect/core/ACC_GY:for' is left rolled. (LOOP-4)
# $PROJECT_HOME/../edge_detect_c/edge4.c(110): Loop '/edge_detect/core/ACC_GY' is left rolled. (LOOP-4)
# $PROJECT_HOME/../edge_detect_c/edge4.c(116): Loop '/edge_detect/core/ACC3' is left rolled. (LOOP-4)
# $PROJECT_HOME/../edge_detect_c/edge4.c(50): Loop '/edge_detect/core/main' is left rolled. (LOOP-4)
# Loop 'ACC_GY' is merged and folded into Loop 'ACC_GX' (LOOP-9)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 632, Real ops = 152, Vars = 50) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 630, Real ops = 152, Vars = 50) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 626, Real ops = 150, Vars = 48) (SOL-10)
# Loop 'ACC_GY:for' is merged and folded into Loop 'ACC_GX:for' (LOOP-9)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 631, Real ops = 151, Vars = 50) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 629, Real ops = 151, Vars = 50) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 625, Real ops = 149, Vars = 48) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 625, Real ops = 149, Vars = 53) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 625, Real ops = 149, Vars = 48) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 625, Real ops = 149, Vars = 53) (SOL-10)
# $PROJECT_HOME/../edge_detect_c/edge4.c(50): I/O-Port inferred - resource 'vin:rsc' (from var: vin) mapped to 'mgc_ioport.mgc_in_wire' (size: 90). (MEM-2)
# $PROJECT_HOME/../edge_detect_c/edge4.c(50): I/O-Port inferred - resource 'vout:rsc' (from var: vout) mapped to 'mgc_ioport.mgc_out_stdreg' (size: 30). (MEM-2)
# Info: Optimizing partition '/edge_detect': (Total ops = 627, Real ops = 149, Vars = 53) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 627, Real ops = 149, Vars = 48) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 626, Real ops = 149, Vars = 48) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 626, Real ops = 149, Vars = 53) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 681, Real ops = 164, Vars = 70) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 666, Real ops = 168, Vars = 79) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 665, Real ops = 167, Vars = 57) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 665, Real ops = 167, Vars = 62) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 665, Real ops = 167, Vars = 57) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 665, Real ops = 167, Vars = 62) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 678, Real ops = 168, Vars = 62) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 682, Real ops = 168, Vars = 62) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 676, Real ops = 168, Vars = 62) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 1594, Real ops = 382, Vars = 600) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 822, Real ops = 260, Vars = 116) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 821, Real ops = 260, Vars = 115) (SOL-10)
# Design 'edge_detect' contains '352' real operations. (SOL-11)
# Info: Completed transformation 'architect' on solution 'edge_detect.v6': elapsed time 12.71 seconds, memory usage 226476kB, peak memory usage 267392kB (SOL-9)
# Info: Starting transformation 'allocate' on solution 'edge_detect.v6' (SOL-8)
# Performing concurrent resource allocation and scheduling on '/edge_detect/core' (CRAAS-1)
# Info: Select qualified components for data operations ... (CRAAS-3)
# Info: Apply resource constraints on data operations ... (CRAAS-4)
# $PROJECT_HOME/../edge_detect_c/edge4.c(50): Prescheduled LOOP 'main' (2 c-steps) (SCHD-7)
# $PROJECT_HOME/../edge_detect_c/edge4.c(50): Prescheduled LOOP 'core:rlp' (0 c-steps) (SCHD-7)
# $PROJECT_HOME/../edge_detect_c/edge4.c(50): Prescheduled SEQUENTIAL 'core' (total length 2 c-steps) (SCHD-8)
# Info: Initial schedule of SEQUENTIAL 'core': Latency = 15, Area (Datapath, Register, Total) = 6387.40, 0.00, 6387.40 (CRAAS-11)
# At least one feasible schedule exists. (CRAAS-9)
# Info: Optimized LOOP 'main': Latency = 15, Area (Datapath, Register, Total) = 6349.10, 0.00, 6349.10 (CRAAS-10)
# Info: Optimized LOOP 'main': Latency = 15, Area (Datapath, Register, Total) = 6310.80, 0.00, 6310.80 (CRAAS-10)
# Info: Optimized LOOP 'main': Latency = 15, Area (Datapath, Register, Total) = 6299.65, 0.00, 6299.65 (CRAAS-10)
# Info: Optimized LOOP 'main': Latency = 15, Area (Datapath, Register, Total) = 6290.03, 0.00, 6290.03 (CRAAS-10)
# Info: Optimized LOOP 'main': Latency = 15, Area (Datapath, Register, Total) = 6280.34, 0.00, 6280.34 (CRAAS-10)
# Info: Optimized LOOP 'main': Latency = 15, Area (Datapath, Register, Total) = 6270.51, 0.00, 6270.51 (CRAAS-10)
# Info: Optimized LOOP 'main': Latency = 15, Area (Datapath, Register, Total) = 6260.74, 0.00, 6260.74 (CRAAS-10)
# Info: Optimized LOOP 'main': Latency = 15, Area (Datapath, Register, Total) = 6259.35, 0.00, 6259.35 (CRAAS-10)
# Info: Optimized LOOP 'main': Latency = 15, Area (Datapath, Register, Total) = 6244.41, 0.00, 6244.41 (CRAAS-10)
# Info: Optimized LOOP 'main': Latency = 15, Area (Datapath, Register, Total) = 6242.20, 0.00, 6242.20 (CRAAS-10)
# Info: Final schedule of SEQUENTIAL 'core': Latency = 15, Area (Datapath, Register, Total) = 6242.20, 0.00, 6242.20 (CRAAS-12)
# Resource allocation and scheduling done. (CRAAS-2)
# Netlist written to file 'schedule.gnt' (NET-4)
# Info: Completed transformation 'allocate' on solution 'edge_detect.v6': elapsed time 2.78 seconds, memory usage 226540kB, peak memory usage 267392kB (SOL-9)
# Info: Starting transformation 'schedule' on solution 'edge_detect.v6' (SOL-8)
# Performing concurrent resource allocation and scheduling on '/edge_detect/core' (CRAAS-1)
# Warning: Cannot build distributed pipeline in process 'core' because of missing handshake for resource 'vout:rsc' (SCHD-15)
# Global signal 'vin:rsc.z' added to design 'edge_detect' for component 'vin:rsc:mgc_in_wire' (LIB-3)
# Global signal 'vout:rsc.z' added to design 'edge_detect' for component 'vout:rsc:mgc_out_stdreg' (LIB-3)
# Info: Optimizing partition '/edge_detect': (Total ops = 1117, Real ops = 353, Vars = 154) (SOL-10)
# Info: Optimizing partition '/edge_detect/edge_detect:core': (Total ops = 1107, Real ops = 352, Vars = 146) (SOL-10)
# Info: Optimizing partition '/edge_detect/edge_detect:core/core': (Total ops = 1098, Real ops = 352, Vars = 146) (SOL-10)
# Info: Optimizing partition '/edge_detect/edge_detect:core/core': (Total ops = 1030, Real ops = 356, Vars = 118) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 1044, Real ops = 356, Vars = 130) (SOL-10)
# Info: Optimizing partition '/edge_detect/edge_detect:core': (Total ops = 1035, Real ops = 356, Vars = 123) (SOL-10)
# Info: Optimizing partition '/edge_detect/edge_detect:core/core': (Total ops = 1030, Real ops = 356, Vars = 118) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 1044, Real ops = 356, Vars = 130) (SOL-10)
# Info: Optimizing partition '/edge_detect/edge_detect:core': (Total ops = 1035, Real ops = 356, Vars = 123) (SOL-10)
# Report written to file 'cycle.rpt'
# Netlist written to file 'cycle.v' (NET-4)
# Info: Completed transformation 'schedule' on solution 'edge_detect.v6': elapsed time 3.70 seconds, memory usage 237492kB, peak memory usage 267392kB (SOL-9)
# Info: Starting transformation 'dpfsm' on solution 'edge_detect.v6' (SOL-8)
# Performing FSM extraction... (FSM-1)
# Info: Optimizing partition '/edge_detect': (Total ops = 1371, Real ops = 401, Vars = 1058) (SOL-10)
# Info: Optimizing partition '/edge_detect/edge_detect:core': (Total ops = 1362, Real ops = 401, Vars = 1051) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 1591, Real ops = 395, Vars = 120) (SOL-10)
# Info: Optimizing partition '/edge_detect/edge_detect:core': (Total ops = 1582, Real ops = 395, Vars = 113) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 996, Real ops = 388, Vars = 118) (SOL-10)
# Info: Optimizing partition '/edge_detect/edge_detect:core': (Total ops = 987, Real ops = 388, Vars = 111) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 994, Real ops = 386, Vars = 118) (SOL-10)
# Info: Optimizing partition '/edge_detect/edge_detect:core': (Total ops = 985, Real ops = 386, Vars = 111) (SOL-10)
# Info: Optimizing partition '/edge_detect/edge_detect:core': (Total ops = 985, Real ops = 386, Vars = 111) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 994, Real ops = 386, Vars = 118) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 994, Real ops = 386, Vars = 118) (SOL-10)
# Info: Optimizing partition '/edge_detect/edge_detect:core': (Total ops = 985, Real ops = 386, Vars = 111) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 1087, Real ops = 464, Vars = 223) (SOL-10)
# Info: Optimizing partition '/edge_detect/edge_detect:core': (Total ops = 1078, Real ops = 464, Vars = 216) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 1028, Real ops = 416, Vars = 138) (SOL-10)
# Info: Optimizing partition '/edge_detect/edge_detect:core': (Total ops = 1019, Real ops = 416, Vars = 131) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 1020, Real ops = 410, Vars = 131) (SOL-10)
# Info: Optimizing partition '/edge_detect/edge_detect:core': (Total ops = 1011, Real ops = 410, Vars = 124) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 1012, Real ops = 403, Vars = 123) (SOL-10)
# Info: Optimizing partition '/edge_detect/edge_detect:core': (Total ops = 1003, Real ops = 403, Vars = 116) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 1011, Real ops = 402, Vars = 123) (SOL-10)
# Info: Optimizing partition '/edge_detect/edge_detect:core': (Total ops = 1002, Real ops = 402, Vars = 116) (SOL-10)
# Info: Completed transformation 'dpfsm' on solution 'edge_detect.v6': elapsed time 2.85 seconds, memory usage 238388kB, peak memory usage 267392kB (SOL-9)
# Info: Starting transformation 'extract' on solution 'edge_detect.v6' (SOL-8)
# Warning: Reassigned operation FRAME:acc#21:mgc_Altera-Cyclone-III-6_beh_psr.mgc_add(6,0,6,0,7) to mgc_Altera-Cyclone-III-6_beh_psr.mgc_add(5,0,4,0,5) (ASG-1)
# Warning: Reassigned operation ACC3:acc:mgc_Altera-Cyclone-III-6_beh_psr.mgc_add(3,0,3,0,3) to mgc_Altera-Cyclone-III-6_beh_psr.mgc_add(2,0,1,0,2) (ASG-1)
# Warning: Reassigned operation ACC_GX:for:acc:mgc_Altera-Cyclone-III-6_beh_psr.mgc_add(3,0,3,0,3) to mgc_Altera-Cyclone-III-6_beh_psr.mgc_add(2,0,1,0,2) (ASG-1)
# Warning: Reassigned operation ACC_GY:for:acc:mgc_Altera-Cyclone-III-6_beh_psr.mgc_add(3,0,3,0,3) to mgc_Altera-Cyclone-III-6_beh_psr.mgc_add(2,0,1,0,2) (ASG-1)
# Warning: Reassigned operation ACC_GX:acc:mgc_Altera-Cyclone-III-6_beh_psr.mgc_add(3,0,3,0,3) to mgc_Altera-Cyclone-III-6_beh_psr.mgc_add(2,0,1,0,2) (ASG-1)
# Warning: Reassigned operation ACC_GY:acc:mgc_Altera-Cyclone-III-6_beh_psr.mgc_add(3,0,3,0,3) to mgc_Altera-Cyclone-III-6_beh_psr.mgc_add(2,0,1,0,2) (ASG-1)
# Info: Optimizing partition '/edge_detect': (Total ops = 1094, Real ops = 431, Vars = 1087) (SOL-10)
# Info: Optimizing partition '/edge_detect/edge_detect:core': (Total ops = 1085, Real ops = 431, Vars = 1080) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 1000, Real ops = 393, Vars = 124) (SOL-10)
# Info: Optimizing partition '/edge_detect/edge_detect:core': (Total ops = 991, Real ops = 393, Vars = 117) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 1000, Real ops = 393, Vars = 124) (SOL-10)
# Info: Optimizing partition '/edge_detect/edge_detect:core': (Total ops = 991, Real ops = 393, Vars = 117) (SOL-10)
# Info: Optimizing partition '/edge_detect/edge_detect:core': (Total ops = 991, Real ops = 393, Vars = 117) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 1000, Real ops = 393, Vars = 124) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 1000, Real ops = 393, Vars = 124) (SOL-10)
# Info: Optimizing partition '/edge_detect/edge_detect:core': (Total ops = 991, Real ops = 393, Vars = 117) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 1000, Real ops = 393, Vars = 124) (SOL-10)
# Info: Optimizing partition '/edge_detect/edge_detect:core': (Total ops = 991, Real ops = 393, Vars = 117) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 1095, Real ops = 423, Vars = 1088) (SOL-10)
# Info: Optimizing partition '/edge_detect/edge_detect:core': (Total ops = 1086, Real ops = 423, Vars = 1081) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 1095, Real ops = 423, Vars = 1088) (SOL-10)
# Info: Optimizing partition '/edge_detect/edge_detect:core': (Total ops = 1086, Real ops = 423, Vars = 1081) (SOL-10)
# Netlist written to file 'schematic.nlv' (NET-4)
# Info: Optimizing partition '/edge_detect': (Total ops = 1095, Real ops = 423, Vars = 1088) (SOL-10)
# Info: Optimizing partition '/edge_detect/edge_detect:core': (Total ops = 1086, Real ops = 423, Vars = 1081) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 994, Real ops = 393, Vars = 124) (SOL-10)
# Info: Optimizing partition '/edge_detect/edge_detect:core': (Total ops = 985, Real ops = 393, Vars = 117) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 994, Real ops = 393, Vars = 124) (SOL-10)
# Info: Optimizing partition '/edge_detect/edge_detect:core': (Total ops = 985, Real ops = 393, Vars = 117) (SOL-10)
# Report written to file 'rtl.rpt'
# Warning: User stop requested, stopping...
# Netlist written to file 'rtl.v' (NET-4)
# generate concat
# order file name is: rtl.v_order.txt
# Add dependent file: C:/PROGRA~1/CALYPT~1/CATAPU~1.126/Mgc_home/pkgs/hls_pkgs/mgc_comps_src/mgc_shift_r_beh_v2.v
# Add dependent file: ./rtl_mgc_ioport.v
# Add dependent file: ./rtl_mgc_ioport_v2001.v
# Add dependent file: ./rtl.v
# Finished writing concatenated file: C:/fpga-catapult-c-spring/Edge3/Edge3/edge_detect.v6/concat_rtl.v
# Synthesis timing script written to file './rtl.v.psr_timing'
# IO timing constraints written to synthesis script file
# Synthesis script written to file 'rtl.v.psr'
# Error: go: user stop requested
go new
solution file add ../edge_detect_c/edge4.c
# Info: Branching solution 'solution.v1' at state 'new' (PRJ-2)
# /INPUTFILES/3
go analyze
# Info: Starting transformation 'analyze' on solution 'solution.v1' (SOL-8)
# Front End called with arguments: -- {C:\fpga-catapult-c-spring\edge_detect_c\edge4.c} {C:\fpga-catapult-c-spring\edge_detect_c\shift_class.h} {C:\fpga-catapult-c-spring\edge_detect_c\edge.h} (CIN-69)
# Edison Design Group C++/C Front End - Version 3.10.1 (CIN-1)
# $PROJECT_HOME/../edge_detect_c/edge4.c(49): Pragma 'hls_design<top>' detected on routine 'edge_detect' (CIN-6)
# Source file analysis completed (CIN-68)
# Info: Completed transformation 'analyze' on solution 'solution.v1': elapsed time 2.09 seconds, memory usage 250900kB, peak memory usage 311244kB (SOL-9)
go compile
# Info: Starting transformation 'compile' on solution 'solution.v1' (SOL-8)
# Generating synthesis internal form... (CIN-3)
# $PROJECT_HOME/../edge_detect_c/edge4.c(50): Found top design routine 'edge_detect' specified by directive (CIN-52)
# $PROJECT_HOME/../edge_detect_c/edge4.c(50): Synthesizing routine 'edge_detect' (CIN-13)
# $PROJECT_HOME/../edge_detect_c/edge4.c(50): Inlining routine 'edge_detect' (CIN-14)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(13): Inlining member function 'shift_class<ac_int<90, false>, 3>::shift_class' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(32): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator<<' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(48): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(48): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(48): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(48): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(48): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(48): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/edge4.c(162): Inlining routine 'AbsAndMax' (CIN-14)
# $PROJECT_HOME/../edge_detect_c/edge4.c(162): Inlining routine 'AbsAndMax' (CIN-14)
# $PROJECT_HOME/../edge_detect_c/edge4.c(162): Inlining routine 'AbsAndMax' (CIN-14)
# $PROJECT_HOME/../edge_detect_c/edge4.c(162): Inlining routine 'AbsAndMax' (CIN-14)
# $PROJECT_HOME/../edge_detect_c/edge4.c(162): Inlining routine 'AbsAndMax' (CIN-14)
# $PROJECT_HOME/../edge_detect_c/edge4.c(162): Inlining routine 'AbsAndMax' (CIN-14)
# $PROJECT_HOME/../edge_detect_c/edge4.c(162): Inlining routine 'AbsAndMax' (CIN-14)
# $PROJECT_HOME/../edge_detect_c/edge4.c(162): Inlining routine 'AbsAndMax' (CIN-14)
# $PROJECT_HOME/../edge_detect_c/edge4.c(162): Inlining routine 'AbsAndMax' (CIN-14)
# $PROJECT_HOME/../edge_detect_c/edge4.c(50): Optimizing block '/edge_detect' ... (CIN-4)
# $PROJECT_HOME/../edge_detect_c/edge4.c(50): Inout port 'vin' is only used as an input. (OPT-10)
# $PROJECT_HOME/../edge_detect_c/edge4.c(50): Inout port 'vout' is only used as an output. (OPT-11)
# Info: Optimizing partition '/edge_detect': (Total ops = 866, Real ops = 212, Vars = 214) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 866, Real ops = 212, Vars = 212) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 834, Real ops = 200, Vars = 216) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 834, Real ops = 200, Vars = 218) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 834, Real ops = 200, Vars = 218) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 834, Real ops = 200, Vars = 216) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 725, Real ops = 197, Vars = 174) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 711, Real ops = 197, Vars = 173) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 711, Real ops = 197, Vars = 173) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 711, Real ops = 197, Vars = 175) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 711, Real ops = 197, Vars = 175) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 709, Real ops = 197, Vars = 183) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 674, Real ops = 162, Vars = 48) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 674, Real ops = 162, Vars = 50) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 674, Real ops = 162, Vars = 50) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 674, Real ops = 162, Vars = 48) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 674, Real ops = 162, Vars = 50) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 674, Real ops = 162, Vars = 48) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 674, Real ops = 162, Vars = 50) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 674, Real ops = 162, Vars = 50) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 674, Real ops = 162, Vars = 48) (SOL-10)
# $PROJECT_HOME/../edge_detect_c/edge4.c(90): Loop '/edge_detect/core/RESET' iterated at most 3 times. (LOOP-2)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(34): Loop '/edge_detect/core/SHIFT' iterated at most 3 times. (LOOP-2)
# $PROJECT_HOME/../edge_detect_c/edge4.c(105): Loop '/edge_detect/core/ACC_GX:for' iterated at most 3 times. (LOOP-2)
# $PROJECT_HOME/../edge_detect_c/edge4.c(104): Loop '/edge_detect/core/ACC_GX' iterated at most 3 times. (LOOP-2)
# $PROJECT_HOME/../edge_detect_c/edge4.c(111): Loop '/edge_detect/core/ACC_GY:for' iterated at most 3 times. (LOOP-2)
# $PROJECT_HOME/../edge_detect_c/edge4.c(110): Loop '/edge_detect/core/ACC_GY' iterated at most 3 times. (LOOP-2)
# $PROJECT_HOME/../edge_detect_c/edge4.c(116): Loop '/edge_detect/core/ACC3' iterated at most 3 times. (LOOP-2)
# $PROJECT_HOME/../edge_detect_c/edge4.c(80): Loop '/edge_detect/core/FRAME' iterated at most 1 times. (LOOP-2)
# $PROJECT_HOME/../edge_detect_c/edge4.c(91): Detected constant initialization of array 'avg_x', optimizing loop 'RESET' (LOOP-12)
# $PROJECT_HOME/../edge_detect_c/edge4.c(92): Detected constant initialization of array 'avg_y', optimizing loop 'RESET' (LOOP-12)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 878, Real ops = 159, Vars = 49) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 640, Real ops = 150, Vars = 48) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 640, Real ops = 150, Vars = 50) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 633, Real ops = 150, Vars = 54) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 626, Real ops = 150, Vars = 48) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 626, Real ops = 150, Vars = 50) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 626, Real ops = 150, Vars = 48) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 626, Real ops = 150, Vars = 50) (SOL-10)
# Design 'edge_detect' was read (SOL-1)
# Info: Completed transformation 'compile' on solution 'edge_detect.v7': elapsed time 5.62 seconds, memory usage 249532kB, peak memory usage 311244kB (SOL-9)
go allocate
# Info: Starting transformation 'architect' on solution 'edge_detect.v7' (SOL-8)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(34): Loop '/edge_detect/core/SHIFT' is left rolled. (LOOP-4)
# $PROJECT_HOME/../edge_detect_c/edge4.c(105): Loop '/edge_detect/core/ACC_GX:for' is left rolled. (LOOP-4)
# $PROJECT_HOME/../edge_detect_c/edge4.c(104): Loop '/edge_detect/core/ACC_GX' is left rolled. (LOOP-4)
# $PROJECT_HOME/../edge_detect_c/edge4.c(111): Loop '/edge_detect/core/ACC_GY:for' is left rolled. (LOOP-4)
# $PROJECT_HOME/../edge_detect_c/edge4.c(110): Loop '/edge_detect/core/ACC_GY' is left rolled. (LOOP-4)
# $PROJECT_HOME/../edge_detect_c/edge4.c(116): Loop '/edge_detect/core/ACC3' is left rolled. (LOOP-4)
# $PROJECT_HOME/../edge_detect_c/edge4.c(50): Loop '/edge_detect/core/main' is left rolled. (LOOP-4)
# Loop 'ACC_GY' is merged and folded into Loop 'ACC_GX' (LOOP-9)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 632, Real ops = 152, Vars = 50) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 630, Real ops = 152, Vars = 50) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 626, Real ops = 150, Vars = 48) (SOL-10)
# Loop 'ACC_GY:for' is merged and folded into Loop 'ACC_GX:for' (LOOP-9)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 631, Real ops = 151, Vars = 50) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 629, Real ops = 151, Vars = 50) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 625, Real ops = 149, Vars = 48) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 625, Real ops = 149, Vars = 53) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 625, Real ops = 149, Vars = 48) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 625, Real ops = 149, Vars = 53) (SOL-10)
# $PROJECT_HOME/../edge_detect_c/edge4.c(50): I/O-Port inferred - resource 'vin:rsc' (from var: vin) mapped to 'mgc_ioport.mgc_in_wire' (size: 90). (MEM-2)
# $PROJECT_HOME/../edge_detect_c/edge4.c(50): I/O-Port inferred - resource 'vout:rsc' (from var: vout) mapped to 'mgc_ioport.mgc_out_stdreg' (size: 30). (MEM-2)
# Info: Optimizing partition '/edge_detect': (Total ops = 627, Real ops = 149, Vars = 53) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 627, Real ops = 149, Vars = 48) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 626, Real ops = 149, Vars = 48) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 626, Real ops = 149, Vars = 53) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 681, Real ops = 164, Vars = 70) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 666, Real ops = 168, Vars = 79) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 665, Real ops = 167, Vars = 57) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 665, Real ops = 167, Vars = 62) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 665, Real ops = 167, Vars = 57) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 665, Real ops = 167, Vars = 62) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 678, Real ops = 168, Vars = 62) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 682, Real ops = 168, Vars = 62) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 676, Real ops = 168, Vars = 62) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 1594, Real ops = 382, Vars = 600) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 822, Real ops = 260, Vars = 116) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 821, Real ops = 260, Vars = 115) (SOL-10)
# Design 'edge_detect' contains '352' real operations. (SOL-11)
# Info: Completed transformation 'architect' on solution 'edge_detect.v7': elapsed time 14.74 seconds, memory usage 251100kB, peak memory usage 311244kB (SOL-9)
# Info: Starting transformation 'allocate' on solution 'edge_detect.v7' (SOL-8)
# Performing concurrent resource allocation and scheduling on '/edge_detect/core' (CRAAS-1)
# Info: Select qualified components for data operations ... (CRAAS-3)
# Info: Apply resource constraints on data operations ... (CRAAS-4)
# $PROJECT_HOME/../edge_detect_c/edge4.c(50): Prescheduled LOOP 'main' (2 c-steps) (SCHD-7)
# $PROJECT_HOME/../edge_detect_c/edge4.c(50): Prescheduled LOOP 'core:rlp' (0 c-steps) (SCHD-7)
# $PROJECT_HOME/../edge_detect_c/edge4.c(50): Prescheduled SEQUENTIAL 'core' (total length 2 c-steps) (SCHD-8)
# Info: Initial schedule of SEQUENTIAL 'core': Latency = 15, Area (Datapath, Register, Total) = 6387.40, 0.00, 6387.40 (CRAAS-11)
# At least one feasible schedule exists. (CRAAS-9)
# Info: Optimized LOOP 'main': Latency = 15, Area (Datapath, Register, Total) = 6349.10, 0.00, 6349.10 (CRAAS-10)
# Info: Optimized LOOP 'main': Latency = 15, Area (Datapath, Register, Total) = 6310.80, 0.00, 6310.80 (CRAAS-10)
# Info: Optimized LOOP 'main': Latency = 15, Area (Datapath, Register, Total) = 6299.65, 0.00, 6299.65 (CRAAS-10)
# Info: Optimized LOOP 'main': Latency = 15, Area (Datapath, Register, Total) = 6290.03, 0.00, 6290.03 (CRAAS-10)
# Info: Optimized LOOP 'main': Latency = 15, Area (Datapath, Register, Total) = 6280.34, 0.00, 6280.34 (CRAAS-10)
# Info: Optimized LOOP 'main': Latency = 15, Area (Datapath, Register, Total) = 6270.51, 0.00, 6270.51 (CRAAS-10)
# Info: Optimized LOOP 'main': Latency = 15, Area (Datapath, Register, Total) = 6260.74, 0.00, 6260.74 (CRAAS-10)
# Info: Optimized LOOP 'main': Latency = 15, Area (Datapath, Register, Total) = 6259.35, 0.00, 6259.35 (CRAAS-10)
# Info: Optimized LOOP 'main': Latency = 15, Area (Datapath, Register, Total) = 6244.41, 0.00, 6244.41 (CRAAS-10)
# Info: Optimized LOOP 'main': Latency = 15, Area (Datapath, Register, Total) = 6242.20, 0.00, 6242.20 (CRAAS-10)
# Info: Final schedule of SEQUENTIAL 'core': Latency = 15, Area (Datapath, Register, Total) = 6242.20, 0.00, 6242.20 (CRAAS-12)
# Resource allocation and scheduling done. (CRAAS-2)
# Netlist written to file 'schedule.gnt' (NET-4)
# Info: Completed transformation 'allocate' on solution 'edge_detect.v7': elapsed time 2.84 seconds, memory usage 251100kB, peak memory usage 311244kB (SOL-9)
go extract
# Info: Starting transformation 'schedule' on solution 'edge_detect.v7' (SOL-8)
# Performing concurrent resource allocation and scheduling on '/edge_detect/core' (CRAAS-1)
# Warning: Cannot build distributed pipeline in process 'core' because of missing handshake for resource 'vout:rsc' (SCHD-15)
# Global signal 'vin:rsc.z' added to design 'edge_detect' for component 'vin:rsc:mgc_in_wire' (LIB-3)
# Global signal 'vout:rsc.z' added to design 'edge_detect' for component 'vout:rsc:mgc_out_stdreg' (LIB-3)
# Info: Optimizing partition '/edge_detect': (Total ops = 1117, Real ops = 353, Vars = 154) (SOL-10)
# Info: Optimizing partition '/edge_detect/edge_detect:core': (Total ops = 1107, Real ops = 352, Vars = 146) (SOL-10)
# Info: Optimizing partition '/edge_detect/edge_detect:core/core': (Total ops = 1098, Real ops = 352, Vars = 146) (SOL-10)
# Info: Optimizing partition '/edge_detect/edge_detect:core/core': (Total ops = 1030, Real ops = 356, Vars = 118) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 1044, Real ops = 356, Vars = 130) (SOL-10)
# Info: Optimizing partition '/edge_detect/edge_detect:core': (Total ops = 1035, Real ops = 356, Vars = 123) (SOL-10)
# Info: Optimizing partition '/edge_detect/edge_detect:core/core': (Total ops = 1030, Real ops = 356, Vars = 118) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 1044, Real ops = 356, Vars = 130) (SOL-10)
# Info: Optimizing partition '/edge_detect/edge_detect:core': (Total ops = 1035, Real ops = 356, Vars = 123) (SOL-10)
# Report written to file 'cycle.rpt'
# Netlist written to file 'cycle.v' (NET-4)
# Info: Completed transformation 'schedule' on solution 'edge_detect.v7': elapsed time 3.79 seconds, memory usage 261256kB, peak memory usage 311244kB (SOL-9)
# Info: Starting transformation 'dpfsm' on solution 'edge_detect.v7' (SOL-8)
# Performing FSM extraction... (FSM-1)
# Info: Optimizing partition '/edge_detect': (Total ops = 1371, Real ops = 401, Vars = 1058) (SOL-10)
# Info: Optimizing partition '/edge_detect/edge_detect:core': (Total ops = 1362, Real ops = 401, Vars = 1051) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 1591, Real ops = 395, Vars = 120) (SOL-10)
# Info: Optimizing partition '/edge_detect/edge_detect:core': (Total ops = 1582, Real ops = 395, Vars = 113) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 996, Real ops = 388, Vars = 118) (SOL-10)
# Info: Optimizing partition '/edge_detect/edge_detect:core': (Total ops = 987, Real ops = 388, Vars = 111) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 994, Real ops = 386, Vars = 118) (SOL-10)
# Info: Optimizing partition '/edge_detect/edge_detect:core': (Total ops = 985, Real ops = 386, Vars = 111) (SOL-10)
# Info: Optimizing partition '/edge_detect/edge_detect:core': (Total ops = 985, Real ops = 386, Vars = 111) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 994, Real ops = 386, Vars = 118) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 994, Real ops = 386, Vars = 118) (SOL-10)
# Info: Optimizing partition '/edge_detect/edge_detect:core': (Total ops = 985, Real ops = 386, Vars = 111) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 1087, Real ops = 464, Vars = 223) (SOL-10)
# Info: Optimizing partition '/edge_detect/edge_detect:core': (Total ops = 1078, Real ops = 464, Vars = 216) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 1028, Real ops = 416, Vars = 138) (SOL-10)
# Info: Optimizing partition '/edge_detect/edge_detect:core': (Total ops = 1019, Real ops = 416, Vars = 131) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 1020, Real ops = 410, Vars = 131) (SOL-10)
# Info: Optimizing partition '/edge_detect/edge_detect:core': (Total ops = 1011, Real ops = 410, Vars = 124) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 1012, Real ops = 403, Vars = 123) (SOL-10)
# Info: Optimizing partition '/edge_detect/edge_detect:core': (Total ops = 1003, Real ops = 403, Vars = 116) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 1011, Real ops = 402, Vars = 123) (SOL-10)
# Info: Optimizing partition '/edge_detect/edge_detect:core': (Total ops = 1002, Real ops = 402, Vars = 116) (SOL-10)
# Info: Completed transformation 'dpfsm' on solution 'edge_detect.v7': elapsed time 3.01 seconds, memory usage 261644kB, peak memory usage 311244kB (SOL-9)
# Info: Starting transformation 'extract' on solution 'edge_detect.v7' (SOL-8)
# Warning: Reassigned operation FRAME:acc#21:mgc_Altera-Cyclone-III-6_beh_psr.mgc_add(6,0,6,0,7) to mgc_Altera-Cyclone-III-6_beh_psr.mgc_add(5,0,4,0,5) (ASG-1)
# Warning: Reassigned operation ACC3:acc:mgc_Altera-Cyclone-III-6_beh_psr.mgc_add(3,0,3,0,3) to mgc_Altera-Cyclone-III-6_beh_psr.mgc_add(2,0,1,0,2) (ASG-1)
# Warning: Reassigned operation ACC_GX:for:acc:mgc_Altera-Cyclone-III-6_beh_psr.mgc_add(3,0,3,0,3) to mgc_Altera-Cyclone-III-6_beh_psr.mgc_add(2,0,1,0,2) (ASG-1)
# Warning: Reassigned operation ACC_GY:for:acc:mgc_Altera-Cyclone-III-6_beh_psr.mgc_add(3,0,3,0,3) to mgc_Altera-Cyclone-III-6_beh_psr.mgc_add(2,0,1,0,2) (ASG-1)
# Warning: Reassigned operation ACC_GX:acc:mgc_Altera-Cyclone-III-6_beh_psr.mgc_add(3,0,3,0,3) to mgc_Altera-Cyclone-III-6_beh_psr.mgc_add(2,0,1,0,2) (ASG-1)
# Warning: Reassigned operation ACC_GY:acc:mgc_Altera-Cyclone-III-6_beh_psr.mgc_add(3,0,3,0,3) to mgc_Altera-Cyclone-III-6_beh_psr.mgc_add(2,0,1,0,2) (ASG-1)
# Info: Optimizing partition '/edge_detect': (Total ops = 1094, Real ops = 431, Vars = 1087) (SOL-10)
# Info: Optimizing partition '/edge_detect/edge_detect:core': (Total ops = 1085, Real ops = 431, Vars = 1080) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 1000, Real ops = 393, Vars = 124) (SOL-10)
# Info: Optimizing partition '/edge_detect/edge_detect:core': (Total ops = 991, Real ops = 393, Vars = 117) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 1000, Real ops = 393, Vars = 124) (SOL-10)
# Info: Optimizing partition '/edge_detect/edge_detect:core': (Total ops = 991, Real ops = 393, Vars = 117) (SOL-10)
# Info: Optimizing partition '/edge_detect/edge_detect:core': (Total ops = 991, Real ops = 393, Vars = 117) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 1000, Real ops = 393, Vars = 124) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 1000, Real ops = 393, Vars = 124) (SOL-10)
# Info: Optimizing partition '/edge_detect/edge_detect:core': (Total ops = 991, Real ops = 393, Vars = 117) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 1000, Real ops = 393, Vars = 124) (SOL-10)
# Info: Optimizing partition '/edge_detect/edge_detect:core': (Total ops = 991, Real ops = 393, Vars = 117) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 1095, Real ops = 423, Vars = 1088) (SOL-10)
# Info: Optimizing partition '/edge_detect/edge_detect:core': (Total ops = 1086, Real ops = 423, Vars = 1081) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 1095, Real ops = 423, Vars = 1088) (SOL-10)
# Info: Optimizing partition '/edge_detect/edge_detect:core': (Total ops = 1086, Real ops = 423, Vars = 1081) (SOL-10)
# Netlist written to file 'schematic.nlv' (NET-4)
# Info: Optimizing partition '/edge_detect': (Total ops = 1095, Real ops = 423, Vars = 1088) (SOL-10)
# Info: Optimizing partition '/edge_detect/edge_detect:core': (Total ops = 1086, Real ops = 423, Vars = 1081) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 994, Real ops = 393, Vars = 124) (SOL-10)
# Info: Optimizing partition '/edge_detect/edge_detect:core': (Total ops = 985, Real ops = 393, Vars = 117) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 994, Real ops = 393, Vars = 124) (SOL-10)
# Info: Optimizing partition '/edge_detect/edge_detect:core': (Total ops = 985, Real ops = 393, Vars = 117) (SOL-10)
# Report written to file 'rtl.rpt'
# Netlist written to file 'rtl.v' (NET-4)
# generate concat
# order file name is: rtl.v_order.txt
# Add dependent file: C:/PROGRA~1/CALYPT~1/CATAPU~1.126/Mgc_home/pkgs/hls_pkgs/mgc_comps_src/mgc_shift_r_beh_v2.v
# Add dependent file: ./rtl_mgc_ioport.v
# Add dependent file: ./rtl_mgc_ioport_v2001.v
# Add dependent file: ./rtl.v
# Finished writing concatenated file: C:/fpga-catapult-c-spring/Edge3/Edge3/edge_detect.v7/concat_rtl.v
# Synthesis timing script written to file './rtl.v.psr_timing'
# IO timing constraints written to synthesis script file
# Synthesis script written to file 'rtl.v.psr'
# Info: Completed transformation 'extract' on solution 'edge_detect.v7': elapsed time 8.33 seconds, memory usage 262784kB, peak memory usage 311244kB (SOL-9)
go new
solution file remove {$PROJECT_HOME/../edge_detect_c/edge4.c}
# Info: Branching solution 'solution.v1' at state 'new' (PRJ-2)
solution file add ../edge_detect_c/edge5.c
# /INPUTFILES/4
go analyze
# Info: Starting transformation 'analyze' on solution 'solution.v1' (SOL-8)
# Front End called with arguments: -- {C:\fpga-catapult-c-spring\edge_detect_c\edge5.c} {C:\fpga-catapult-c-spring\edge_detect_c\shift_class.h} {C:\fpga-catapult-c-spring\edge_detect_c\edge.h} (CIN-69)
# Edison Design Group C++/C Front End - Version 3.10.1 (CIN-1)
# Error: $PROJECT_HOME/../edge_detect_c/edge5.c(38): $PROJECT_HOME/../edge_detect_c/edge5.c(38): could not open source file "blur.h" (CRD-5)
# Error: Compilation aborted (CIN-5)
# Error: go analyze: Failed analyze
go analyze
# Info: Starting transformation 'analyze' on solution 'solution.v1' (SOL-8)
# Front End called with arguments: -- {C:\fpga-catapult-c-spring\edge_detect_c\edge5.c} {C:\fpga-catapult-c-spring\edge_detect_c\shift_class.h} {C:\fpga-catapult-c-spring\edge_detect_c\edge.h} (CIN-69)
# Edison Design Group C++/C Front End - Version 3.10.1 (CIN-1)
# Error: $PROJECT_HOME/../edge_detect_c/edge5.c(38): $PROJECT_HOME/../edge_detect_c/edge5.c(38): could not open source file "blur.h" (CRD-5)
# Error: Compilation aborted (CIN-5)
# Error: go analyze: Failed analyze
# File '$PROJECT_HOME/../edge_detect_c/edge5.c' saved
go analyze
# Info: Starting transformation 'analyze' on solution 'solution.v1' (SOL-8)
# Front End called with arguments: -- {C:\fpga-catapult-c-spring\edge_detect_c\edge5.c} {C:\fpga-catapult-c-spring\edge_detect_c\shift_class.h} {C:\fpga-catapult-c-spring\edge_detect_c\edge.h} (CIN-69)
# Edison Design Group C++/C Front End - Version 3.10.1 (CIN-1)
# Warning: $PROJECT_HOME/../edge_detect_c/edge5.c(289): $PROJECT_HOME/../edge_detect_c/edge5.c(289): last line of file ends without a newline (CRD-1)
# $PROJECT_HOME/../edge_detect_c/edge5.c(43): Pragma 'hls_design<top>' detected on routine 'mean_vga' (CIN-6)
# Source file analysis completed (CIN-68)
# Info: Completed transformation 'analyze' on solution 'solution.v1': elapsed time 1.95 seconds, memory usage 272812kB, peak memory usage 332480kB (SOL-9)
go allocate
# Info: Starting transformation 'compile' on solution 'solution.v1' (SOL-8)
# Generating synthesis internal form... (CIN-3)
# Error: No design detected Design hierarchy must be selected interactively or using pragma 'hls_design top' (CIN-21)
# Error: Compilation aborted (CIN-5)
# Error: go compile: Failed compile
# File '$PROJECT_HOME/../edge_detect_c/edge5.c' saved
# Input file has changed
go new
solution file set {$PROJECT_HOME/../edge_detect_c/edge5.c} -updated
# Info: Branching solution 'solution.v2' at state 'new' (PRJ-2)
go analyze
# Info: Starting transformation 'analyze' on solution 'solution.v2' (SOL-8)
# Front End called with arguments: -- {C:\fpga-catapult-c-spring\edge_detect_c\edge5.c} {C:\fpga-catapult-c-spring\edge_detect_c\shift_class.h} {C:\fpga-catapult-c-spring\edge_detect_c\edge.h} (CIN-69)
# Edison Design Group C++/C Front End - Version 3.10.1 (CIN-1)
# Warning: $PROJECT_HOME/../edge_detect_c/edge5.c(294): $PROJECT_HOME/../edge_detect_c/edge5.c(294): last line of file ends without a newline (CRD-1)
# $PROJECT_HOME/../edge_detect_c/edge5.c(47): Pragma 'hls_design<top>' detected on routine 'edge_detect' (CIN-6)
# Source file analysis completed (CIN-68)
# Info: Completed transformation 'analyze' on solution 'solution.v2': elapsed time 1.93 seconds, memory usage 277104kB, peak memory usage 333224kB (SOL-9)
go compile
# Info: Starting transformation 'compile' on solution 'solution.v2' (SOL-8)
# Generating synthesis internal form... (CIN-3)
# $PROJECT_HOME/../edge_detect_c/edge5.c(49): Found top design routine 'edge_detect' specified by directive (CIN-52)
# $PROJECT_HOME/../edge_detect_c/edge5.c(49): Synthesizing routine 'edge_detect' (CIN-13)
# $PROJECT_HOME/../edge_detect_c/edge5.c(49): Inlining routine 'edge_detect' (CIN-14)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(13): Inlining member function 'shift_class<ac_int<90, false>, 3>::shift_class' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(32): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator<<' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(48): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(48): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(48): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(48): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(48): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(48): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(48): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(48): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(48): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(48): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(48): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(48): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(48): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(48): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(48): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(48): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(48): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(48): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(48): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(48): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(48): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(48): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(48): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(48): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(48): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(48): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(48): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/edge5.c(269): Inlining routine 'abs' (CIN-14)
# $PROJECT_HOME/../edge_detect_c/edge5.c(269): Inlining routine 'abs' (CIN-14)
# $PROJECT_HOME/../edge_detect_c/edge5.c(269): Inlining routine 'abs' (CIN-14)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(48): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(48): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(48): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(48): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(48): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(48): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(48): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(48): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(48): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(48): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(48): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(48): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(48): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(48): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(48): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(48): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(48): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(48): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(48): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(48): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(48): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(48): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(48): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(48): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(48): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(48): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(48): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/edge5.c(269): Inlining routine 'abs' (CIN-14)
# $PROJECT_HOME/../edge_detect_c/edge5.c(269): Inlining routine 'abs' (CIN-14)
# $PROJECT_HOME/../edge_detect_c/edge5.c(269): Inlining routine 'abs' (CIN-14)
# $PROJECT_HOME/../edge_detect_c/edge5.c(49): Optimizing block '/edge_detect' ... (CIN-4)
# $PROJECT_HOME/../edge_detect_c/edge5.c(49): Inout port 'vin' is only used as an input. (OPT-10)
# $PROJECT_HOME/../edge_detect_c/edge5.c(49): Inout port 'vout' is only used as an output. (OPT-11)
# Info: Optimizing partition '/edge_detect': (Total ops = 978, Real ops = 197, Vars = 284) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 978, Real ops = 197, Vars = 282) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 978, Real ops = 197, Vars = 282) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 978, Real ops = 197, Vars = 284) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 978, Real ops = 197, Vars = 284) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 978, Real ops = 197, Vars = 282) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 780, Real ops = 188, Vars = 201) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 736, Real ops = 188, Vars = 200) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 736, Real ops = 188, Vars = 200) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 736, Real ops = 188, Vars = 202) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 736, Real ops = 188, Vars = 202) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 698, Real ops = 188, Vars = 300) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 821, Real ops = 154, Vars = 41) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 821, Real ops = 154, Vars = 43) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 821, Real ops = 154, Vars = 41) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 812, Real ops = 154, Vars = 41) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 812, Real ops = 154, Vars = 43) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 812, Real ops = 154, Vars = 41) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 812, Real ops = 154, Vars = 43) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 812, Real ops = 154, Vars = 43) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 812, Real ops = 154, Vars = 41) (SOL-10)
# $PROJECT_HOME/../edge_detect_c/edge5.c(65): Loop '/edge_detect/core/RESET' iterated at most 3 times. (LOOP-2)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(34): Loop '/edge_detect/core/SHIFT' iterated at most 3 times. (LOOP-2)
# $PROJECT_HOME/../edge_detect_c/edge5.c(74): Loop '/edge_detect/core/ACC1' iterated at most 3 times. (LOOP-2)
# $PROJECT_HOME/../edge_detect_c/edge5.c(119): Loop '/edge_detect/core/ACC2' iterated at most 3 times. (LOOP-2)
# $PROJECT_HOME/../edge_detect_c/edge5.c(151): Loop '/edge_detect/core/RESET1' iterated at most 3 times. (LOOP-2)
# $PROJECT_HOME/../edge_detect_c/edge5.c(157): Loop '/edge_detect/core/ACC3' iterated at most 3 times. (LOOP-2)
# $PROJECT_HOME/../edge_detect_c/edge5.c(201): Loop '/edge_detect/core/ACC4' iterated at most 3 times. (LOOP-2)
# $PROJECT_HOME/../edge_detect_c/edge5.c(60): Loop '/edge_detect/core/FRAME' iterated at most 1 times. (LOOP-2)
# $PROJECT_HOME/../edge_detect_c/edge5.c(66): Detected constant initialization of array 'rx', optimizing loop 'RESET' (LOOP-12)
# $PROJECT_HOME/../edge_detect_c/edge5.c(67): Detected constant initialization of array 'gx', optimizing loop 'RESET' (LOOP-12)
# $PROJECT_HOME/../edge_detect_c/edge5.c(68): Detected constant initialization of array 'bx', optimizing loop 'RESET' (LOOP-12)
# $PROJECT_HOME/../edge_detect_c/edge5.c(152): Detected constant initialization of array 'ry', optimizing loop 'RESET1' (LOOP-12)
# $PROJECT_HOME/../edge_detect_c/edge5.c(153): Detected constant initialization of array 'gy', optimizing loop 'RESET1' (LOOP-12)
# $PROJECT_HOME/../edge_detect_c/edge5.c(154): Detected constant initialization of array 'by', optimizing loop 'RESET1' (LOOP-12)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 541, Real ops = 144, Vars = 40) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 434, Real ops = 125, Vars = 38) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 431, Real ops = 125, Vars = 38) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 431, Real ops = 125, Vars = 40) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 425, Real ops = 125, Vars = 43) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 421, Real ops = 125, Vars = 38) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 421, Real ops = 125, Vars = 40) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 421, Real ops = 125, Vars = 38) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 421, Real ops = 125, Vars = 40) (SOL-10)
# Design 'edge_detect' was read (SOL-1)
# Info: Completed transformation 'compile' on solution 'edge_detect.v8': elapsed time 6.35 seconds, memory usage 273416kB, peak memory usage 333224kB (SOL-9)
go allocate
# Info: Starting transformation 'architect' on solution 'edge_detect.v8' (SOL-8)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(34): Loop '/edge_detect/core/SHIFT' is left rolled. (LOOP-4)
# $PROJECT_HOME/../edge_detect_c/edge5.c(74): Loop '/edge_detect/core/ACC1' is left rolled. (LOOP-4)
# $PROJECT_HOME/../edge_detect_c/edge5.c(119): Loop '/edge_detect/core/ACC2' is left rolled. (LOOP-4)
# $PROJECT_HOME/../edge_detect_c/edge5.c(157): Loop '/edge_detect/core/ACC3' is left rolled. (LOOP-4)
# $PROJECT_HOME/../edge_detect_c/edge5.c(201): Loop '/edge_detect/core/ACC4' is left rolled. (LOOP-4)
# $PROJECT_HOME/../edge_detect_c/edge5.c(49): Loop '/edge_detect/core/main' is left rolled. (LOOP-4)
# Loop 'ACC3' is merged and folded into Loop 'ACC2' (LOOP-9)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 427, Real ops = 127, Vars = 40) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 425, Real ops = 127, Vars = 40) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 421, Real ops = 125, Vars = 38) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 421, Real ops = 125, Vars = 43) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 421, Real ops = 125, Vars = 38) (SOL-10)
# $PROJECT_HOME/../edge_detect_c/edge5.c(49): I/O-Port inferred - resource 'vin:rsc' (from var: vin) mapped to 'mgc_ioport.mgc_in_wire' (size: 90). (MEM-2)
# $PROJECT_HOME/../edge_detect_c/edge5.c(49): I/O-Port inferred - resource 'vout:rsc' (from var: vout) mapped to 'mgc_ioport.mgc_out_stdreg' (size: 30). (MEM-2)
# Info: Optimizing partition '/edge_detect': (Total ops = 423, Real ops = 125, Vars = 43) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 423, Real ops = 125, Vars = 38) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 422, Real ops = 125, Vars = 38) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 422, Real ops = 125, Vars = 43) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 415, Real ops = 128, Vars = 60) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 406, Real ops = 128, Vars = 63) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 382, Real ops = 127, Vars = 50) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 382, Real ops = 127, Vars = 55) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 382, Real ops = 127, Vars = 50) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 382, Real ops = 127, Vars = 55) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 392, Real ops = 127, Vars = 54) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 389, Real ops = 127, Vars = 54) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 1356, Real ops = 379, Vars = 615) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 661, Real ops = 279, Vars = 170) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 660, Real ops = 279, Vars = 163) (SOL-10)
# Design 'edge_detect' contains '301' real operations. (SOL-11)
# Info: Completed transformation 'architect' on solution 'edge_detect.v8': elapsed time 15.62 seconds, memory usage 273636kB, peak memory usage 333224kB (SOL-9)
# Info: Starting transformation 'allocate' on solution 'edge_detect.v8' (SOL-8)
# Performing concurrent resource allocation and scheduling on '/edge_detect/core' (CRAAS-1)
# Info: Select qualified components for data operations ... (CRAAS-3)
# Info: Apply resource constraints on data operations ... (CRAAS-4)
# $PROJECT_HOME/../edge_detect_c/edge5.c(49): Prescheduled LOOP 'main' (2 c-steps) (SCHD-7)
# $PROJECT_HOME/../edge_detect_c/edge5.c(49): Prescheduled LOOP 'core:rlp' (0 c-steps) (SCHD-7)
# $PROJECT_HOME/../edge_detect_c/edge5.c(49): Prescheduled SEQUENTIAL 'core' (total length 2 c-steps) (SCHD-8)
# Info: Initial schedule of SEQUENTIAL 'core': Latency = 12, Area (Datapath, Register, Total) = 3092.68, 0.00, 3092.68 (CRAAS-11)
# At least one feasible schedule exists. (CRAAS-9)
# Info: Optimized LOOP 'main': Latency = 12, Area (Datapath, Register, Total) = 3090.41, 0.00, 3090.41 (CRAAS-10)
# Info: Optimized LOOP 'main': Latency = 12, Area (Datapath, Register, Total) = 3067.00, 0.00, 3067.00 (CRAAS-10)
# Info: Final schedule of SEQUENTIAL 'core': Latency = 12, Area (Datapath, Register, Total) = 3067.00, 0.00, 3067.00 (CRAAS-12)
# Resource allocation and scheduling done. (CRAAS-2)
# Netlist written to file 'schedule.gnt' (NET-4)
# Info: Completed transformation 'allocate' on solution 'edge_detect.v8': elapsed time 1.92 seconds, memory usage 274480kB, peak memory usage 333224kB (SOL-9)
go extract
# Info: Starting transformation 'schedule' on solution 'edge_detect.v8' (SOL-8)
# Performing concurrent resource allocation and scheduling on '/edge_detect/core' (CRAAS-1)
# Warning: Cannot build distributed pipeline in process 'core' because of missing handshake for resource 'vout:rsc' (SCHD-15)
# Global signal 'vin:rsc.z' added to design 'edge_detect' for component 'vin:rsc:mgc_in_wire' (LIB-3)
# Global signal 'vout:rsc.z' added to design 'edge_detect' for component 'vout:rsc:mgc_out_stdreg' (LIB-3)
# Info: Optimizing partition '/edge_detect': (Total ops = 841, Real ops = 302, Vars = 193) (SOL-10)
# Info: Optimizing partition '/edge_detect/edge_detect:core': (Total ops = 831, Real ops = 301, Vars = 185) (SOL-10)
# Info: Optimizing partition '/edge_detect/edge_detect:core/core': (Total ops = 831, Real ops = 301, Vars = 194) (SOL-10)
# Info: Optimizing partition '/edge_detect/edge_detect:core/core': (Total ops = 783, Real ops = 304, Vars = 160) (SOL-10)
# Info: Optimizing partition '/edge_detect/edge_detect:core/core': (Total ops = 778, Real ops = 299, Vars = 155) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 792, Real ops = 299, Vars = 167) (SOL-10)
# Info: Optimizing partition '/edge_detect/edge_detect:core': (Total ops = 783, Real ops = 299, Vars = 160) (SOL-10)
# Info: Optimizing partition '/edge_detect/edge_detect:core/core': (Total ops = 763, Real ops = 305, Vars = 185) (SOL-10)
# Info: Optimizing partition '/edge_detect/edge_detect:core/core': (Total ops = 767, Real ops = 315, Vars = 162) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 781, Real ops = 315, Vars = 174) (SOL-10)
# Info: Optimizing partition '/edge_detect/edge_detect:core': (Total ops = 772, Real ops = 315, Vars = 167) (SOL-10)
# Info: Optimizing partition '/edge_detect/edge_detect:core/core': (Total ops = 767, Real ops = 315, Vars = 162) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 781, Real ops = 315, Vars = 174) (SOL-10)
# Info: Optimizing partition '/edge_detect/edge_detect:core': (Total ops = 772, Real ops = 315, Vars = 167) (SOL-10)
# Report written to file 'cycle.rpt'
# Netlist written to file 'cycle.v' (NET-4)
# Info: Completed transformation 'schedule' on solution 'edge_detect.v8': elapsed time 4.66 seconds, memory usage 286416kB, peak memory usage 333224kB (SOL-9)
# Info: Starting transformation 'dpfsm' on solution 'edge_detect.v8' (SOL-8)
# Performing FSM extraction... (FSM-1)
# Info: Optimizing partition '/edge_detect': (Total ops = 929, Real ops = 353, Vars = 888) (SOL-10)
# Info: Optimizing partition '/edge_detect/edge_detect:core': (Total ops = 920, Real ops = 353, Vars = 881) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 1036, Real ops = 368, Vars = 140) (SOL-10)
# Info: Optimizing partition '/edge_detect/edge_detect:core': (Total ops = 1027, Real ops = 368, Vars = 133) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 676, Real ops = 361, Vars = 139) (SOL-10)
# Info: Optimizing partition '/edge_detect/edge_detect:core': (Total ops = 667, Real ops = 361, Vars = 132) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 673, Real ops = 358, Vars = 139) (SOL-10)
# Info: Optimizing partition '/edge_detect/edge_detect:core': (Total ops = 664, Real ops = 358, Vars = 132) (SOL-10)
# Info: Optimizing partition '/edge_detect/edge_detect:core': (Total ops = 664, Real ops = 358, Vars = 132) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 673, Real ops = 358, Vars = 139) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 673, Real ops = 358, Vars = 139) (SOL-10)
# Info: Optimizing partition '/edge_detect/edge_detect:core': (Total ops = 664, Real ops = 358, Vars = 132) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 821, Real ops = 478, Vars = 319) (SOL-10)
# Info: Optimizing partition '/edge_detect/edge_detect:core': (Total ops = 812, Real ops = 478, Vars = 312) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 743, Real ops = 424, Vars = 184) (SOL-10)
# Info: Optimizing partition '/edge_detect/edge_detect:core': (Total ops = 734, Real ops = 424, Vars = 177) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 737, Real ops = 407, Vars = 170) (SOL-10)
# Info: Optimizing partition '/edge_detect/edge_detect:core': (Total ops = 728, Real ops = 407, Vars = 163) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 726, Real ops = 397, Vars = 151) (SOL-10)
# Info: Optimizing partition '/edge_detect/edge_detect:core': (Total ops = 717, Real ops = 397, Vars = 144) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 715, Real ops = 386, Vars = 148) (SOL-10)
# Info: Optimizing partition '/edge_detect/edge_detect:core': (Total ops = 706, Real ops = 386, Vars = 141) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 713, Real ops = 384, Vars = 152) (SOL-10)
# Info: Optimizing partition '/edge_detect/edge_detect:core': (Total ops = 704, Real ops = 384, Vars = 145) (SOL-10)
# Info: Completed transformation 'dpfsm' on solution 'edge_detect.v8': elapsed time 2.21 seconds, memory usage 286416kB, peak memory usage 333224kB (SOL-9)
# Info: Starting transformation 'extract' on solution 'edge_detect.v8' (SOL-8)
# Warning: Reassigned operation ACC4:acc:mgc_Altera-Cyclone-III-6_beh_psr.mgc_add(3,0,3,1,4) to mgc_Altera-Cyclone-III-6_beh_psr.mgc_add(2,0,1,0,2) (ASG-1)
# Warning: Reassigned operation ACC2:acc:mgc_Altera-Cyclone-III-6_beh_psr.mgc_add(3,0,3,1,4) to mgc_Altera-Cyclone-III-6_beh_psr.mgc_add(2,0,1,0,2) (ASG-1)
# Warning: Reassigned operation ACC3:acc:mgc_Altera-Cyclone-III-6_beh_psr.mgc_add(3,0,3,1,4) to mgc_Altera-Cyclone-III-6_beh_psr.mgc_add(2,0,1,0,2) (ASG-1)
# Warning: Reassigned operation ACC1:acc:mgc_Altera-Cyclone-III-6_beh_psr.mgc_add(3,0,3,1,4) to mgc_Altera-Cyclone-III-6_beh_psr.mgc_add(2,0,1,0,2) (ASG-1)
# Warning: Reassigned operation FRAME:intensity:acc:mgc_Altera-Cyclone-III-6_beh_psr.mgc_add(11,0,10,1,12) to mgc_Altera-Cyclone-III-6_beh_psr.mgc_add(10,0,10,1,12) (ASG-1)
# Info: Optimizing partition '/edge_detect': (Total ops = 771, Real ops = 410, Vars = 768) (SOL-10)
# Info: Optimizing partition '/edge_detect/edge_detect:core': (Total ops = 762, Real ops = 410, Vars = 761) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 706, Real ops = 377, Vars = 151) (SOL-10)
# Info: Optimizing partition '/edge_detect/edge_detect:core': (Total ops = 697, Real ops = 377, Vars = 144) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 706, Real ops = 377, Vars = 151) (SOL-10)
# Info: Optimizing partition '/edge_detect/edge_detect:core': (Total ops = 697, Real ops = 377, Vars = 144) (SOL-10)
# Info: Optimizing partition '/edge_detect/edge_detect:core': (Total ops = 697, Real ops = 377, Vars = 144) (SOL-10)
# Info: Optimizing partition '/edge_detect/edge_detect:core': (Total ops = 697, Real ops = 377, Vars = 144) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 706, Real ops = 377, Vars = 151) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 706, Real ops = 377, Vars = 151) (SOL-10)
# Info: Optimizing partition '/edge_detect/edge_detect:core': (Total ops = 697, Real ops = 377, Vars = 144) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 706, Real ops = 377, Vars = 151) (SOL-10)
# Info: Optimizing partition '/edge_detect/edge_detect:core': (Total ops = 697, Real ops = 377, Vars = 144) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 766, Real ops = 404, Vars = 763) (SOL-10)
# Info: Optimizing partition '/edge_detect/edge_detect:core': (Total ops = 757, Real ops = 404, Vars = 756) (SOL-10)
# Netlist written to file 'schematic.nlv' (NET-4)
# Info: Optimizing partition '/edge_detect': (Total ops = 766, Real ops = 404, Vars = 763) (SOL-10)
# Info: Optimizing partition '/edge_detect/edge_detect:core': (Total ops = 757, Real ops = 404, Vars = 756) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 703, Real ops = 377, Vars = 151) (SOL-10)
# Info: Optimizing partition '/edge_detect/edge_detect:core': (Total ops = 694, Real ops = 377, Vars = 144) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 703, Real ops = 377, Vars = 151) (SOL-10)
# Info: Optimizing partition '/edge_detect/edge_detect:core': (Total ops = 694, Real ops = 377, Vars = 144) (SOL-10)
# Report written to file 'rtl.rpt'
# Netlist written to file 'rtl.v' (NET-4)
# generate concat
# order file name is: rtl.v_order.txt
# Add dependent file: ./rtl_mgc_ioport.v
# Add dependent file: ./rtl_mgc_ioport_v2001.v
# Add dependent file: ./rtl.v
# Finished writing concatenated file: C:/fpga-catapult-c-spring/Edge3/Edge3/edge_detect.v8/concat_rtl.v
# Synthesis timing script written to file './rtl.v.psr_timing'
# IO timing constraints written to synthesis script file
# Synthesis script written to file 'rtl.v.psr'
# Info: Completed transformation 'extract' on solution 'edge_detect.v8': elapsed time 8.11 seconds, memory usage 288488kB, peak memory usage 333224kB (SOL-9)
go analyze
directive set -CLOCKS {clk {-CLOCK_PERIOD 20.0 -CLOCK_EDGE rising -CLOCK_HIGH_TIME 10.00 -CLOCK_OFFSET 0.000000 -CLOCK_UNCERTAINTY 0.0 -RESET_KIND async -RESET_SYNC_NAME rst -RESET_SYNC_ACTIVE high -RESET_ASYNC_NAME arst_n -RESET_ASYNC_ACTIVE low -ENABLE_NAME en -ENABLE_ACTIVE high}}
# Info: Branching solution 'solution.v2' at state 'analyze' (PRJ-2)
# /CLOCKS {clk {-CLOCK_PERIOD 20.0 -CLOCK_EDGE rising -CLOCK_UNCERTAINTY 0.0 -CLOCK_HIGH_TIME 10.0 -RESET_SYNC_NAME rst -RESET_ASYNC_NAME arst_n -RESET_KIND async -RESET_SYNC_ACTIVE high -RESET_ASYNC_ACTIVE low -ENABLE_NAME en -ENABLE_ACTIVE high}}
go compile
# Info: Starting transformation 'compile' on solution 'solution.v2' (SOL-8)
# Generating synthesis internal form... (CIN-3)
# $PROJECT_HOME/../edge_detect_c/edge5.c(49): Found top design routine 'edge_detect' specified by directive (CIN-52)
# $PROJECT_HOME/../edge_detect_c/edge5.c(49): Synthesizing routine 'edge_detect' (CIN-13)
# $PROJECT_HOME/../edge_detect_c/edge5.c(49): Inlining routine 'edge_detect' (CIN-14)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(13): Inlining member function 'shift_class<ac_int<90, false>, 3>::shift_class' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(32): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator<<' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(48): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(48): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(48): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(48): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(48): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(48): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(48): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(48): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(48): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(48): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(48): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(48): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(48): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(48): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(48): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(48): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(48): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(48): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(48): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(48): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(48): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(48): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(48): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(48): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(48): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(48): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(48): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/edge5.c(269): Inlining routine 'abs' (CIN-14)
# $PROJECT_HOME/../edge_detect_c/edge5.c(269): Inlining routine 'abs' (CIN-14)
# $PROJECT_HOME/../edge_detect_c/edge5.c(269): Inlining routine 'abs' (CIN-14)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(48): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(48): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(48): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(48): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(48): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(48): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(48): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(48): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(48): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(48): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(48): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(48): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(48): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(48): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(48): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(48): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(48): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(48): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(48): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(48): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(48): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(48): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(48): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(48): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(48): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(48): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(48): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/edge5.c(269): Inlining routine 'abs' (CIN-14)
# $PROJECT_HOME/../edge_detect_c/edge5.c(269): Inlining routine 'abs' (CIN-14)
# $PROJECT_HOME/../edge_detect_c/edge5.c(269): Inlining routine 'abs' (CIN-14)
# $PROJECT_HOME/../edge_detect_c/edge5.c(49): Optimizing block '/edge_detect' ... (CIN-4)
# $PROJECT_HOME/../edge_detect_c/edge5.c(49): Inout port 'vin' is only used as an input. (OPT-10)
# $PROJECT_HOME/../edge_detect_c/edge5.c(49): Inout port 'vout' is only used as an output. (OPT-11)
# Info: Optimizing partition '/edge_detect': (Total ops = 978, Real ops = 197, Vars = 284) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 978, Real ops = 197, Vars = 282) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 978, Real ops = 197, Vars = 282) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 978, Real ops = 197, Vars = 284) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 978, Real ops = 197, Vars = 284) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 978, Real ops = 197, Vars = 282) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 780, Real ops = 188, Vars = 201) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 736, Real ops = 188, Vars = 200) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 736, Real ops = 188, Vars = 200) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 736, Real ops = 188, Vars = 202) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 736, Real ops = 188, Vars = 202) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 698, Real ops = 188, Vars = 300) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 821, Real ops = 154, Vars = 41) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 821, Real ops = 154, Vars = 43) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 821, Real ops = 154, Vars = 41) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 812, Real ops = 154, Vars = 41) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 812, Real ops = 154, Vars = 43) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 812, Real ops = 154, Vars = 41) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 812, Real ops = 154, Vars = 43) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 812, Real ops = 154, Vars = 43) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 812, Real ops = 154, Vars = 41) (SOL-10)
# $PROJECT_HOME/../edge_detect_c/edge5.c(65): Loop '/edge_detect/core/RESET' iterated at most 3 times. (LOOP-2)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(34): Loop '/edge_detect/core/SHIFT' iterated at most 3 times. (LOOP-2)
# $PROJECT_HOME/../edge_detect_c/edge5.c(74): Loop '/edge_detect/core/ACC1' iterated at most 3 times. (LOOP-2)
# $PROJECT_HOME/../edge_detect_c/edge5.c(119): Loop '/edge_detect/core/ACC2' iterated at most 3 times. (LOOP-2)
# $PROJECT_HOME/../edge_detect_c/edge5.c(151): Loop '/edge_detect/core/RESET1' iterated at most 3 times. (LOOP-2)
# $PROJECT_HOME/../edge_detect_c/edge5.c(157): Loop '/edge_detect/core/ACC3' iterated at most 3 times. (LOOP-2)
# $PROJECT_HOME/../edge_detect_c/edge5.c(201): Loop '/edge_detect/core/ACC4' iterated at most 3 times. (LOOP-2)
# $PROJECT_HOME/../edge_detect_c/edge5.c(60): Loop '/edge_detect/core/FRAME' iterated at most 1 times. (LOOP-2)
# $PROJECT_HOME/../edge_detect_c/edge5.c(66): Detected constant initialization of array 'rx', optimizing loop 'RESET' (LOOP-12)
# $PROJECT_HOME/../edge_detect_c/edge5.c(67): Detected constant initialization of array 'gx', optimizing loop 'RESET' (LOOP-12)
# $PROJECT_HOME/../edge_detect_c/edge5.c(68): Detected constant initialization of array 'bx', optimizing loop 'RESET' (LOOP-12)
# $PROJECT_HOME/../edge_detect_c/edge5.c(152): Detected constant initialization of array 'ry', optimizing loop 'RESET1' (LOOP-12)
# $PROJECT_HOME/../edge_detect_c/edge5.c(153): Detected constant initialization of array 'gy', optimizing loop 'RESET1' (LOOP-12)
# $PROJECT_HOME/../edge_detect_c/edge5.c(154): Detected constant initialization of array 'by', optimizing loop 'RESET1' (LOOP-12)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 541, Real ops = 144, Vars = 40) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 434, Real ops = 125, Vars = 38) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 431, Real ops = 125, Vars = 38) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 431, Real ops = 125, Vars = 40) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 425, Real ops = 125, Vars = 43) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 421, Real ops = 125, Vars = 38) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 421, Real ops = 125, Vars = 40) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 421, Real ops = 125, Vars = 38) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 421, Real ops = 125, Vars = 40) (SOL-10)
# Design 'edge_detect' was read (SOL-1)
# Info: Completed transformation 'compile' on solution 'edge_detect.v9': elapsed time 7.10 seconds, memory usage 297036kB, peak memory usage 333820kB (SOL-9)
go allocate
# Info: Starting transformation 'architect' on solution 'edge_detect.v9' (SOL-8)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(34): Loop '/edge_detect/core/SHIFT' is left rolled. (LOOP-4)
# $PROJECT_HOME/../edge_detect_c/edge5.c(74): Loop '/edge_detect/core/ACC1' is left rolled. (LOOP-4)
# $PROJECT_HOME/../edge_detect_c/edge5.c(119): Loop '/edge_detect/core/ACC2' is left rolled. (LOOP-4)
# $PROJECT_HOME/../edge_detect_c/edge5.c(157): Loop '/edge_detect/core/ACC3' is left rolled. (LOOP-4)
# $PROJECT_HOME/../edge_detect_c/edge5.c(201): Loop '/edge_detect/core/ACC4' is left rolled. (LOOP-4)
# $PROJECT_HOME/../edge_detect_c/edge5.c(49): Loop '/edge_detect/core/main' is left rolled. (LOOP-4)
# Loop 'ACC3' is merged and folded into Loop 'ACC2' (LOOP-9)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 427, Real ops = 127, Vars = 40) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 425, Real ops = 127, Vars = 40) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 421, Real ops = 125, Vars = 38) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 421, Real ops = 125, Vars = 43) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 421, Real ops = 125, Vars = 38) (SOL-10)
# $PROJECT_HOME/../edge_detect_c/edge5.c(49): I/O-Port inferred - resource 'vin:rsc' (from var: vin) mapped to 'mgc_ioport.mgc_in_wire' (size: 90). (MEM-2)
# $PROJECT_HOME/../edge_detect_c/edge5.c(49): I/O-Port inferred - resource 'vout:rsc' (from var: vout) mapped to 'mgc_ioport.mgc_out_stdreg' (size: 30). (MEM-2)
# Info: Optimizing partition '/edge_detect': (Total ops = 423, Real ops = 125, Vars = 43) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 423, Real ops = 125, Vars = 38) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 422, Real ops = 125, Vars = 38) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 422, Real ops = 125, Vars = 43) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 415, Real ops = 128, Vars = 60) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 406, Real ops = 128, Vars = 63) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 382, Real ops = 127, Vars = 50) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 382, Real ops = 127, Vars = 55) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 382, Real ops = 127, Vars = 50) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 382, Real ops = 127, Vars = 55) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 392, Real ops = 127, Vars = 54) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 389, Real ops = 127, Vars = 54) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 1356, Real ops = 379, Vars = 615) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 661, Real ops = 279, Vars = 170) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 660, Real ops = 279, Vars = 163) (SOL-10)
# Design 'edge_detect' contains '301' real operations. (SOL-11)
# Info: Completed transformation 'architect' on solution 'edge_detect.v9': elapsed time 16.91 seconds, memory usage 298684kB, peak memory usage 333820kB (SOL-9)
# Info: Starting transformation 'allocate' on solution 'edge_detect.v9' (SOL-8)
# Performing concurrent resource allocation and scheduling on '/edge_detect/core' (CRAAS-1)
# Info: Select qualified components for data operations ... (CRAAS-3)
# Info: Apply resource constraints on data operations ... (CRAAS-4)
# $PROJECT_HOME/../edge_detect_c/edge5.c(49): Prescheduled LOOP 'main' (3 c-steps) (SCHD-7)
# $PROJECT_HOME/../edge_detect_c/edge5.c(49): Prescheduled LOOP 'core:rlp' (0 c-steps) (SCHD-7)
# $PROJECT_HOME/../edge_detect_c/edge5.c(49): Prescheduled SEQUENTIAL 'core' (total length 3 c-steps) (SCHD-8)
# Info: Initial schedule of SEQUENTIAL 'core': Latency = 13, Area (Datapath, Register, Total) = 3092.68, 0.00, 3092.68 (CRAAS-11)
# At least one feasible schedule exists. (CRAAS-9)
# Info: Optimized LOOP 'main': Latency = 13, Area (Datapath, Register, Total) = 3090.41, 0.00, 3090.41 (CRAAS-10)
# Info: Optimized LOOP 'main': Latency = 13, Area (Datapath, Register, Total) = 3067.00, 0.00, 3067.00 (CRAAS-10)
# Info: Final schedule of SEQUENTIAL 'core': Latency = 13, Area (Datapath, Register, Total) = 3067.00, 0.00, 3067.00 (CRAAS-12)
# Resource allocation and scheduling done. (CRAAS-2)
# Netlist written to file 'schedule.gnt' (NET-4)
# Info: Completed transformation 'allocate' on solution 'edge_detect.v9': elapsed time 2.04 seconds, memory usage 298952kB, peak memory usage 333820kB (SOL-9)
go new
solution file remove {$PROJECT_HOME/../edge_detect_c/edge5.c}
# Info: Branching solution 'solution.v2' at state 'new' (PRJ-2)
solution file add ../edge_detect_c/edge3.c
# /INPUTFILES/4
go allocate
# Info: Starting transformation 'analyze' on solution 'solution.v2' (SOL-8)
# Front End called with arguments: -- {C:\fpga-catapult-c-spring\edge_detect_c\edge3.c} {C:\fpga-catapult-c-spring\edge_detect_c\shift_class.h} {C:\fpga-catapult-c-spring\edge_detect_c\edge.h} (CIN-69)
# Edison Design Group C++/C Front End - Version 3.10.1 (CIN-1)
# $PROJECT_HOME/../edge_detect_c/edge3.c(49): Pragma 'hls_design<top>' detected on routine 'edge_detect' (CIN-6)
# Source file analysis completed (CIN-68)
# Info: Completed transformation 'analyze' on solution 'solution.v2': elapsed time 1.90 seconds, memory usage 303012kB, peak memory usage 365928kB (SOL-9)
# Info: Starting transformation 'compile' on solution 'solution.v2' (SOL-8)
# Generating synthesis internal form... (CIN-3)
# $PROJECT_HOME/../edge_detect_c/edge3.c(50): Found top design routine 'edge_detect' specified by directive (CIN-52)
# $PROJECT_HOME/../edge_detect_c/edge3.c(50): Synthesizing routine 'edge_detect' (CIN-13)
# $PROJECT_HOME/../edge_detect_c/edge3.c(50): Inlining routine 'edge_detect' (CIN-14)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(13): Inlining member function 'shift_class<ac_int<90, false>, 3>::shift_class' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(32): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator<<' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(48): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(48): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(48): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(48): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(48): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(48): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/edge3.c(162): Inlining routine 'AbsAndMax' (CIN-14)
# $PROJECT_HOME/../edge_detect_c/edge3.c(162): Inlining routine 'AbsAndMax' (CIN-14)
# $PROJECT_HOME/../edge_detect_c/edge3.c(162): Inlining routine 'AbsAndMax' (CIN-14)
# $PROJECT_HOME/../edge_detect_c/edge3.c(162): Inlining routine 'AbsAndMax' (CIN-14)
# $PROJECT_HOME/../edge_detect_c/edge3.c(162): Inlining routine 'AbsAndMax' (CIN-14)
# $PROJECT_HOME/../edge_detect_c/edge3.c(162): Inlining routine 'AbsAndMax' (CIN-14)
# $PROJECT_HOME/../edge_detect_c/edge3.c(162): Inlining routine 'AbsAndMax' (CIN-14)
# $PROJECT_HOME/../edge_detect_c/edge3.c(162): Inlining routine 'AbsAndMax' (CIN-14)
# $PROJECT_HOME/../edge_detect_c/edge3.c(162): Inlining routine 'AbsAndMax' (CIN-14)
# $PROJECT_HOME/../edge_detect_c/edge3.c(50): Optimizing block '/edge_detect' ... (CIN-4)
# $PROJECT_HOME/../edge_detect_c/edge3.c(50): Inout port 'vin' is only used as an input. (OPT-10)
# $PROJECT_HOME/../edge_detect_c/edge3.c(50): Inout port 'vout' is only used as an output. (OPT-11)
# Info: Optimizing partition '/edge_detect': (Total ops = 590, Real ops = 150, Vars = 150) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 590, Real ops = 150, Vars = 148) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 568, Real ops = 140, Vars = 150) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 568, Real ops = 140, Vars = 152) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 568, Real ops = 140, Vars = 152) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 568, Real ops = 140, Vars = 150) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 481, Real ops = 137, Vars = 116) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 467, Real ops = 137, Vars = 115) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 467, Real ops = 137, Vars = 115) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 467, Real ops = 137, Vars = 117) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 467, Real ops = 137, Vars = 117) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 465, Real ops = 137, Vars = 125) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 470, Real ops = 125, Vars = 42) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 470, Real ops = 125, Vars = 44) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 470, Real ops = 125, Vars = 46) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 470, Real ops = 125, Vars = 42) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 470, Real ops = 125, Vars = 44) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 470, Real ops = 125, Vars = 42) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 470, Real ops = 125, Vars = 44) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 470, Real ops = 125, Vars = 44) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 470, Real ops = 125, Vars = 42) (SOL-10)
# $PROJECT_HOME/../edge_detect_c/edge3.c(88): Loop '/edge_detect/core/RESET' iterated at most 3 times. (LOOP-2)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(34): Loop '/edge_detect/core/SHIFT' iterated at most 3 times. (LOOP-2)
# $PROJECT_HOME/../edge_detect_c/edge3.c(101): Loop '/edge_detect/core/ACC_GX:for' iterated at most 3 times. (LOOP-2)
# $PROJECT_HOME/../edge_detect_c/edge3.c(100): Loop '/edge_detect/core/ACC_GX' iterated at most 3 times. (LOOP-2)
# $PROJECT_HOME/../edge_detect_c/edge3.c(109): Loop '/edge_detect/core/ACC_GY:for' iterated at most 3 times. (LOOP-2)
# $PROJECT_HOME/../edge_detect_c/edge3.c(108): Loop '/edge_detect/core/ACC_GY' iterated at most 3 times. (LOOP-2)
# $PROJECT_HOME/../edge_detect_c/edge3.c(116): Loop '/edge_detect/core/ACC3' iterated at most 3 times. (LOOP-2)
# $PROJECT_HOME/../edge_detect_c/edge3.c(78): Loop '/edge_detect/core/FRAME' iterated at most 1 times. (LOOP-2)
# $PROJECT_HOME/../edge_detect_c/edge3.c(89): Detected constant initialization of array 'red_x', optimizing loop 'RESET' (LOOP-12)
# $PROJECT_HOME/../edge_detect_c/edge3.c(90): Detected constant initialization of array 'green_x', optimizing loop 'RESET' (LOOP-12)
# $PROJECT_HOME/../edge_detect_c/edge3.c(91): Detected constant initialization of array 'blue_x', optimizing loop 'RESET' (LOOP-12)
# $PROJECT_HOME/../edge_detect_c/edge3.c(92): Detected constant initialization of array 'red_y', optimizing loop 'RESET' (LOOP-12)
# $PROJECT_HOME/../edge_detect_c/edge3.c(93): Detected constant initialization of array 'green_y', optimizing loop 'RESET' (LOOP-12)
# $PROJECT_HOME/../edge_detect_c/edge3.c(94): Detected constant initialization of array 'blue_y', optimizing loop 'RESET' (LOOP-12)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 680, Real ops = 121, Vars = 44) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 423, Real ops = 112, Vars = 43) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 423, Real ops = 112, Vars = 45) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 417, Real ops = 112, Vars = 49) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 410, Real ops = 112, Vars = 43) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 410, Real ops = 112, Vars = 45) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 410, Real ops = 112, Vars = 43) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 410, Real ops = 112, Vars = 45) (SOL-10)
# Design 'edge_detect' was read (SOL-1)
# Info: Completed transformation 'compile' on solution 'edge_detect.v10': elapsed time 6.72 seconds, memory usage 302572kB, peak memory usage 365928kB (SOL-9)
# Info: Starting transformation 'architect' on solution 'edge_detect.v10' (SOL-8)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(34): Loop '/edge_detect/core/SHIFT' is left rolled. (LOOP-4)
# $PROJECT_HOME/../edge_detect_c/edge3.c(101): Loop '/edge_detect/core/ACC_GX:for' is left rolled. (LOOP-4)
# $PROJECT_HOME/../edge_detect_c/edge3.c(100): Loop '/edge_detect/core/ACC_GX' is left rolled. (LOOP-4)
# $PROJECT_HOME/../edge_detect_c/edge3.c(109): Loop '/edge_detect/core/ACC_GY:for' is left rolled. (LOOP-4)
# $PROJECT_HOME/../edge_detect_c/edge3.c(108): Loop '/edge_detect/core/ACC_GY' is left rolled. (LOOP-4)
# $PROJECT_HOME/../edge_detect_c/edge3.c(116): Loop '/edge_detect/core/ACC3' is left rolled. (LOOP-4)
# $PROJECT_HOME/../edge_detect_c/edge3.c(50): Loop '/edge_detect/core/main' is left rolled. (LOOP-4)
# Loop 'ACC_GY' is merged and folded into Loop 'ACC_GX' (LOOP-9)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 416, Real ops = 114, Vars = 45) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 414, Real ops = 114, Vars = 45) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 410, Real ops = 112, Vars = 43) (SOL-10)
# Loop 'ACC_GY:for' is merged and folded into Loop 'ACC_GX:for' (LOOP-9)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 415, Real ops = 113, Vars = 45) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 413, Real ops = 113, Vars = 45) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 409, Real ops = 111, Vars = 43) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 409, Real ops = 111, Vars = 48) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 409, Real ops = 111, Vars = 43) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 409, Real ops = 111, Vars = 48) (SOL-10)
# $PROJECT_HOME/../edge_detect_c/edge3.c(50): I/O-Port inferred - resource 'vin:rsc' (from var: vin) mapped to 'mgc_ioport.mgc_in_wire' (size: 90). (MEM-2)
# $PROJECT_HOME/../edge_detect_c/edge3.c(50): I/O-Port inferred - resource 'vout:rsc' (from var: vout) mapped to 'mgc_ioport.mgc_out_stdreg' (size: 30). (MEM-2)
# Info: Optimizing partition '/edge_detect': (Total ops = 411, Real ops = 111, Vars = 48) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 411, Real ops = 111, Vars = 43) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 410, Real ops = 111, Vars = 43) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 410, Real ops = 111, Vars = 48) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 549, Real ops = 150, Vars = 89) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 510, Real ops = 162, Vars = 122) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 513, Real ops = 161, Vars = 64) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 469, Real ops = 141, Vars = 70) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 469, Real ops = 141, Vars = 75) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 469, Real ops = 141, Vars = 70) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 469, Real ops = 141, Vars = 75) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 482, Real ops = 142, Vars = 75) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 486, Real ops = 142, Vars = 75) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 480, Real ops = 142, Vars = 75) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 1577, Real ops = 394, Vars = 715) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 700, Real ops = 286, Vars = 141) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 699, Real ops = 286, Vars = 140) (SOL-10)
# Design 'edge_detect' contains '332' real operations. (SOL-11)
# Info: Completed transformation 'architect' on solution 'edge_detect.v10': elapsed time 19.45 seconds, memory usage 303008kB, peak memory usage 365928kB (SOL-9)
# Info: Starting transformation 'allocate' on solution 'edge_detect.v10' (SOL-8)
# Performing concurrent resource allocation and scheduling on '/edge_detect/core' (CRAAS-1)
# Info: Select qualified components for data operations ... (CRAAS-3)
# Info: Apply resource constraints on data operations ... (CRAAS-4)
# $PROJECT_HOME/../edge_detect_c/edge3.c(50): Prescheduled LOOP 'main' (3 c-steps) (SCHD-7)
# $PROJECT_HOME/../edge_detect_c/edge3.c(50): Prescheduled LOOP 'core:rlp' (0 c-steps) (SCHD-7)
# $PROJECT_HOME/../edge_detect_c/edge3.c(50): Prescheduled SEQUENTIAL 'core' (total length 3 c-steps) (SCHD-8)
# Info: Initial schedule of SEQUENTIAL 'core': Latency = 16, Area (Datapath, Register, Total) = 6629.96, 0.00, 6629.96 (CRAAS-11)
# At least one feasible schedule exists. (CRAAS-9)
# Info: Optimized LOOP 'main': Latency = 16, Area (Datapath, Register, Total) = 6591.66, 0.00, 6591.66 (CRAAS-10)
# Info: Optimized LOOP 'main': Latency = 16, Area (Datapath, Register, Total) = 6553.35, 0.00, 6553.35 (CRAAS-10)
# Info: Optimized LOOP 'main': Latency = 16, Area (Datapath, Register, Total) = 6549.17, 0.00, 6549.17 (CRAAS-10)
# Info: Optimized LOOP 'main': Latency = 16, Area (Datapath, Register, Total) = 6540.51, 0.00, 6540.51 (CRAAS-10)
# Info: Optimized LOOP 'main': Latency = 16, Area (Datapath, Register, Total) = 6537.99, 0.00, 6537.99 (CRAAS-10)
# Info: Final schedule of SEQUENTIAL 'core': Latency = 16, Area (Datapath, Register, Total) = 6537.99, 0.00, 6537.99 (CRAAS-12)
# Resource allocation and scheduling done. (CRAAS-2)
# Netlist written to file 'schedule.gnt' (NET-4)
# Info: Completed transformation 'allocate' on solution 'edge_detect.v10': elapsed time 2.32 seconds, memory usage 308784kB, peak memory usage 365928kB (SOL-9)
# File '$PROJECT_HOME/../edge_detect_c/edge3.c' saved
go extract
# Info: Starting transformation 'schedule' on solution 'edge_detect.v10' (SOL-8)
# Performing concurrent resource allocation and scheduling on '/edge_detect/core' (CRAAS-1)
# Warning: Cannot build distributed pipeline in process 'core' because of missing handshake for resource 'vout:rsc' (SCHD-15)
# Global signal 'vin:rsc.z' added to design 'edge_detect' for component 'vin:rsc:mgc_in_wire' (LIB-3)
# Global signal 'vout:rsc.z' added to design 'edge_detect' for component 'vout:rsc:mgc_out_stdreg' (LIB-3)
# Info: Optimizing partition '/edge_detect': (Total ops = 879, Real ops = 333, Vars = 287) (SOL-10)
# Info: Optimizing partition '/edge_detect/edge_detect:core': (Total ops = 869, Real ops = 332, Vars = 279) (SOL-10)
# Info: Optimizing partition '/edge_detect/edge_detect:core/core': (Total ops = 860, Real ops = 332, Vars = 279) (SOL-10)
# Warning: User stop requested, stopping...
# Error: go: user stop requested
# File '$PROJECT_HOME/../edge_detect_c/edge3.c' saved
# File '$PROJECT_HOME/../edge_detect_c/edge3.c' saved
# File '$PROJECT_HOME/../edge_detect_c/edge3.c' saved
# Input file has changed
go new
solution file set {$PROJECT_HOME/../edge_detect_c/edge3.c} -updated
# Info: Branching solution 'solution.v2' at state 'new' (PRJ-2)
go allocate
# Info: Starting transformation 'analyze' on solution 'solution.v2' (SOL-8)
# Front End called with arguments: -- {C:\fpga-catapult-c-spring\edge_detect_c\edge3.c} {C:\fpga-catapult-c-spring\edge_detect_c\shift_class.h} {C:\fpga-catapult-c-spring\edge_detect_c\edge.h} (CIN-69)
# Edison Design Group C++/C Front End - Version 3.10.1 (CIN-1)
# $PROJECT_HOME/../edge_detect_c/edge3.c(49): Pragma 'hls_design<top>' detected on routine 'edge_detect' (CIN-6)
# Source file analysis completed (CIN-68)
# Info: Completed transformation 'analyze' on solution 'solution.v2': elapsed time 1.98 seconds, memory usage 313444kB, peak memory usage 381012kB (SOL-9)
# Info: Starting transformation 'compile' on solution 'solution.v2' (SOL-8)
# Generating synthesis internal form... (CIN-3)
# $PROJECT_HOME/../edge_detect_c/edge3.c(50): Found top design routine 'edge_detect' specified by directive (CIN-52)
# $PROJECT_HOME/../edge_detect_c/edge3.c(50): Synthesizing routine 'edge_detect' (CIN-13)
# $PROJECT_HOME/../edge_detect_c/edge3.c(50): Inlining routine 'edge_detect' (CIN-14)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(13): Inlining member function 'shift_class<ac_int<90, false>, 3>::shift_class' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(32): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator<<' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(48): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(48): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(48): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(48): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(48): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(48): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/edge3.c(158): Inlining routine 'AbsAndMax' (CIN-14)
# $PROJECT_HOME/../edge_detect_c/edge3.c(158): Inlining routine 'AbsAndMax' (CIN-14)
# $PROJECT_HOME/../edge_detect_c/edge3.c(158): Inlining routine 'AbsAndMax' (CIN-14)
# $PROJECT_HOME/../edge_detect_c/edge3.c(158): Inlining routine 'AbsAndMax' (CIN-14)
# $PROJECT_HOME/../edge_detect_c/edge3.c(158): Inlining routine 'AbsAndMax' (CIN-14)
# $PROJECT_HOME/../edge_detect_c/edge3.c(158): Inlining routine 'AbsAndMax' (CIN-14)
# $PROJECT_HOME/../edge_detect_c/edge3.c(158): Inlining routine 'AbsAndMax' (CIN-14)
# $PROJECT_HOME/../edge_detect_c/edge3.c(158): Inlining routine 'AbsAndMax' (CIN-14)
# $PROJECT_HOME/../edge_detect_c/edge3.c(158): Inlining routine 'AbsAndMax' (CIN-14)
# $PROJECT_HOME/../edge_detect_c/edge3.c(50): Optimizing block '/edge_detect' ... (CIN-4)
# $PROJECT_HOME/../edge_detect_c/edge3.c(50): Inout port 'vin' is only used as an input. (OPT-10)
# $PROJECT_HOME/../edge_detect_c/edge3.c(50): Inout port 'vout' is only used as an output. (OPT-11)
# Info: Optimizing partition '/edge_detect': (Total ops = 587, Real ops = 150, Vars = 150) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 587, Real ops = 150, Vars = 148) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 565, Real ops = 140, Vars = 150) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 565, Real ops = 140, Vars = 152) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 565, Real ops = 140, Vars = 152) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 565, Real ops = 140, Vars = 150) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 478, Real ops = 137, Vars = 116) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 464, Real ops = 137, Vars = 115) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 464, Real ops = 137, Vars = 115) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 464, Real ops = 137, Vars = 117) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 464, Real ops = 137, Vars = 117) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 462, Real ops = 137, Vars = 125) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 470, Real ops = 125, Vars = 42) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 470, Real ops = 125, Vars = 44) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 470, Real ops = 125, Vars = 46) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 470, Real ops = 125, Vars = 42) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 470, Real ops = 125, Vars = 44) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 470, Real ops = 125, Vars = 42) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 470, Real ops = 125, Vars = 44) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 470, Real ops = 125, Vars = 44) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 470, Real ops = 125, Vars = 42) (SOL-10)
# $PROJECT_HOME/../edge_detect_c/edge3.c(88): Loop '/edge_detect/core/RESET' iterated at most 3 times. (LOOP-2)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(34): Loop '/edge_detect/core/SHIFT' iterated at most 3 times. (LOOP-2)
# $PROJECT_HOME/../edge_detect_c/edge3.c(101): Loop '/edge_detect/core/ACC_GX:for' iterated at most 3 times. (LOOP-2)
# $PROJECT_HOME/../edge_detect_c/edge3.c(100): Loop '/edge_detect/core/ACC_GX' iterated at most 3 times. (LOOP-2)
# $PROJECT_HOME/../edge_detect_c/edge3.c(109): Loop '/edge_detect/core/ACC_GY:for' iterated at most 3 times. (LOOP-2)
# $PROJECT_HOME/../edge_detect_c/edge3.c(108): Loop '/edge_detect/core/ACC_GY' iterated at most 3 times. (LOOP-2)
# $PROJECT_HOME/../edge_detect_c/edge3.c(116): Loop '/edge_detect/core/ACC3' iterated at most 3 times. (LOOP-2)
# $PROJECT_HOME/../edge_detect_c/edge3.c(78): Loop '/edge_detect/core/FRAME' iterated at most 1 times. (LOOP-2)
# $PROJECT_HOME/../edge_detect_c/edge3.c(89): Detected constant initialization of array 'red_x', optimizing loop 'RESET' (LOOP-12)
# $PROJECT_HOME/../edge_detect_c/edge3.c(90): Detected constant initialization of array 'green_x', optimizing loop 'RESET' (LOOP-12)
# $PROJECT_HOME/../edge_detect_c/edge3.c(91): Detected constant initialization of array 'blue_x', optimizing loop 'RESET' (LOOP-12)
# $PROJECT_HOME/../edge_detect_c/edge3.c(92): Detected constant initialization of array 'red_y', optimizing loop 'RESET' (LOOP-12)
# $PROJECT_HOME/../edge_detect_c/edge3.c(93): Detected constant initialization of array 'green_y', optimizing loop 'RESET' (LOOP-12)
# $PROJECT_HOME/../edge_detect_c/edge3.c(94): Detected constant initialization of array 'blue_y', optimizing loop 'RESET' (LOOP-12)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 680, Real ops = 121, Vars = 44) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 423, Real ops = 112, Vars = 43) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 423, Real ops = 112, Vars = 45) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 417, Real ops = 112, Vars = 49) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 410, Real ops = 112, Vars = 43) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 410, Real ops = 112, Vars = 45) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 410, Real ops = 112, Vars = 43) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 410, Real ops = 112, Vars = 45) (SOL-10)
# Design 'edge_detect' was read (SOL-1)
# Info: Completed transformation 'compile' on solution 'edge_detect.v11': elapsed time 7.53 seconds, memory usage 315452kB, peak memory usage 381012kB (SOL-9)
# Warning: User stop requested, stopping...
# Error: go: user stop requested
go allocate
# Info: Starting transformation 'architect' on solution 'edge_detect.v11' (SOL-8)
# Warning: User stop requested, stopping...
# Error: go: user stop requested
go allocate
# Warning: User stop requested, stopping...
# File '$PROJECT_HOME/../edge_detect_c/edge3.c' saved
# Error: go: user stop requested
# Input file has changed
go new
solution file set {$PROJECT_HOME/../edge_detect_c/edge3.c} -updated
# Info: Branching solution 'solution.v2' at state 'new' (PRJ-2)
go allocate
# Info: Starting transformation 'analyze' on solution 'solution.v2' (SOL-8)
# Front End called with arguments: -- {C:\fpga-catapult-c-spring\edge_detect_c\edge3.c} {C:\fpga-catapult-c-spring\edge_detect_c\shift_class.h} {C:\fpga-catapult-c-spring\edge_detect_c\edge.h} (CIN-69)
# Edison Design Group C++/C Front End - Version 3.10.1 (CIN-1)
# Error: $PROJECT_HOME/../edge_detect_c/edge3.c(125): $PROJECT_HOME/../edge_detect_c/edge3.c(125): expected a ")" (CRD-18)
# Error: Compilation aborted (CIN-5)
# Error: go analyze: Failed analyze
go allocate
# Info: Starting transformation 'analyze' on solution 'solution.v2' (SOL-8)
# Front End called with arguments: -- {C:\fpga-catapult-c-spring\edge_detect_c\edge3.c} {C:\fpga-catapult-c-spring\edge_detect_c\shift_class.h} {C:\fpga-catapult-c-spring\edge_detect_c\edge.h} (CIN-69)
# Edison Design Group C++/C Front End - Version 3.10.1 (CIN-1)
# Error: $PROJECT_HOME/../edge_detect_c/edge3.c(125): $PROJECT_HOME/../edge_detect_c/edge3.c(125): expected a ")" (CRD-18)
# Error: Compilation aborted (CIN-5)
# Error: go analyze: Failed analyze
go analyze
# Info: Starting transformation 'analyze' on solution 'solution.v2' (SOL-8)
# Front End called with arguments: -- {C:\fpga-catapult-c-spring\edge_detect_c\edge3.c} {C:\fpga-catapult-c-spring\edge_detect_c\shift_class.h} {C:\fpga-catapult-c-spring\edge_detect_c\edge.h} (CIN-69)
# Edison Design Group C++/C Front End - Version 3.10.1 (CIN-1)
# Error: $PROJECT_HOME/../edge_detect_c/edge3.c(125): $PROJECT_HOME/../edge_detect_c/edge3.c(125): expected a ")" (CRD-18)
# Error: Compilation aborted (CIN-5)
# Error: go analyze: Failed analyze
# File '$PROJECT_HOME/../edge_detect_c/edge3.c' saved
go analyze
# Info: Starting transformation 'analyze' on solution 'solution.v2' (SOL-8)
# Front End called with arguments: -- {C:\fpga-catapult-c-spring\edge_detect_c\edge3.c} {C:\fpga-catapult-c-spring\edge_detect_c\shift_class.h} {C:\fpga-catapult-c-spring\edge_detect_c\edge.h} (CIN-69)
# Edison Design Group C++/C Front End - Version 3.10.1 (CIN-1)
# Error: $PROJECT_HOME/../edge_detect_c/edge3.c(125): $PROJECT_HOME/../edge_detect_c/edge3.c(125): expected a ")" (CRD-18)
# Error: Compilation aborted (CIN-5)
# Error: go analyze: Failed analyze
go analyze
# Info: Starting transformation 'analyze' on solution 'solution.v2' (SOL-8)
# Front End called with arguments: -- {C:\fpga-catapult-c-spring\edge_detect_c\edge3.c} {C:\fpga-catapult-c-spring\edge_detect_c\shift_class.h} {C:\fpga-catapult-c-spring\edge_detect_c\edge.h} (CIN-69)
# Edison Design Group C++/C Front End - Version 3.10.1 (CIN-1)
# Error: $PROJECT_HOME/../edge_detect_c/edge3.c(125): $PROJECT_HOME/../edge_detect_c/edge3.c(125): expected a ")" (CRD-18)
# Error: Compilation aborted (CIN-5)
# Error: go analyze: Failed analyze
# File '$PROJECT_HOME/../edge_detect_c/edge3.c' saved
# File '$PROJECT_HOME/../edge_detect_c/edge3.c' saved
# File '$PROJECT_HOME/../edge_detect_c/edge3.c' saved
# File '$PROJECT_HOME/../edge_detect_c/edge3.c' saved
solution file remove {$PROJECT_HOME/../edge_detect_c/edge3.c}
solution file add ../edge_detect_c/edge6.c
# /INPUTFILES/4
go analyze
# Info: Starting transformation 'analyze' on solution 'solution.v2' (SOL-8)
# Front End called with arguments: -- {C:\fpga-catapult-c-spring\edge_detect_c\edge6.c} {C:\fpga-catapult-c-spring\edge_detect_c\shift_class.h} {C:\fpga-catapult-c-spring\edge_detect_c\edge.h} (CIN-69)
# Edison Design Group C++/C Front End - Version 3.10.1 (CIN-1)
# Error: $PROJECT_HOME/../edge_detect_c/edge6.c(125): $PROJECT_HOME/../edge_detect_c/edge6.c(125): expected a ")" (CRD-18)
# Warning: $PROJECT_HOME/../edge_detect_c/edge6.c(156): $PROJECT_HOME/../edge_detect_c/edge6.c(156): last line of file ends without a newline (CRD-1)
# Error: Compilation aborted (CIN-5)
# Error: go analyze: Failed analyze
go allocate
# Info: Starting transformation 'analyze' on solution 'solution.v2' (SOL-8)
# Front End called with arguments: -- {C:\fpga-catapult-c-spring\edge_detect_c\edge6.c} {C:\fpga-catapult-c-spring\edge_detect_c\shift_class.h} {C:\fpga-catapult-c-spring\edge_detect_c\edge.h} (CIN-69)
# Edison Design Group C++/C Front End - Version 3.10.1 (CIN-1)
# Error: $PROJECT_HOME/../edge_detect_c/edge6.c(125): $PROJECT_HOME/../edge_detect_c/edge6.c(125): expected a ")" (CRD-18)
# Warning: $PROJECT_HOME/../edge_detect_c/edge6.c(156): $PROJECT_HOME/../edge_detect_c/edge6.c(156): last line of file ends without a newline (CRD-1)
# Error: Compilation aborted (CIN-5)
# Error: go analyze: Failed analyze
# File '$PROJECT_HOME/../edge_detect_c/edge6.c' saved
# File '$PROJECT_HOME/../edge_detect_c/edge.h' saved
go analyze
# Info: Starting transformation 'analyze' on solution 'solution.v2' (SOL-8)
# Front End called with arguments: -- {C:\fpga-catapult-c-spring\edge_detect_c\edge6.c} {C:\fpga-catapult-c-spring\edge_detect_c\shift_class.h} {C:\fpga-catapult-c-spring\edge_detect_c\edge.h} (CIN-69)
# Edison Design Group C++/C Front End - Version 3.10.1 (CIN-1)
# Error: $PROJECT_HOME/../edge_detect_c/edge6.c(119): $PROJECT_HOME/../edge_detect_c/edge6.c(119): identifier "AbsAndMax" is undefined (CRD-20)
# Warning: $PROJECT_HOME/../edge_detect_c/edge6.c(150): $PROJECT_HOME/../edge_detect_c/edge6.c(150): last line of file ends without a newline (CRD-1)
# Error: Compilation aborted (CIN-5)
# Error: go analyze: Failed analyze
# File '$PROJECT_HOME/../edge_detect_c/edge6.c' saved
go analyze
# Info: Starting transformation 'analyze' on solution 'solution.v2' (SOL-8)
# Front End called with arguments: -- {C:\fpga-catapult-c-spring\edge_detect_c\edge6.c} {C:\fpga-catapult-c-spring\edge_detect_c\shift_class.h} {C:\fpga-catapult-c-spring\edge_detect_c\edge.h} (CIN-69)
# Edison Design Group C++/C Front End - Version 3.10.1 (CIN-1)
# Warning: $PROJECT_HOME/../edge_detect_c/edge6.c(150): $PROJECT_HOME/../edge_detect_c/edge6.c(150): last line of file ends without a newline (CRD-1)
# $PROJECT_HOME/../edge_detect_c/edge6.c(49): Pragma 'hls_design<top>' detected on routine 'edge_detect' (CIN-6)
# Source file analysis completed (CIN-68)
# Info: Completed transformation 'analyze' on solution 'solution.v2': elapsed time 1.97 seconds, memory usage 314160kB, peak memory usage 385176kB (SOL-9)
go compile
# Info: Starting transformation 'compile' on solution 'solution.v2' (SOL-8)
# Generating synthesis internal form... (CIN-3)
# $PROJECT_HOME/../edge_detect_c/edge6.c(50): Found top design routine 'edge_detect' specified by directive (CIN-52)
# $PROJECT_HOME/../edge_detect_c/edge6.c(50): Synthesizing routine 'edge_detect' (CIN-13)
# $PROJECT_HOME/../edge_detect_c/edge6.c(50): Inlining routine 'edge_detect' (CIN-14)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(13): Inlining member function 'shift_class<ac_int<90, false>, 3>::shift_class' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(32): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator<<' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(48): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(48): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(48): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(48): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(48): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(48): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/edge6.c(141): Inlining routine 'AbsAndMax' (CIN-14)
# $PROJECT_HOME/../edge_detect_c/edge6.c(141): Inlining routine 'AbsAndMax' (CIN-14)
# $PROJECT_HOME/../edge_detect_c/edge6.c(141): Inlining routine 'AbsAndMax' (CIN-14)
# $PROJECT_HOME/../edge_detect_c/edge6.c(50): Optimizing block '/edge_detect' ... (CIN-4)
# $PROJECT_HOME/../edge_detect_c/edge6.c(50): Inout port 'vin' is only used as an input. (OPT-10)
# $PROJECT_HOME/../edge_detect_c/edge6.c(50): Inout port 'vout' is only used as an output. (OPT-11)
# Info: Optimizing partition '/edge_detect': (Total ops = 473, Real ops = 120, Vars = 114) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 473, Real ops = 120, Vars = 112) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 451, Real ops = 110, Vars = 114) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 451, Real ops = 110, Vars = 116) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 451, Real ops = 110, Vars = 116) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 451, Real ops = 110, Vars = 114) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 376, Real ops = 107, Vars = 86) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 362, Real ops = 107, Vars = 85) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 362, Real ops = 107, Vars = 85) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 362, Real ops = 107, Vars = 87) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 362, Real ops = 107, Vars = 87) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 360, Real ops = 107, Vars = 95) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 416, Real ops = 101, Vars = 36) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 416, Real ops = 101, Vars = 38) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 416, Real ops = 101, Vars = 40) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 416, Real ops = 101, Vars = 36) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 416, Real ops = 101, Vars = 38) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 416, Real ops = 101, Vars = 36) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 416, Real ops = 101, Vars = 38) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 416, Real ops = 101, Vars = 38) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 416, Real ops = 101, Vars = 36) (SOL-10)
# $PROJECT_HOME/../edge_detect_c/edge6.c(77): Loop '/edge_detect/core/RESET' iterated at most 3 times. (LOOP-2)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(34): Loop '/edge_detect/core/SHIFT' iterated at most 3 times. (LOOP-2)
# $PROJECT_HOME/../edge_detect_c/edge6.c(90): Loop '/edge_detect/core/ACC_GX:for' iterated at most 3 times. (LOOP-2)
# $PROJECT_HOME/../edge_detect_c/edge6.c(89): Loop '/edge_detect/core/ACC_GX' iterated at most 3 times. (LOOP-2)
# $PROJECT_HOME/../edge_detect_c/edge6.c(98): Loop '/edge_detect/core/ACC_GY:for' iterated at most 3 times. (LOOP-2)
# $PROJECT_HOME/../edge_detect_c/edge6.c(97): Loop '/edge_detect/core/ACC_GY' iterated at most 3 times. (LOOP-2)
# $PROJECT_HOME/../edge_detect_c/edge6.c(105): Loop '/edge_detect/core/ACC3' iterated at most 3 times. (LOOP-2)
# $PROJECT_HOME/../edge_detect_c/edge6.c(67): Loop '/edge_detect/core/FRAME' iterated at most 1 times. (LOOP-2)
# $PROJECT_HOME/../edge_detect_c/edge6.c(78): Detected constant initialization of array 'red_x', optimizing loop 'RESET' (LOOP-12)
# $PROJECT_HOME/../edge_detect_c/edge6.c(79): Detected constant initialization of array 'green_x', optimizing loop 'RESET' (LOOP-12)
# $PROJECT_HOME/../edge_detect_c/edge6.c(80): Detected constant initialization of array 'blue_x', optimizing loop 'RESET' (LOOP-12)
# $PROJECT_HOME/../edge_detect_c/edge6.c(81): Detected constant initialization of array 'red_y', optimizing loop 'RESET' (LOOP-12)
# $PROJECT_HOME/../edge_detect_c/edge6.c(82): Detected constant initialization of array 'green_y', optimizing loop 'RESET' (LOOP-12)
# $PROJECT_HOME/../edge_detect_c/edge6.c(83): Detected constant initialization of array 'blue_y', optimizing loop 'RESET' (LOOP-12)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 608, Real ops = 97, Vars = 38) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 357, Real ops = 88, Vars = 37) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 357, Real ops = 88, Vars = 39) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 351, Real ops = 88, Vars = 43) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 344, Real ops = 88, Vars = 37) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 344, Real ops = 88, Vars = 39) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 344, Real ops = 88, Vars = 37) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 344, Real ops = 88, Vars = 39) (SOL-10)
# Design 'edge_detect' was read (SOL-1)
# Info: Completed transformation 'compile' on solution 'edge_detect.v12': elapsed time 6.99 seconds, memory usage 323876kB, peak memory usage 385176kB (SOL-9)
go allocate
# Info: Starting transformation 'architect' on solution 'edge_detect.v12' (SOL-8)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(34): Loop '/edge_detect/core/SHIFT' is left rolled. (LOOP-4)
# $PROJECT_HOME/../edge_detect_c/edge6.c(90): Loop '/edge_detect/core/ACC_GX:for' is left rolled. (LOOP-4)
# $PROJECT_HOME/../edge_detect_c/edge6.c(89): Loop '/edge_detect/core/ACC_GX' is left rolled. (LOOP-4)
# $PROJECT_HOME/../edge_detect_c/edge6.c(98): Loop '/edge_detect/core/ACC_GY:for' is left rolled. (LOOP-4)
# $PROJECT_HOME/../edge_detect_c/edge6.c(97): Loop '/edge_detect/core/ACC_GY' is left rolled. (LOOP-4)
# $PROJECT_HOME/../edge_detect_c/edge6.c(105): Loop '/edge_detect/core/ACC3' is left rolled. (LOOP-4)
# $PROJECT_HOME/../edge_detect_c/edge6.c(50): Loop '/edge_detect/core/main' is left rolled. (LOOP-4)
# Loop 'ACC_GY' is merged and folded into Loop 'ACC_GX' (LOOP-9)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 350, Real ops = 90, Vars = 39) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 348, Real ops = 90, Vars = 39) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 344, Real ops = 88, Vars = 37) (SOL-10)
# Loop 'ACC_GY:for' is merged and folded into Loop 'ACC_GX:for' (LOOP-9)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 349, Real ops = 89, Vars = 39) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 347, Real ops = 89, Vars = 39) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 343, Real ops = 87, Vars = 37) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 343, Real ops = 87, Vars = 42) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 343, Real ops = 87, Vars = 37) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 343, Real ops = 87, Vars = 42) (SOL-10)
# $PROJECT_HOME/../edge_detect_c/edge6.c(50): I/O-Port inferred - resource 'vin:rsc' (from var: vin) mapped to 'mgc_ioport.mgc_in_wire' (size: 90). (MEM-2)
# $PROJECT_HOME/../edge_detect_c/edge6.c(50): I/O-Port inferred - resource 'vout:rsc' (from var: vout) mapped to 'mgc_ioport.mgc_out_stdreg' (size: 30). (MEM-2)
# Info: Optimizing partition '/edge_detect': (Total ops = 345, Real ops = 87, Vars = 42) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 345, Real ops = 87, Vars = 37) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 344, Real ops = 87, Vars = 37) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 344, Real ops = 87, Vars = 42) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 483, Real ops = 126, Vars = 83) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 444, Real ops = 138, Vars = 116) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 447, Real ops = 137, Vars = 58) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 403, Real ops = 117, Vars = 64) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 403, Real ops = 117, Vars = 69) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 403, Real ops = 117, Vars = 64) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 403, Real ops = 117, Vars = 69) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 416, Real ops = 118, Vars = 69) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 414, Real ops = 118, Vars = 69) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 1373, Real ops = 328, Vars = 619) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 628, Real ops = 256, Vars = 129) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 627, Real ops = 256, Vars = 128) (SOL-10)
# Design 'edge_detect' contains '302' real operations. (SOL-11)
# Info: Completed transformation 'architect' on solution 'edge_detect.v12': elapsed time 20.31 seconds, memory usage 324392kB, peak memory usage 385176kB (SOL-9)
# Info: Starting transformation 'allocate' on solution 'edge_detect.v12' (SOL-8)
# Performing concurrent resource allocation and scheduling on '/edge_detect/core' (CRAAS-1)
# Info: Select qualified components for data operations ... (CRAAS-3)
# Info: Apply resource constraints on data operations ... (CRAAS-4)
# $PROJECT_HOME/../edge_detect_c/edge6.c(50): Prescheduled LOOP 'main' (3 c-steps) (SCHD-7)
# $PROJECT_HOME/../edge_detect_c/edge6.c(50): Prescheduled LOOP 'core:rlp' (0 c-steps) (SCHD-7)
# $PROJECT_HOME/../edge_detect_c/edge6.c(50): Prescheduled SEQUENTIAL 'core' (total length 3 c-steps) (SCHD-8)
# Info: Initial schedule of SEQUENTIAL 'core': Latency = 16, Area (Datapath, Register, Total) = 6281.75, 0.00, 6281.75 (CRAAS-11)
# At least one feasible schedule exists. (CRAAS-9)
# Info: Optimized LOOP 'main': Latency = 16, Area (Datapath, Register, Total) = 6243.45, 0.00, 6243.45 (CRAAS-10)
# Info: Optimized LOOP 'main': Latency = 16, Area (Datapath, Register, Total) = 6205.15, 0.00, 6205.15 (CRAAS-10)
# Info: Optimized LOOP 'main': Latency = 16, Area (Datapath, Register, Total) = 6200.96, 0.00, 6200.96 (CRAAS-10)
# Info: Optimized LOOP 'main': Latency = 16, Area (Datapath, Register, Total) = 6192.30, 0.00, 6192.30 (CRAAS-10)
# Info: Optimized LOOP 'main': Latency = 16, Area (Datapath, Register, Total) = 6189.79, 0.00, 6189.79 (CRAAS-10)
# Info: Final schedule of SEQUENTIAL 'core': Latency = 16, Area (Datapath, Register, Total) = 6189.79, 0.00, 6189.79 (CRAAS-12)
# Resource allocation and scheduling done. (CRAAS-2)
# Netlist written to file 'schedule.gnt' (NET-4)
# Info: Completed transformation 'allocate' on solution 'edge_detect.v12': elapsed time 2.64 seconds, memory usage 326736kB, peak memory usage 385176kB (SOL-9)
go extract
# Warning: User stop requested, stopping...
# Error: go: user stop requested
# File '$PROJECT_HOME/../edge_detect_c/edge6.c' saved
# Input file has changed
go new
solution file set {$PROJECT_HOME/../edge_detect_c/edge6.c} -updated
# Info: Branching solution 'solution.v2' at state 'new' (PRJ-2)
go allocate
# Info: Starting transformation 'analyze' on solution 'solution.v2' (SOL-8)
# Front End called with arguments: -- {C:\fpga-catapult-c-spring\edge_detect_c\edge6.c} {C:\fpga-catapult-c-spring\edge_detect_c\shift_class.h} {C:\fpga-catapult-c-spring\edge_detect_c\edge.h} (CIN-69)
# Edison Design Group C++/C Front End - Version 3.10.1 (CIN-1)
# Warning: $PROJECT_HOME/../edge_detect_c/edge6.c(136): $PROJECT_HOME/../edge_detect_c/edge6.c(136): last line of file ends without a newline (CRD-1)
# $PROJECT_HOME/../edge_detect_c/edge6.c(49): Pragma 'hls_design<top>' detected on routine 'edge_detect' (CIN-6)
# Source file analysis completed (CIN-68)
# Info: Completed transformation 'analyze' on solution 'solution.v2': elapsed time 2.01 seconds, memory usage 352448kB, peak memory usage 399452kB (SOL-9)
# Info: Starting transformation 'compile' on solution 'solution.v2' (SOL-8)
# Generating synthesis internal form... (CIN-3)
# $PROJECT_HOME/../edge_detect_c/edge6.c(50): Found top design routine 'edge_detect' specified by directive (CIN-52)
# $PROJECT_HOME/../edge_detect_c/edge6.c(50): Synthesizing routine 'edge_detect' (CIN-13)
# $PROJECT_HOME/../edge_detect_c/edge6.c(50): Inlining routine 'edge_detect' (CIN-14)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(13): Inlining member function 'shift_class<ac_int<90, false>, 3>::shift_class' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(32): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator<<' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(48): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(48): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(48): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(48): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(48): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(48): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/edge6.c(127): Inlining routine 'AbsAndMax' (CIN-14)
# $PROJECT_HOME/../edge_detect_c/edge6.c(127): Inlining routine 'AbsAndMax' (CIN-14)
# $PROJECT_HOME/../edge_detect_c/edge6.c(127): Inlining routine 'AbsAndMax' (CIN-14)
# $PROJECT_HOME/../edge_detect_c/edge6.c(50): Optimizing block '/edge_detect' ... (CIN-4)
# $PROJECT_HOME/../edge_detect_c/edge6.c(50): Inout port 'vin' is only used as an input. (OPT-10)
# $PROJECT_HOME/../edge_detect_c/edge6.c(50): Inout port 'vout' is only used as an output. (OPT-11)
# Info: Optimizing partition '/edge_detect': (Total ops = 391, Real ops = 108, Vars = 96) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 391, Real ops = 108, Vars = 94) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 369, Real ops = 98, Vars = 96) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 369, Real ops = 98, Vars = 98) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 369, Real ops = 98, Vars = 98) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 369, Real ops = 98, Vars = 96) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 307, Real ops = 95, Vars = 74) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 293, Real ops = 95, Vars = 73) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 293, Real ops = 95, Vars = 73) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 293, Real ops = 95, Vars = 75) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 293, Real ops = 95, Vars = 75) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 291, Real ops = 95, Vars = 83) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 346, Real ops = 89, Vars = 28) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 346, Real ops = 89, Vars = 30) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 346, Real ops = 89, Vars = 32) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 346, Real ops = 89, Vars = 28) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 346, Real ops = 89, Vars = 30) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 346, Real ops = 89, Vars = 28) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 346, Real ops = 89, Vars = 30) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 346, Real ops = 89, Vars = 30) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 346, Real ops = 89, Vars = 28) (SOL-10)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(34): Loop '/edge_detect/core/SHIFT' iterated at most 3 times. (LOOP-2)
# $PROJECT_HOME/../edge_detect_c/edge6.c(84): Loop '/edge_detect/core/ACC_GX:for' iterated at most 3 times. (LOOP-2)
# $PROJECT_HOME/../edge_detect_c/edge6.c(83): Loop '/edge_detect/core/ACC_GX' iterated at most 3 times. (LOOP-2)
# $PROJECT_HOME/../edge_detect_c/edge6.c(92): Loop '/edge_detect/core/ACC_GY:for' iterated at most 3 times. (LOOP-2)
# $PROJECT_HOME/../edge_detect_c/edge6.c(91): Loop '/edge_detect/core/ACC_GY' iterated at most 3 times. (LOOP-2)
# $PROJECT_HOME/../edge_detect_c/edge6.c(67): Loop '/edge_detect/core/FRAME' iterated at most 1 times. (LOOP-2)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 520, Real ops = 85, Vars = 30) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 301, Real ops = 79, Vars = 30) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 301, Real ops = 79, Vars = 32) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 296, Real ops = 79, Vars = 35) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 290, Real ops = 79, Vars = 30) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 290, Real ops = 79, Vars = 32) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 290, Real ops = 79, Vars = 30) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 290, Real ops = 79, Vars = 32) (SOL-10)
# Design 'edge_detect' was read (SOL-1)
# Info: Completed transformation 'compile' on solution 'edge_detect.v13': elapsed time 7.21 seconds, memory usage 333928kB, peak memory usage 399452kB (SOL-9)
# Info: Starting transformation 'architect' on solution 'edge_detect.v13' (SOL-8)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(34): Loop '/edge_detect/core/SHIFT' is left rolled. (LOOP-4)
# $PROJECT_HOME/../edge_detect_c/edge6.c(84): Loop '/edge_detect/core/ACC_GX:for' is left rolled. (LOOP-4)
# $PROJECT_HOME/../edge_detect_c/edge6.c(83): Loop '/edge_detect/core/ACC_GX' is left rolled. (LOOP-4)
# $PROJECT_HOME/../edge_detect_c/edge6.c(92): Loop '/edge_detect/core/ACC_GY:for' is left rolled. (LOOP-4)
# $PROJECT_HOME/../edge_detect_c/edge6.c(91): Loop '/edge_detect/core/ACC_GY' is left rolled. (LOOP-4)
# $PROJECT_HOME/../edge_detect_c/edge6.c(50): Loop '/edge_detect/core/main' is left rolled. (LOOP-4)
# Loop 'ACC_GY' is merged and folded into Loop 'ACC_GX' (LOOP-9)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 296, Real ops = 81, Vars = 32) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 294, Real ops = 81, Vars = 32) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 290, Real ops = 79, Vars = 30) (SOL-10)
# Loop 'ACC_GY:for' is merged and folded into Loop 'ACC_GX:for' (LOOP-9)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 295, Real ops = 80, Vars = 32) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 293, Real ops = 80, Vars = 32) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 289, Real ops = 78, Vars = 30) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 289, Real ops = 78, Vars = 35) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 289, Real ops = 78, Vars = 30) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 289, Real ops = 78, Vars = 35) (SOL-10)
# $PROJECT_HOME/../edge_detect_c/edge6.c(50): I/O-Port inferred - resource 'vin:rsc' (from var: vin) mapped to 'mgc_ioport.mgc_in_wire' (size: 90). (MEM-2)
# $PROJECT_HOME/../edge_detect_c/edge6.c(50): I/O-Port inferred - resource 'vout:rsc' (from var: vout) mapped to 'mgc_ioport.mgc_out_stdreg' (size: 30). (MEM-2)
# Info: Optimizing partition '/edge_detect': (Total ops = 291, Real ops = 78, Vars = 35) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 291, Real ops = 78, Vars = 30) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 290, Real ops = 78, Vars = 30) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 290, Real ops = 78, Vars = 35) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 303, Real ops = 81, Vars = 40) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 300, Real ops = 81, Vars = 37) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 297, Real ops = 80, Vars = 33) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 297, Real ops = 80, Vars = 38) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 308, Real ops = 81, Vars = 37) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 307, Real ops = 81, Vars = 37) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 788, Real ops = 175, Vars = 321) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 403, Real ops = 133, Vars = 75) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 402, Real ops = 133, Vars = 74) (SOL-10)
# Design 'edge_detect' contains '167' real operations. (SOL-11)
# Info: Completed transformation 'architect' on solution 'edge_detect.v13': elapsed time 19.80 seconds, memory usage 334448kB, peak memory usage 399452kB (SOL-9)
# Info: Starting transformation 'allocate' on solution 'edge_detect.v13' (SOL-8)
# Performing concurrent resource allocation and scheduling on '/edge_detect/core' (CRAAS-1)
# Info: Select qualified components for data operations ... (CRAAS-3)
# Info: Apply resource constraints on data operations ... (CRAAS-4)
# $PROJECT_HOME/../edge_detect_c/edge6.c(50): Prescheduled LOOP 'main' (3 c-steps) (SCHD-7)
# $PROJECT_HOME/../edge_detect_c/edge6.c(50): Prescheduled LOOP 'core:rlp' (0 c-steps) (SCHD-7)
# $PROJECT_HOME/../edge_detect_c/edge6.c(50): Prescheduled SEQUENTIAL 'core' (total length 3 c-steps) (SCHD-8)
# Info: Initial schedule of SEQUENTIAL 'core': Latency = 13, Area (Datapath, Register, Total) = 5259.55, 0.00, 5259.55 (CRAAS-11)
# At least one feasible schedule exists. (CRAAS-9)
# Info: Optimized LOOP 'main': Latency = 13, Area (Datapath, Register, Total) = 5256.76, 0.00, 5256.76 (CRAAS-10)
# Info: Optimized LOOP 'main': Latency = 13, Area (Datapath, Register, Total) = 5170.80, 0.00, 5170.80 (CRAAS-10)
# Info: Optimized LOOP 'main': Latency = 13, Area (Datapath, Register, Total) = 5168.29, 0.00, 5168.29 (CRAAS-10)
# Info: Final schedule of SEQUENTIAL 'core': Latency = 13, Area (Datapath, Register, Total) = 5168.29, 0.00, 5168.29 (CRAAS-12)
# Resource allocation and scheduling done. (CRAAS-2)
# Netlist written to file 'schedule.gnt' (NET-4)
# Info: Completed transformation 'allocate' on solution 'edge_detect.v13': elapsed time 2.25 seconds, memory usage 336452kB, peak memory usage 399452kB (SOL-9)
go compile
directive set /edge_detect/core/main -UNROLL 2
# Info: Branching solution 'edge_detect.v14' at state 'compile' (PRJ-2)
# /edge_detect/core/main/UNROLL 2
go allocate
# Info: Starting transformation 'architect' on solution 'edge_detect.v14' (SOL-8)
# Warning: User stop requested, stopping...
# Error: go: user stop requested
# File '$PROJECT_HOME/../edge_detect_c/edge6.c' saved
# Input file has changed
go new
solution file set {$PROJECT_HOME/../edge_detect_c/edge6.c} -updated
# Info: Branching solution 'solution.v2' at state 'new' (PRJ-2)
go analyze
# Info: Starting transformation 'analyze' on solution 'solution.v2' (SOL-8)
# Front End called with arguments: -- {C:\fpga-catapult-c-spring\edge_detect_c\edge6.c} {C:\fpga-catapult-c-spring\edge_detect_c\shift_class.h} {C:\fpga-catapult-c-spring\edge_detect_c\edge.h} (CIN-69)
# Edison Design Group C++/C Front End - Version 3.10.1 (CIN-1)
# Error: $PROJECT_HOME/../edge_detect_c/edge6.c(105): $PROJECT_HOME/../edge_detect_c/edge6.c(105): expected a ")" (CRD-18)
# Warning: $PROJECT_HOME/../edge_detect_c/edge6.c(136): $PROJECT_HOME/../edge_detect_c/edge6.c(136): last line of file ends without a newline (CRD-1)
# Error: Compilation aborted (CIN-5)
# Error: go analyze: Failed analyze
go analyze
# Info: Starting transformation 'analyze' on solution 'solution.v2' (SOL-8)
# Front End called with arguments: -- {C:\fpga-catapult-c-spring\edge_detect_c\edge6.c} {C:\fpga-catapult-c-spring\edge_detect_c\shift_class.h} {C:\fpga-catapult-c-spring\edge_detect_c\edge.h} (CIN-69)
# Edison Design Group C++/C Front End - Version 3.10.1 (CIN-1)
# Error: $PROJECT_HOME/../edge_detect_c/edge6.c(105): $PROJECT_HOME/../edge_detect_c/edge6.c(105): expected a ")" (CRD-18)
# Warning: $PROJECT_HOME/../edge_detect_c/edge6.c(136): $PROJECT_HOME/../edge_detect_c/edge6.c(136): last line of file ends without a newline (CRD-1)
# Error: Compilation aborted (CIN-5)
# Error: go analyze: Failed analyze
# File '$PROJECT_HOME/../edge_detect_c/edge6.c' saved
go analyze
# Info: Starting transformation 'analyze' on solution 'solution.v2' (SOL-8)
# Front End called with arguments: -- {C:\fpga-catapult-c-spring\edge_detect_c\edge6.c} {C:\fpga-catapult-c-spring\edge_detect_c\shift_class.h} {C:\fpga-catapult-c-spring\edge_detect_c\edge.h} (CIN-69)
# Edison Design Group C++/C Front End - Version 3.10.1 (CIN-1)
# Error: $PROJECT_HOME/../edge_detect_c/edge6.c(105): $PROJECT_HOME/../edge_detect_c/edge6.c(105): expected a ")" (CRD-18)
# Warning: $PROJECT_HOME/../edge_detect_c/edge6.c(136): $PROJECT_HOME/../edge_detect_c/edge6.c(136): last line of file ends without a newline (CRD-1)
# Error: Compilation aborted (CIN-5)
# Error: go analyze: Failed analyze
go analyze
# Info: Starting transformation 'analyze' on solution 'solution.v2' (SOL-8)
# Front End called with arguments: -- {C:\fpga-catapult-c-spring\edge_detect_c\edge6.c} {C:\fpga-catapult-c-spring\edge_detect_c\shift_class.h} {C:\fpga-catapult-c-spring\edge_detect_c\edge.h} (CIN-69)
# Edison Design Group C++/C Front End - Version 3.10.1 (CIN-1)
# Error: $PROJECT_HOME/../edge_detect_c/edge6.c(105): $PROJECT_HOME/../edge_detect_c/edge6.c(105): expected a ")" (CRD-18)
# Warning: $PROJECT_HOME/../edge_detect_c/edge6.c(136): $PROJECT_HOME/../edge_detect_c/edge6.c(136): last line of file ends without a newline (CRD-1)
# Error: Compilation aborted (CIN-5)
# Error: go analyze: Failed analyze
go analyze
# Info: Starting transformation 'analyze' on solution 'solution.v2' (SOL-8)
# Front End called with arguments: -- {C:\fpga-catapult-c-spring\edge_detect_c\edge6.c} {C:\fpga-catapult-c-spring\edge_detect_c\shift_class.h} {C:\fpga-catapult-c-spring\edge_detect_c\edge.h} (CIN-69)
# Edison Design Group C++/C Front End - Version 3.10.1 (CIN-1)
# Error: $PROJECT_HOME/../edge_detect_c/edge6.c(105): $PROJECT_HOME/../edge_detect_c/edge6.c(105): expected a ")" (CRD-18)
# Warning: $PROJECT_HOME/../edge_detect_c/edge6.c(136): $PROJECT_HOME/../edge_detect_c/edge6.c(136): last line of file ends without a newline (CRD-1)
# Error: Compilation aborted (CIN-5)
# Error: go analyze: Failed analyze
# File '$PROJECT_HOME/../edge_detect_c/edge6.c' saved
go analyze
# Info: Starting transformation 'analyze' on solution 'solution.v2' (SOL-8)
# Front End called with arguments: -- {C:\fpga-catapult-c-spring\edge_detect_c\edge6.c} {C:\fpga-catapult-c-spring\edge_detect_c\shift_class.h} {C:\fpga-catapult-c-spring\edge_detect_c\edge.h} (CIN-69)
# Edison Design Group C++/C Front End - Version 3.10.1 (CIN-1)
# Warning: $PROJECT_HOME/../edge_detect_c/edge6.c(136): $PROJECT_HOME/../edge_detect_c/edge6.c(136): last line of file ends without a newline (CRD-1)
# $PROJECT_HOME/../edge_detect_c/edge6.c(49): Pragma 'hls_design<top>' detected on routine 'edge_detect' (CIN-6)
# Source file analysis completed (CIN-68)
# Info: Completed transformation 'analyze' on solution 'solution.v2': elapsed time 1.98 seconds, memory usage 372952kB, peak memory usage 414408kB (SOL-9)
# Input file has changed
go new
solution file set {$PROJECT_HOME/../edge_detect_c/edge6.c} -updated
# Info: Branching solution 'solution.v3' at state 'new' (PRJ-2)
go compile
# Info: Starting transformation 'analyze' on solution 'solution.v3' (SOL-8)
# Front End called with arguments: -- {C:\fpga-catapult-c-spring\edge_detect_c\edge6.c} {C:\fpga-catapult-c-spring\edge_detect_c\shift_class.h} {C:\fpga-catapult-c-spring\edge_detect_c\edge.h} (CIN-69)
# Edison Design Group C++/C Front End - Version 3.10.1 (CIN-1)
# Warning: $PROJECT_HOME/../edge_detect_c/edge6.c(136): $PROJECT_HOME/../edge_detect_c/edge6.c(136): last line of file ends without a newline (CRD-1)
# $PROJECT_HOME/../edge_detect_c/edge6.c(49): Pragma 'hls_design<top>' detected on routine 'edge_detect' (CIN-6)
# Source file analysis completed (CIN-68)
# Info: Completed transformation 'analyze' on solution 'solution.v3': elapsed time 1.92 seconds, memory usage 375788kB, peak memory usage 414844kB (SOL-9)
# Info: Starting transformation 'compile' on solution 'solution.v3' (SOL-8)
# Generating synthesis internal form... (CIN-3)
# $PROJECT_HOME/../edge_detect_c/edge6.c(50): Found top design routine 'edge_detect' specified by directive (CIN-52)
# $PROJECT_HOME/../edge_detect_c/edge6.c(50): Synthesizing routine 'edge_detect' (CIN-13)
# $PROJECT_HOME/../edge_detect_c/edge6.c(50): Inlining routine 'edge_detect' (CIN-14)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(13): Inlining member function 'shift_class<ac_int<90, false>, 3>::shift_class' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(32): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator<<' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(48): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(48): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(48): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(48): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(48): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(48): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/edge6.c(127): Inlining routine 'AbsAndMax' (CIN-14)
# $PROJECT_HOME/../edge_detect_c/edge6.c(50): Optimizing block '/edge_detect' ... (CIN-4)
# $PROJECT_HOME/../edge_detect_c/edge6.c(50): Inout port 'vin' is only used as an input. (OPT-10)
# $PROJECT_HOME/../edge_detect_c/edge6.c(50): Inout port 'vout' is only used as an output. (OPT-11)
# Info: Optimizing partition '/edge_detect': (Total ops = 350, Real ops = 97, Vars = 81) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 350, Real ops = 97, Vars = 79) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 328, Real ops = 87, Vars = 81) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 328, Real ops = 87, Vars = 83) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 328, Real ops = 87, Vars = 83) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 328, Real ops = 87, Vars = 81) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 272, Real ops = 84, Vars = 61) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 258, Real ops = 84, Vars = 60) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 258, Real ops = 84, Vars = 60) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 258, Real ops = 84, Vars = 62) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 258, Real ops = 84, Vars = 62) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 264, Real ops = 84, Vars = 82) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 303, Real ops = 77, Vars = 23) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 303, Real ops = 77, Vars = 25) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 303, Real ops = 77, Vars = 27) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 303, Real ops = 77, Vars = 23) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 303, Real ops = 77, Vars = 25) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 303, Real ops = 77, Vars = 23) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 303, Real ops = 77, Vars = 25) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 303, Real ops = 77, Vars = 25) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 303, Real ops = 77, Vars = 23) (SOL-10)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(34): Loop '/edge_detect/core/SHIFT' iterated at most 3 times. (LOOP-2)
# $PROJECT_HOME/../edge_detect_c/edge6.c(84): Loop '/edge_detect/core/ACC_GX:for' iterated at most 3 times. (LOOP-2)
# $PROJECT_HOME/../edge_detect_c/edge6.c(83): Loop '/edge_detect/core/ACC_GX' iterated at most 3 times. (LOOP-2)
# $PROJECT_HOME/../edge_detect_c/edge6.c(92): Loop '/edge_detect/core/ACC_GY:for' iterated at most 3 times. (LOOP-2)
# $PROJECT_HOME/../edge_detect_c/edge6.c(91): Loop '/edge_detect/core/ACC_GY' iterated at most 3 times. (LOOP-2)
# $PROJECT_HOME/../edge_detect_c/edge6.c(67): Loop '/edge_detect/core/FRAME' iterated at most 1 times. (LOOP-2)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 315, Real ops = 73, Vars = 25) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 266, Real ops = 68, Vars = 25) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 266, Real ops = 68, Vars = 27) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 261, Real ops = 68, Vars = 30) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 255, Real ops = 68, Vars = 25) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 255, Real ops = 68, Vars = 27) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 255, Real ops = 68, Vars = 25) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 255, Real ops = 68, Vars = 27) (SOL-10)
# Design 'edge_detect' was read (SOL-1)
# Info: Completed transformation 'compile' on solution 'edge_detect.v15': elapsed time 7.60 seconds, memory usage 348376kB, peak memory usage 414844kB (SOL-9)
directive set /edge_detect/core/main/SHIFT -UNROLL yes
# /edge_detect/core/main/SHIFT/UNROLL yes
directive set /edge_detect/core/main/ACC_GX/ACC_GX:for -UNROLL yes
# /edge_detect/core/main/ACC_GX/ACC_GX:for/UNROLL yes
directive set /edge_detect/core/main/ACC_GY/ACC_GY:for -UNROLL yes
# /edge_detect/core/main/ACC_GY/ACC_GY:for/UNROLL yes
go allocate
# Info: Starting transformation 'architect' on solution 'edge_detect.v15' (SOL-8)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(34): Loop '/edge_detect/core/SHIFT' is being fully unrolled (3 times). (LOOP-7)
# $PROJECT_HOME/../edge_detect_c/edge6.c(84): Loop '/edge_detect/core/ACC_GX:for' is being fully unrolled (3 times). (LOOP-7)
# $PROJECT_HOME/../edge_detect_c/edge6.c(92): Loop '/edge_detect/core/ACC_GY:for' is being fully unrolled (3 times). (LOOP-7)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 418, Real ops = 137, Vars = 25) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 279, Real ops = 68, Vars = 30) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 283, Real ops = 62, Vars = 26) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 259, Real ops = 62, Vars = 26) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 259, Real ops = 62, Vars = 26) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 244, Real ops = 60, Vars = 22) (SOL-10)
# $PROJECT_HOME/../edge_detect_c/edge6.c(83): Loop '/edge_detect/core/ACC_GX' is left rolled. (LOOP-4)
# $PROJECT_HOME/../edge_detect_c/edge6.c(91): Loop '/edge_detect/core/ACC_GY' is left rolled. (LOOP-4)
# $PROJECT_HOME/../edge_detect_c/edge6.c(50): Loop '/edge_detect/core/main' is being partially unrolled 2 times. (LOOP-3)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 486, Real ops = 119, Vars = 22) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 486, Real ops = 119, Vars = 43) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 486, Real ops = 119, Vars = 43) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 485, Real ops = 119, Vars = 45) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 486, Real ops = 119, Vars = 45) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 486, Real ops = 119, Vars = 50) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 486, Real ops = 119, Vars = 45) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 486, Real ops = 119, Vars = 50) (SOL-10)
# Loop 'main-1:ACC_GY' is merged and folded into Loop 'main-1:ACC_GX' (LOOP-9)
# Loop 'main-2:ACC_GY' is merged and folded into Loop 'main-2:ACC_GX' (LOOP-9)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 496, Real ops = 121, Vars = 49) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 492, Real ops = 121, Vars = 49) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 482, Real ops = 117, Vars = 45) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 480, Real ops = 117, Vars = 43) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 480, Real ops = 117, Vars = 48) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 480, Real ops = 117, Vars = 43) (SOL-10)
# $PROJECT_HOME/../edge_detect_c/edge6.c(50): I/O-Port inferred - resource 'vin:rsc' (from var: vin) mapped to 'mgc_ioport.mgc_in_wire' (size: 90). (MEM-2)
# $PROJECT_HOME/../edge_detect_c/edge6.c(50): I/O-Port inferred - resource 'vout:rsc' (from var: vout) mapped to 'mgc_ioport.mgc_out_stdreg' (size: 30). (MEM-2)
# Info: Optimizing partition '/edge_detect': (Total ops = 484, Real ops = 117, Vars = 48) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 484, Real ops = 117, Vars = 43) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 483, Real ops = 117, Vars = 43) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 483, Real ops = 117, Vars = 48) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 484, Real ops = 117, Vars = 50) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 484, Real ops = 117, Vars = 45) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 479, Real ops = 117, Vars = 44) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 479, Real ops = 117, Vars = 49) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 479, Real ops = 117, Vars = 44) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 479, Real ops = 117, Vars = 49) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 485, Real ops = 117, Vars = 46) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 1016, Real ops = 207, Vars = 355) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 596, Real ops = 179, Vars = 92) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 595, Real ops = 179, Vars = 91) (SOL-10)
# Design 'edge_detect' contains '301' real operations. (SOL-11)
# Info: Completed transformation 'architect' on solution 'edge_detect.v15': elapsed time 24.57 seconds, memory usage 349044kB, peak memory usage 414844kB (SOL-9)
# Info: Starting transformation 'allocate' on solution 'edge_detect.v15' (SOL-8)
# Performing concurrent resource allocation and scheduling on '/edge_detect/core' (CRAAS-1)
# Info: Select qualified components for data operations ... (CRAAS-3)
# Info: Apply resource constraints on data operations ... (CRAAS-4)
# $PROJECT_HOME/../edge_detect_c/edge6.c(50): Prescheduled LOOP 'main' (3 c-steps) (SCHD-7)
# $PROJECT_HOME/../edge_detect_c/edge6.c(50): Prescheduled LOOP 'core:rlp' (0 c-steps) (SCHD-7)
# $PROJECT_HOME/../edge_detect_c/edge6.c(50): Prescheduled SEQUENTIAL 'core' (total length 3 c-steps) (SCHD-8)
# Error:  insufficient resources 'mgc_ioport.mgc_in_wire(1,90)' to schedule 'core'. 2 are needed, but only 1 instances are available (SCHD-4)
# Error: Design 'edge_detect' could not schedule partition '/edge_detect/core' - resource competition
go compile
directive set /edge_detect/core/main -UNROLL no
# Info: Branching solution 'edge_detect.v16' at state 'compile' (PRJ-2)
# /edge_detect/core/main/UNROLL no
go allocate
# Info: Starting transformation 'architect' on solution 'edge_detect.v16' (SOL-8)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(34): Loop '/edge_detect/core/SHIFT' is being fully unrolled (3 times). (LOOP-7)
# $PROJECT_HOME/../edge_detect_c/edge6.c(84): Loop '/edge_detect/core/ACC_GX:for' is being fully unrolled (3 times). (LOOP-7)
# $PROJECT_HOME/../edge_detect_c/edge6.c(92): Loop '/edge_detect/core/ACC_GY:for' is being fully unrolled (3 times). (LOOP-7)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 418, Real ops = 137, Vars = 25) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 279, Real ops = 68, Vars = 30) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 283, Real ops = 62, Vars = 26) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 259, Real ops = 62, Vars = 26) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 259, Real ops = 62, Vars = 26) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 244, Real ops = 60, Vars = 22) (SOL-10)
# $PROJECT_HOME/../edge_detect_c/edge6.c(83): Loop '/edge_detect/core/ACC_GX' is left rolled. (LOOP-4)
# $PROJECT_HOME/../edge_detect_c/edge6.c(91): Loop '/edge_detect/core/ACC_GY' is left rolled. (LOOP-4)
# $PROJECT_HOME/../edge_detect_c/edge6.c(50): Loop '/edge_detect/core/main' is left rolled. (LOOP-4)
# Info: Optimizing partition '/edge_detect': (Total ops = 244, Real ops = 60, Vars = 27) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 244, Real ops = 60, Vars = 22) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 244, Real ops = 60, Vars = 27) (SOL-10)
# Loop 'ACC_GY' is merged and folded into Loop 'ACC_GX' (LOOP-9)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 249, Real ops = 61, Vars = 24) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 247, Real ops = 61, Vars = 24) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 242, Real ops = 59, Vars = 22) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 241, Real ops = 59, Vars = 21) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 241, Real ops = 59, Vars = 26) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 241, Real ops = 59, Vars = 21) (SOL-10)
# $PROJECT_HOME/../edge_detect_c/edge6.c(50): I/O-Port inferred - resource 'vin:rsc' (from var: vin) mapped to 'mgc_ioport.mgc_in_wire' (size: 90). (MEM-2)
# $PROJECT_HOME/../edge_detect_c/edge6.c(50): I/O-Port inferred - resource 'vout:rsc' (from var: vout) mapped to 'mgc_ioport.mgc_out_stdreg' (size: 30). (MEM-2)
# Info: Optimizing partition '/edge_detect': (Total ops = 243, Real ops = 59, Vars = 26) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 243, Real ops = 59, Vars = 21) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 243, Real ops = 59, Vars = 28) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 243, Real ops = 59, Vars = 23) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 242, Real ops = 59, Vars = 23) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 242, Real ops = 59, Vars = 28) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 242, Real ops = 59, Vars = 23) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 242, Real ops = 59, Vars = 28) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 245, Real ops = 59, Vars = 24) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 244, Real ops = 59, Vars = 24) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 474, Real ops = 82, Vars = 161) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 286, Real ops = 79, Vars = 42) (SOL-10)
# Design 'edge_detect' contains '140' real operations. (SOL-11)
# Info: Completed transformation 'architect' on solution 'edge_detect.v16': elapsed time 22.15 seconds, memory usage 352772kB, peak memory usage 414844kB (SOL-9)
# Info: Starting transformation 'allocate' on solution 'edge_detect.v16' (SOL-8)
# Performing concurrent resource allocation and scheduling on '/edge_detect/core' (CRAAS-1)
# Info: Select qualified components for data operations ... (CRAAS-3)
# Info: Apply resource constraints on data operations ... (CRAAS-4)
# $PROJECT_HOME/../edge_detect_c/edge6.c(50): Prescheduled LOOP 'main' (3 c-steps) (SCHD-7)
# $PROJECT_HOME/../edge_detect_c/edge6.c(50): Prescheduled LOOP 'core:rlp' (0 c-steps) (SCHD-7)
# $PROJECT_HOME/../edge_detect_c/edge6.c(50): Prescheduled SEQUENTIAL 'core' (total length 3 c-steps) (SCHD-8)
# Info: Initial schedule of SEQUENTIAL 'core': Latency = 4, Area (Datapath, Register, Total) = 6175.06, 0.00, 6175.06 (CRAAS-11)
# At least one feasible schedule exists. (CRAAS-9)
# Info: Optimized LOOP 'main': Latency = 4, Area (Datapath, Register, Total) = 6173.67, 0.00, 6173.67 (CRAAS-10)
# Info: Optimized LOOP 'main': Latency = 4, Area (Datapath, Register, Total) = 6141.31, 0.00, 6141.31 (CRAAS-10)
# Info: Optimized LOOP 'main': Latency = 4, Area (Datapath, Register, Total) = 6139.79, 0.00, 6139.79 (CRAAS-10)
# Info: Final schedule of SEQUENTIAL 'core': Latency = 4, Area (Datapath, Register, Total) = 6139.79, 0.00, 6139.79 (CRAAS-12)
# Resource allocation and scheduling done. (CRAAS-2)
# Netlist written to file 'schedule.gnt' (NET-4)
# Info: Completed transformation 'allocate' on solution 'edge_detect.v16': elapsed time 2.45 seconds, memory usage 354100kB, peak memory usage 414844kB (SOL-9)
# File '$PROJECT_HOME/../edge_detect_c/edge6.c' saved
# Input file has changed
go new
solution file set {$PROJECT_HOME/../edge_detect_c/edge6.c} -updated
# Info: Branching solution 'solution.v3' at state 'new' (PRJ-2)
go allocate
# Info: Starting transformation 'analyze' on solution 'solution.v3' (SOL-8)
# Front End called with arguments: -- {C:\fpga-catapult-c-spring\edge_detect_c\edge6.c} {C:\fpga-catapult-c-spring\edge_detect_c\shift_class.h} {C:\fpga-catapult-c-spring\edge_detect_c\edge.h} (CIN-69)
# Edison Design Group C++/C Front End - Version 3.10.1 (CIN-1)
# Warning: $PROJECT_HOME/../edge_detect_c/edge6.c(133): $PROJECT_HOME/../edge_detect_c/edge6.c(133): last line of file ends without a newline (CRD-1)
# $PROJECT_HOME/../edge_detect_c/edge6.c(49): Pragma 'hls_design<top>' detected on routine 'edge_detect' (CIN-6)
# Source file analysis completed (CIN-68)
# Info: Completed transformation 'analyze' on solution 'solution.v3': elapsed time 1.81 seconds, memory usage 386492kB, peak memory usage 425172kB (SOL-9)
# Info: Starting transformation 'compile' on solution 'solution.v3' (SOL-8)
# Generating synthesis internal form... (CIN-3)
# $PROJECT_HOME/../edge_detect_c/edge6.c(50): Found top design routine 'edge_detect' specified by directive (CIN-52)
# $PROJECT_HOME/../edge_detect_c/edge6.c(50): Synthesizing routine 'edge_detect' (CIN-13)
# $PROJECT_HOME/../edge_detect_c/edge6.c(50): Inlining routine 'edge_detect' (CIN-14)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(13): Inlining member function 'shift_class<ac_int<90, false>, 3>::shift_class' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(32): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator<<' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(48): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(48): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(48): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/edge6.c(50): Optimizing block '/edge_detect' ... (CIN-4)
# $PROJECT_HOME/../edge_detect_c/edge6.c(50): Inout port 'vin' is only used as an input. (OPT-10)
# $PROJECT_HOME/../edge_detect_c/edge6.c(50): Inout port 'vout' is only used as an output. (OPT-11)
# Info: Optimizing partition '/edge_detect': (Total ops = 173, Real ops = 40, Vars = 52) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 173, Real ops = 40, Vars = 50) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 165, Real ops = 36, Vars = 51) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 165, Real ops = 36, Vars = 53) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 165, Real ops = 36, Vars = 53) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 165, Real ops = 36, Vars = 51) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 30, Real ops = 10, Vars = 11) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 23, Real ops = 7, Vars = 9) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 23, Real ops = 7, Vars = 9) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 23, Real ops = 7, Vars = 11) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 23, Real ops = 7, Vars = 11) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 20, Real ops = 7, Vars = 12) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 7, Real ops = 3, Vars = 2) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 7, Real ops = 3, Vars = 4) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 7, Real ops = 3, Vars = 2) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 7, Real ops = 3, Vars = 4) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 7, Real ops = 3, Vars = 4) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 7, Real ops = 3, Vars = 2) (SOL-10)
# $PROJECT_HOME/../edge_detect_c/edge6.c(67): Loop '/edge_detect/core/FRAME' iterated at most 1 times. (LOOP-2)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 2, Real ops = 0, Vars = 1) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 2, Real ops = 0, Vars = 3) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 2, Real ops = 0, Vars = 1) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 2, Real ops = 0, Vars = 3) (SOL-10)
# Design 'edge_detect' was read (SOL-1)
# Info: Completed transformation 'compile' on solution 'edge_detect.v17': elapsed time 7.15 seconds, memory usage 358732kB, peak memory usage 425172kB (SOL-9)
# Info: Starting transformation 'architect' on solution 'edge_detect.v17' (SOL-8)
# $PROJECT_HOME/../edge_detect_c/edge6.c(50): Loop '/edge_detect/core/main' is left rolled. (LOOP-4)
# $PROJECT_HOME/../edge_detect_c/edge6.c(50): I/O-Port inferred - resource 'vin:rsc' (from var: vin) mapped to 'mgc_ioport.mgc_in_wire' (size: 90). (MEM-2)
# $PROJECT_HOME/../edge_detect_c/edge6.c(50): I/O-Port inferred - resource 'vout:rsc' (from var: vout) mapped to 'mgc_ioport.mgc_out_stdreg' (size: 30). (MEM-2)
# Info: Optimizing partition '/edge_detect': (Total ops = 3, Real ops = 1, Vars = 6) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 3, Real ops = 1, Vars = 1) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 1, Real ops = 1, Vars = 0) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 1, Real ops = 1, Vars = 0) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 1, Real ops = 1, Vars = 5) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 1, Real ops = 1, Vars = 0) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 1, Real ops = 1, Vars = 5) (SOL-10)
# Info: $PROJECT_HOME/../edge_detect_c/edge6.c(50): Partition '/edge_detect/core' is found empty and is optimized away. (OPT-12)
# Error: Design has been completely optimized away.  (SOL-12)
# Info: Optimizing partition '/edge_detect': (Total ops = 0, Real ops = 0, Vars = 5) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 0, Real ops = 0, Vars = 5) (SOL-10)
# Error: Design has been completely optimized away.  (SOL-12)
# Error: go: error transforming design
go allocate
# File '$PROJECT_HOME/../edge_detect_c/edge6.c' saved
# Info: Starting transformation 'architect' on solution 'edge_detect.v17' (SOL-8)
# File '$PROJECT_HOME/../edge_detect_c/edge6.c' saved
# $PROJECT_HOME/../edge_detect_c/edge6.c(50): Loop '/edge_detect/core/main' is left rolled. (LOOP-4)
# $PROJECT_HOME/../edge_detect_c/edge6.c(50): I/O-Port inferred - resource 'vin:rsc' (from var: vin) mapped to 'mgc_ioport.mgc_in_wire' (size: 90). (MEM-2)
# $PROJECT_HOME/../edge_detect_c/edge6.c(50): I/O-Port inferred - resource 'vout:rsc' (from var: vout) mapped to 'mgc_ioport.mgc_out_stdreg' (size: 30). (MEM-2)
# Info: Optimizing partition '/edge_detect': (Total ops = 3, Real ops = 1, Vars = 6) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 3, Real ops = 1, Vars = 1) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 1, Real ops = 1, Vars = 0) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 1, Real ops = 1, Vars = 0) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 1, Real ops = 1, Vars = 5) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 1, Real ops = 1, Vars = 0) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 1, Real ops = 1, Vars = 5) (SOL-10)
# Info: $PROJECT_HOME/../edge_detect_c/edge6.c(50): Partition '/edge_detect/core' is found empty and is optimized away. (OPT-12)
# Error: Design has been completely optimized away.  (SOL-12)
# Info: Optimizing partition '/edge_detect': (Total ops = 0, Real ops = 0, Vars = 5) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 0, Real ops = 0, Vars = 5) (SOL-10)
# Error: Design has been completely optimized away.  (SOL-12)
# Error: go: error transforming design
# Input file has changed
go new
solution file set {$PROJECT_HOME/../edge_detect_c/edge6.c} -updated
# Info: Branching solution 'solution.v3' at state 'new' (PRJ-2)
go allocate
# Info: Starting transformation 'analyze' on solution 'solution.v3' (SOL-8)
# Front End called with arguments: -- {C:\fpga-catapult-c-spring\edge_detect_c\edge6.c} {C:\fpga-catapult-c-spring\edge_detect_c\shift_class.h} {C:\fpga-catapult-c-spring\edge_detect_c\edge.h} (CIN-69)
# Edison Design Group C++/C Front End - Version 3.10.1 (CIN-1)
# Warning: $PROJECT_HOME/../edge_detect_c/edge6.c(133): $PROJECT_HOME/../edge_detect_c/edge6.c(133): last line of file ends without a newline (CRD-1)
# $PROJECT_HOME/../edge_detect_c/edge6.c(49): Pragma 'hls_design<top>' detected on routine 'edge_detect' (CIN-6)
# Source file analysis completed (CIN-68)
# Info: Completed transformation 'analyze' on solution 'solution.v3': elapsed time 1.81 seconds, memory usage 390836kB, peak memory usage 427620kB (SOL-9)
# Info: Starting transformation 'compile' on solution 'solution.v3' (SOL-8)
# Generating synthesis internal form... (CIN-3)
# $PROJECT_HOME/../edge_detect_c/edge6.c(50): Found top design routine 'edge_detect' specified by directive (CIN-52)
# $PROJECT_HOME/../edge_detect_c/edge6.c(50): Synthesizing routine 'edge_detect' (CIN-13)
# $PROJECT_HOME/../edge_detect_c/edge6.c(50): Inlining routine 'edge_detect' (CIN-14)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(13): Inlining member function 'shift_class<ac_int<90, false>, 3>::shift_class' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(32): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator<<' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(48): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(48): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(48): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/edge6.c(50): Optimizing block '/edge_detect' ... (CIN-4)
# $PROJECT_HOME/../edge_detect_c/edge6.c(50): Inout port 'vin' is only used as an input. (OPT-10)
# $PROJECT_HOME/../edge_detect_c/edge6.c(50): Inout port 'vout' is only used as an output. (OPT-11)
# Info: Optimizing partition '/edge_detect': (Total ops = 173, Real ops = 40, Vars = 52) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 173, Real ops = 40, Vars = 50) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 165, Real ops = 36, Vars = 51) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 165, Real ops = 36, Vars = 53) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 165, Real ops = 36, Vars = 53) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 165, Real ops = 36, Vars = 51) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 98, Real ops = 33, Vars = 24) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 87, Real ops = 33, Vars = 23) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 87, Real ops = 33, Vars = 23) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 87, Real ops = 33, Vars = 25) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 87, Real ops = 33, Vars = 25) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 84, Real ops = 33, Vars = 29) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 118, Real ops = 31, Vars = 11) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 118, Real ops = 31, Vars = 13) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 117, Real ops = 31, Vars = 15) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 117, Real ops = 31, Vars = 11) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 117, Real ops = 31, Vars = 13) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 117, Real ops = 31, Vars = 11) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 117, Real ops = 31, Vars = 13) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 117, Real ops = 31, Vars = 13) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 117, Real ops = 31, Vars = 11) (SOL-10)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(34): Loop '/edge_detect/core/SHIFT' iterated at most 3 times. (LOOP-2)
# $PROJECT_HOME/../edge_detect_c/edge6.c(82): Loop '/edge_detect/core/ACC_GX:for' iterated at most 3 times. (LOOP-2)
# $PROJECT_HOME/../edge_detect_c/edge6.c(81): Loop '/edge_detect/core/ACC_GX' iterated at most 3 times. (LOOP-2)
# $PROJECT_HOME/../edge_detect_c/edge6.c(67): Loop '/edge_detect/core/FRAME' iterated at most 1 times. (LOOP-2)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 104, Real ops = 27, Vars = 12) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 77, Real ops = 24, Vars = 12) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 77, Real ops = 24, Vars = 14) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 75, Real ops = 24, Vars = 15) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 72, Real ops = 24, Vars = 12) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 72, Real ops = 24, Vars = 14) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 72, Real ops = 24, Vars = 12) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 72, Real ops = 24, Vars = 14) (SOL-10)
# Design 'edge_detect' was read (SOL-1)
# Info: Completed transformation 'compile' on solution 'edge_detect.v18': elapsed time 7.44 seconds, memory usage 361516kB, peak memory usage 427620kB (SOL-9)
# Info: Starting transformation 'architect' on solution 'edge_detect.v18' (SOL-8)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(34): Loop '/edge_detect/core/SHIFT' is being fully unrolled (3 times). (LOOP-7)
# $PROJECT_HOME/../edge_detect_c/edge6.c(82): Loop '/edge_detect/core/ACC_GX:for' is being fully unrolled (3 times). (LOOP-7)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 173, Real ops = 63, Vars = 12) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 84, Real ops = 25, Vars = 15) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 82, Real ops = 19, Vars = 11) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 65, Real ops = 19, Vars = 11) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 65, Real ops = 19, Vars = 11) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 54, Real ops = 17, Vars = 9) (SOL-10)
# $PROJECT_HOME/../edge_detect_c/edge6.c(81): Loop '/edge_detect/core/ACC_GX' is left rolled. (LOOP-4)
# $PROJECT_HOME/../edge_detect_c/edge6.c(50): Loop '/edge_detect/core/main' is left rolled. (LOOP-4)
# Info: Optimizing partition '/edge_detect': (Total ops = 54, Real ops = 17, Vars = 14) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 54, Real ops = 17, Vars = 9) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 54, Real ops = 17, Vars = 14) (SOL-10)
# $PROJECT_HOME/../edge_detect_c/edge6.c(50): I/O-Port inferred - resource 'vin:rsc' (from var: vin) mapped to 'mgc_ioport.mgc_in_wire' (size: 90). (MEM-2)
# $PROJECT_HOME/../edge_detect_c/edge6.c(50): I/O-Port inferred - resource 'vout:rsc' (from var: vout) mapped to 'mgc_ioport.mgc_out_stdreg' (size: 30). (MEM-2)
# Info: Optimizing partition '/edge_detect': (Total ops = 56, Real ops = 17, Vars = 14) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 56, Real ops = 17, Vars = 9) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 56, Real ops = 17, Vars = 16) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 56, Real ops = 17, Vars = 11) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 55, Real ops = 17, Vars = 11) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 55, Real ops = 17, Vars = 16) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 55, Real ops = 17, Vars = 11) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 55, Real ops = 17, Vars = 16) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 58, Real ops = 17, Vars = 12) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 57, Real ops = 17, Vars = 12) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 171, Real ops = 27, Vars = 80) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 70, Real ops = 22, Vars = 22) (SOL-10)
# Design 'edge_detect' contains '43' real operations. (SOL-11)
# Info: Completed transformation 'architect' on solution 'edge_detect.v18': elapsed time 20.76 seconds, memory usage 362132kB, peak memory usage 427620kB (SOL-9)
# Info: Starting transformation 'allocate' on solution 'edge_detect.v18' (SOL-8)
# Performing concurrent resource allocation and scheduling on '/edge_detect/core' (CRAAS-1)
# Info: Select qualified components for data operations ... (CRAAS-3)
# Info: Apply resource constraints on data operations ... (CRAAS-4)
# $PROJECT_HOME/../edge_detect_c/edge6.c(50): Prescheduled LOOP 'main' (2 c-steps) (SCHD-7)
# $PROJECT_HOME/../edge_detect_c/edge6.c(50): Prescheduled LOOP 'core:rlp' (0 c-steps) (SCHD-7)
# $PROJECT_HOME/../edge_detect_c/edge6.c(50): Prescheduled SEQUENTIAL 'core' (total length 2 c-steps) (SCHD-8)
# Info: Initial schedule of SEQUENTIAL 'core': Latency = 3, Area (Datapath, Register, Total) = 2564.31, 0.00, 2564.31 (CRAAS-11)
# At least one feasible schedule exists. (CRAAS-9)
# Info: Optimized LOOP 'main': Latency = 3, Area (Datapath, Register, Total) = 2560.31, 0.00, 2560.31 (CRAAS-10)
# Info: Final schedule of SEQUENTIAL 'core': Latency = 3, Area (Datapath, Register, Total) = 2560.31, 0.00, 2560.31 (CRAAS-12)
# Resource allocation and scheduling done. (CRAAS-2)
# Netlist written to file 'schedule.gnt' (NET-4)
# Info: Completed transformation 'allocate' on solution 'edge_detect.v18': elapsed time 0.58 seconds, memory usage 362564kB, peak memory usage 427620kB (SOL-9)
go extract
# Warning: User stop requested, stopping...
# Error: go: user stop requested
# File '$PROJECT_HOME/../edge_detect_c/edge6.c' saved
# Input file has changed
go new
solution file set {$PROJECT_HOME/../edge_detect_c/edge6.c} -updated
# Info: Branching solution 'solution.v3' at state 'new' (PRJ-2)
go allocate
# Info: Starting transformation 'analyze' on solution 'solution.v3' (SOL-8)
# Front End called with arguments: -- {C:\fpga-catapult-c-spring\edge_detect_c\edge6.c} {C:\fpga-catapult-c-spring\edge_detect_c\shift_class.h} {C:\fpga-catapult-c-spring\edge_detect_c\edge.h} (CIN-69)
# Edison Design Group C++/C Front End - Version 3.10.1 (CIN-1)
# Warning: $PROJECT_HOME/../edge_detect_c/edge6.c(133): $PROJECT_HOME/../edge_detect_c/edge6.c(133): last line of file ends without a newline (CRD-1)
# $PROJECT_HOME/../edge_detect_c/edge6.c(49): Pragma 'hls_design<top>' detected on routine 'edge_detect' (CIN-6)
# Source file analysis completed (CIN-68)
# Info: Completed transformation 'analyze' on solution 'solution.v3': elapsed time 1.78 seconds, memory usage 395324kB, peak memory usage 432244kB (SOL-9)
# Info: Starting transformation 'compile' on solution 'solution.v3' (SOL-8)
# Generating synthesis internal form... (CIN-3)
# $PROJECT_HOME/../edge_detect_c/edge6.c(50): Found top design routine 'edge_detect' specified by directive (CIN-52)
# $PROJECT_HOME/../edge_detect_c/edge6.c(50): Synthesizing routine 'edge_detect' (CIN-13)
# $PROJECT_HOME/../edge_detect_c/edge6.c(50): Inlining routine 'edge_detect' (CIN-14)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(13): Inlining member function 'shift_class<ac_int<90, false>, 3>::shift_class' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(32): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator<<' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(48): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(48): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(48): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(48): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(48): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(48): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/edge6.c(50): Optimizing block '/edge_detect' ... (CIN-4)
# $PROJECT_HOME/../edge_detect_c/edge6.c(50): Inout port 'vin' is only used as an input. (OPT-10)
# $PROJECT_HOME/../edge_detect_c/edge6.c(50): Inout port 'vout' is only used as an output. (OPT-11)
# Info: Optimizing partition '/edge_detect': (Total ops = 235, Real ops = 66, Vars = 59) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 235, Real ops = 66, Vars = 57) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 213, Real ops = 56, Vars = 59) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 213, Real ops = 56, Vars = 61) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 213, Real ops = 56, Vars = 61) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 213, Real ops = 56, Vars = 59) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 108, Real ops = 39, Vars = 24) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 97, Real ops = 39, Vars = 23) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 97, Real ops = 39, Vars = 23) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 97, Real ops = 39, Vars = 25) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 97, Real ops = 39, Vars = 25) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 94, Real ops = 39, Vars = 29) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 128, Real ops = 37, Vars = 13) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 128, Real ops = 37, Vars = 15) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 127, Real ops = 37, Vars = 17) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 127, Real ops = 37, Vars = 13) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 127, Real ops = 37, Vars = 15) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 127, Real ops = 37, Vars = 13) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 127, Real ops = 37, Vars = 15) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 127, Real ops = 37, Vars = 15) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 127, Real ops = 37, Vars = 13) (SOL-10)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(34): Loop '/edge_detect/core/SHIFT' iterated at most 3 times. (LOOP-2)
# $PROJECT_HOME/../edge_detect_c/edge6.c(82): Loop '/edge_detect/core/ACC_GX:for' iterated at most 3 times. (LOOP-2)
# $PROJECT_HOME/../edge_detect_c/edge6.c(81): Loop '/edge_detect/core/ACC_GX' iterated at most 3 times. (LOOP-2)
# $PROJECT_HOME/../edge_detect_c/edge6.c(90): Loop '/edge_detect/core/ACC_GY:for' iterated at most 3 times. (LOOP-2)
# $PROJECT_HOME/../edge_detect_c/edge6.c(89): Loop '/edge_detect/core/ACC_GY' iterated at most 3 times. (LOOP-2)
# $PROJECT_HOME/../edge_detect_c/edge6.c(67): Loop '/edge_detect/core/FRAME' iterated at most 1 times. (LOOP-2)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 104, Real ops = 27, Vars = 12) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 77, Real ops = 24, Vars = 12) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 77, Real ops = 24, Vars = 14) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 75, Real ops = 24, Vars = 15) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 72, Real ops = 24, Vars = 12) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 72, Real ops = 24, Vars = 14) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 72, Real ops = 24, Vars = 12) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 72, Real ops = 24, Vars = 14) (SOL-10)
# Design 'edge_detect' was read (SOL-1)
# Info: Completed transformation 'compile' on solution 'edge_detect.v19': elapsed time 7.55 seconds, memory usage 399844kB, peak memory usage 432244kB (SOL-9)
# Info: Starting transformation 'architect' on solution 'edge_detect.v19' (SOL-8)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(34): Loop '/edge_detect/core/SHIFT' is being fully unrolled (3 times). (LOOP-7)
# $PROJECT_HOME/../edge_detect_c/edge6.c(82): Loop '/edge_detect/core/ACC_GX:for' is being fully unrolled (3 times). (LOOP-7)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 173, Real ops = 63, Vars = 12) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 84, Real ops = 25, Vars = 15) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 82, Real ops = 19, Vars = 11) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 65, Real ops = 19, Vars = 11) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 65, Real ops = 19, Vars = 11) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 54, Real ops = 17, Vars = 9) (SOL-10)
# $PROJECT_HOME/../edge_detect_c/edge6.c(81): Loop '/edge_detect/core/ACC_GX' is left rolled. (LOOP-4)
# $PROJECT_HOME/../edge_detect_c/edge6.c(50): Loop '/edge_detect/core/main' is left rolled. (LOOP-4)
# Info: Optimizing partition '/edge_detect': (Total ops = 54, Real ops = 17, Vars = 14) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 54, Real ops = 17, Vars = 9) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 54, Real ops = 17, Vars = 14) (SOL-10)
# $PROJECT_HOME/../edge_detect_c/edge6.c(50): I/O-Port inferred - resource 'vin:rsc' (from var: vin) mapped to 'mgc_ioport.mgc_in_wire' (size: 90). (MEM-2)
# $PROJECT_HOME/../edge_detect_c/edge6.c(50): I/O-Port inferred - resource 'vout:rsc' (from var: vout) mapped to 'mgc_ioport.mgc_out_stdreg' (size: 30). (MEM-2)
# Info: Optimizing partition '/edge_detect': (Total ops = 56, Real ops = 17, Vars = 14) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 56, Real ops = 17, Vars = 9) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 56, Real ops = 17, Vars = 16) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 56, Real ops = 17, Vars = 11) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 55, Real ops = 17, Vars = 11) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 55, Real ops = 17, Vars = 16) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 55, Real ops = 17, Vars = 11) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 55, Real ops = 17, Vars = 16) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 58, Real ops = 17, Vars = 12) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 57, Real ops = 17, Vars = 12) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 171, Real ops = 27, Vars = 80) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 70, Real ops = 22, Vars = 22) (SOL-10)
# Design 'edge_detect' contains '43' real operations. (SOL-11)
# Info: Completed transformation 'architect' on solution 'edge_detect.v19': elapsed time 20.97 seconds, memory usage 399844kB, peak memory usage 432244kB (SOL-9)
# Info: Starting transformation 'allocate' on solution 'edge_detect.v19' (SOL-8)
# Performing concurrent resource allocation and scheduling on '/edge_detect/core' (CRAAS-1)
# Info: Select qualified components for data operations ... (CRAAS-3)
# Info: Apply resource constraints on data operations ... (CRAAS-4)
# $PROJECT_HOME/../edge_detect_c/edge6.c(50): Prescheduled LOOP 'main' (2 c-steps) (SCHD-7)
# $PROJECT_HOME/../edge_detect_c/edge6.c(50): Prescheduled LOOP 'core:rlp' (0 c-steps) (SCHD-7)
# $PROJECT_HOME/../edge_detect_c/edge6.c(50): Prescheduled SEQUENTIAL 'core' (total length 2 c-steps) (SCHD-8)
# Info: Initial schedule of SEQUENTIAL 'core': Latency = 3, Area (Datapath, Register, Total) = 2564.31, 0.00, 2564.31 (CRAAS-11)
# At least one feasible schedule exists. (CRAAS-9)
# Info: Optimized LOOP 'main': Latency = 3, Area (Datapath, Register, Total) = 2560.31, 0.00, 2560.31 (CRAAS-10)
# Info: Final schedule of SEQUENTIAL 'core': Latency = 3, Area (Datapath, Register, Total) = 2560.31, 0.00, 2560.31 (CRAAS-12)
# Resource allocation and scheduling done. (CRAAS-2)
# Netlist written to file 'schedule.gnt' (NET-4)
# Info: Completed transformation 'allocate' on solution 'edge_detect.v19': elapsed time 0.64 seconds, memory usage 399844kB, peak memory usage 432244kB (SOL-9)
# File '$PROJECT_HOME/../edge_detect_c/edge6.c' saved
# Input file has changed
go new
solution file set {$PROJECT_HOME/../edge_detect_c/edge6.c} -updated
# Info: Branching solution 'solution.v3' at state 'new' (PRJ-2)
go allocate
# Info: Starting transformation 'analyze' on solution 'solution.v3' (SOL-8)
# Front End called with arguments: -- {C:\fpga-catapult-c-spring\edge_detect_c\edge6.c} {C:\fpga-catapult-c-spring\edge_detect_c\shift_class.h} {C:\fpga-catapult-c-spring\edge_detect_c\edge.h} (CIN-69)
# Edison Design Group C++/C Front End - Version 3.10.1 (CIN-1)
# Warning: $PROJECT_HOME/../edge_detect_c/edge6.c(133): $PROJECT_HOME/../edge_detect_c/edge6.c(133): last line of file ends without a newline (CRD-1)
# $PROJECT_HOME/../edge_detect_c/edge6.c(49): Pragma 'hls_design<top>' detected on routine 'edge_detect' (CIN-6)
# Source file analysis completed (CIN-68)
# Info: Completed transformation 'analyze' on solution 'solution.v3': elapsed time 1.76 seconds, memory usage 404144kB, peak memory usage 442696kB (SOL-9)
# Info: Starting transformation 'compile' on solution 'solution.v3' (SOL-8)
# Generating synthesis internal form... (CIN-3)
# $PROJECT_HOME/../edge_detect_c/edge6.c(50): Found top design routine 'edge_detect' specified by directive (CIN-52)
# $PROJECT_HOME/../edge_detect_c/edge6.c(50): Synthesizing routine 'edge_detect' (CIN-13)
# $PROJECT_HOME/../edge_detect_c/edge6.c(50): Inlining routine 'edge_detect' (CIN-14)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(13): Inlining member function 'shift_class<ac_int<90, false>, 3>::shift_class' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(32): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator<<' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(48): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(48): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(48): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(48): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(48): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(48): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/edge6.c(50): Optimizing block '/edge_detect' ... (CIN-4)
# $PROJECT_HOME/../edge_detect_c/edge6.c(50): Inout port 'vin' is only used as an input. (OPT-10)
# $PROJECT_HOME/../edge_detect_c/edge6.c(50): Inout port 'vout' is only used as an output. (OPT-11)
# Info: Optimizing partition '/edge_detect': (Total ops = 242, Real ops = 67, Vars = 60) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 242, Real ops = 67, Vars = 58) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 220, Real ops = 57, Vars = 60) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 220, Real ops = 57, Vars = 62) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 220, Real ops = 57, Vars = 62) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 220, Real ops = 57, Vars = 60) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 155, Real ops = 54, Vars = 37) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 141, Real ops = 54, Vars = 36) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 141, Real ops = 54, Vars = 36) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 141, Real ops = 54, Vars = 38) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 141, Real ops = 54, Vars = 38) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 138, Real ops = 54, Vars = 47) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 164, Real ops = 54, Vars = 19) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 164, Real ops = 54, Vars = 21) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 164, Real ops = 54, Vars = 23) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 164, Real ops = 54, Vars = 19) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 164, Real ops = 54, Vars = 21) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 164, Real ops = 54, Vars = 19) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 164, Real ops = 54, Vars = 21) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 164, Real ops = 54, Vars = 21) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 164, Real ops = 54, Vars = 19) (SOL-10)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(34): Loop '/edge_detect/core/SHIFT' iterated at most 3 times. (LOOP-2)
# $PROJECT_HOME/../edge_detect_c/edge6.c(82): Loop '/edge_detect/core/ACC_GX:for' iterated at most 3 times. (LOOP-2)
# $PROJECT_HOME/../edge_detect_c/edge6.c(81): Loop '/edge_detect/core/ACC_GX' iterated at most 3 times. (LOOP-2)
# $PROJECT_HOME/../edge_detect_c/edge6.c(90): Loop '/edge_detect/core/ACC_GY:for' iterated at most 3 times. (LOOP-2)
# $PROJECT_HOME/../edge_detect_c/edge6.c(89): Loop '/edge_detect/core/ACC_GY' iterated at most 3 times. (LOOP-2)
# $PROJECT_HOME/../edge_detect_c/edge6.c(67): Loop '/edge_detect/core/FRAME' iterated at most 1 times. (LOOP-2)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 173, Real ops = 50, Vars = 21) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 125, Real ops = 45, Vars = 21) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 125, Real ops = 45, Vars = 23) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 120, Real ops = 45, Vars = 26) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 114, Real ops = 45, Vars = 21) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 114, Real ops = 45, Vars = 23) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 114, Real ops = 45, Vars = 21) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 114, Real ops = 45, Vars = 23) (SOL-10)
# Design 'edge_detect' was read (SOL-1)
# Info: Completed transformation 'compile' on solution 'edge_detect.v20': elapsed time 8.21 seconds, memory usage 375404kB, peak memory usage 442696kB (SOL-9)
# Info: Starting transformation 'architect' on solution 'edge_detect.v20' (SOL-8)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(34): Loop '/edge_detect/core/SHIFT' is being fully unrolled (3 times). (LOOP-7)
# $PROJECT_HOME/../edge_detect_c/edge6.c(82): Loop '/edge_detect/core/ACC_GX:for' is being fully unrolled (3 times). (LOOP-7)
# $PROJECT_HOME/../edge_detect_c/edge6.c(90): Loop '/edge_detect/core/ACC_GY:for' is being fully unrolled (3 times). (LOOP-7)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 277, Real ops = 114, Vars = 21) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 138, Real ops = 45, Vars = 26) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 142, Real ops = 39, Vars = 22) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 118, Real ops = 39, Vars = 22) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 118, Real ops = 39, Vars = 22) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 103, Real ops = 37, Vars = 18) (SOL-10)
# $PROJECT_HOME/../edge_detect_c/edge6.c(81): Loop '/edge_detect/core/ACC_GX' is left rolled. (LOOP-4)
# $PROJECT_HOME/../edge_detect_c/edge6.c(89): Loop '/edge_detect/core/ACC_GY' is left rolled. (LOOP-4)
# $PROJECT_HOME/../edge_detect_c/edge6.c(50): Loop '/edge_detect/core/main' is left rolled. (LOOP-4)
# Info: Optimizing partition '/edge_detect': (Total ops = 103, Real ops = 37, Vars = 23) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 103, Real ops = 37, Vars = 18) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 103, Real ops = 37, Vars = 23) (SOL-10)
# Loop 'ACC_GY' is merged and folded into Loop 'ACC_GX' (LOOP-9)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 108, Real ops = 38, Vars = 20) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 106, Real ops = 38, Vars = 20) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 101, Real ops = 36, Vars = 18) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 100, Real ops = 36, Vars = 17) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 100, Real ops = 36, Vars = 22) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 100, Real ops = 36, Vars = 17) (SOL-10)
# $PROJECT_HOME/../edge_detect_c/edge6.c(50): I/O-Port inferred - resource 'vin:rsc' (from var: vin) mapped to 'mgc_ioport.mgc_in_wire' (size: 90). (MEM-2)
# $PROJECT_HOME/../edge_detect_c/edge6.c(50): I/O-Port inferred - resource 'vout:rsc' (from var: vout) mapped to 'mgc_ioport.mgc_out_stdreg' (size: 30). (MEM-2)
# Info: Optimizing partition '/edge_detect': (Total ops = 102, Real ops = 36, Vars = 22) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 102, Real ops = 36, Vars = 17) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 102, Real ops = 36, Vars = 24) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 102, Real ops = 36, Vars = 19) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 101, Real ops = 36, Vars = 19) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 101, Real ops = 36, Vars = 24) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 101, Real ops = 36, Vars = 19) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 101, Real ops = 36, Vars = 24) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 104, Real ops = 36, Vars = 20) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 103, Real ops = 36, Vars = 20) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 287, Real ops = 51, Vars = 129) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 132, Real ops = 49, Vars = 35) (SOL-10)
# Design 'edge_detect' contains '84' real operations. (SOL-11)
# Info: Completed transformation 'architect' on solution 'edge_detect.v20': elapsed time 23.23 seconds, memory usage 376128kB, peak memory usage 442696kB (SOL-9)
# Info: Starting transformation 'allocate' on solution 'edge_detect.v20' (SOL-8)
# Performing concurrent resource allocation and scheduling on '/edge_detect/core' (CRAAS-1)
# Info: Select qualified components for data operations ... (CRAAS-3)
# Info: Apply resource constraints on data operations ... (CRAAS-4)
# $PROJECT_HOME/../edge_detect_c/edge6.c(50): Prescheduled LOOP 'main' (2 c-steps) (SCHD-7)
# $PROJECT_HOME/../edge_detect_c/edge6.c(50): Prescheduled LOOP 'core:rlp' (0 c-steps) (SCHD-7)
# $PROJECT_HOME/../edge_detect_c/edge6.c(50): Prescheduled SEQUENTIAL 'core' (total length 2 c-steps) (SCHD-8)
# Info: Initial schedule of SEQUENTIAL 'core': Latency = 3, Area (Datapath, Register, Total) = 5833.50, 0.00, 5833.50 (CRAAS-11)
# At least one feasible schedule exists. (CRAAS-9)
# Info: Optimized LOOP 'main': Latency = 3, Area (Datapath, Register, Total) = 5831.22, 0.00, 5831.22 (CRAAS-10)
# Info: Optimized LOOP 'main': Latency = 3, Area (Datapath, Register, Total) = 5808.95, 0.00, 5808.95 (CRAAS-10)
# Info: Optimized LOOP 'main': Latency = 3, Area (Datapath, Register, Total) = 5798.95, 0.00, 5798.95 (CRAAS-10)
# Info: Final schedule of SEQUENTIAL 'core': Latency = 3, Area (Datapath, Register, Total) = 5798.95, 0.00, 5798.95 (CRAAS-12)
# Resource allocation and scheduling done. (CRAAS-2)
# Netlist written to file 'schedule.gnt' (NET-4)
# Info: Completed transformation 'allocate' on solution 'edge_detect.v20': elapsed time 1.89 seconds, memory usage 377528kB, peak memory usage 442696kB (SOL-9)
# File '$PROJECT_HOME/../edge_detect_c/edge6.c' saved
# File '$PROJECT_HOME/../edge_detect_c/edge6.c' saved
# Input file has changed
go new
solution file set {$PROJECT_HOME/../edge_detect_c/edge6.c} -updated
# Info: Branching solution 'solution.v3' at state 'new' (PRJ-2)
go allocate
# Info: Starting transformation 'analyze' on solution 'solution.v3' (SOL-8)
# Front End called with arguments: -- {C:\fpga-catapult-c-spring\edge_detect_c\edge6.c} {C:\fpga-catapult-c-spring\edge_detect_c\shift_class.h} {C:\fpga-catapult-c-spring\edge_detect_c\edge.h} (CIN-69)
# Edison Design Group C++/C Front End - Version 3.10.1 (CIN-1)
# Error: $PROJECT_HOME/../edge_detect_c/edge6.c(105): $PROJECT_HOME/../edge_detect_c/edge6.c(105): identifier "reenout" is undefined (CRD-20)
# Warning: $PROJECT_HOME/../edge_detect_c/edge6.c(133): $PROJECT_HOME/../edge_detect_c/edge6.c(133): last line of file ends without a newline (CRD-1)
# Error: Compilation aborted (CIN-5)
# Error: go analyze: Failed analyze
# File '$PROJECT_HOME/../edge_detect_c/edge6.c' saved
go allocate
# Info: Starting transformation 'analyze' on solution 'solution.v3' (SOL-8)
# Front End called with arguments: -- {C:\fpga-catapult-c-spring\edge_detect_c\edge6.c} {C:\fpga-catapult-c-spring\edge_detect_c\shift_class.h} {C:\fpga-catapult-c-spring\edge_detect_c\edge.h} (CIN-69)
# Edison Design Group C++/C Front End - Version 3.10.1 (CIN-1)
# Warning: $PROJECT_HOME/../edge_detect_c/edge6.c(133): $PROJECT_HOME/../edge_detect_c/edge6.c(133): last line of file ends without a newline (CRD-1)
# $PROJECT_HOME/../edge_detect_c/edge6.c(49): Pragma 'hls_design<top>' detected on routine 'edge_detect' (CIN-6)
# Source file analysis completed (CIN-68)
# Info: Completed transformation 'analyze' on solution 'solution.v3': elapsed time 1.97 seconds, memory usage 410652kB, peak memory usage 450784kB (SOL-9)
# Info: Starting transformation 'compile' on solution 'solution.v3' (SOL-8)
# Generating synthesis internal form... (CIN-3)
# $PROJECT_HOME/../edge_detect_c/edge6.c(50): Found top design routine 'edge_detect' specified by directive (CIN-52)
# $PROJECT_HOME/../edge_detect_c/edge6.c(50): Synthesizing routine 'edge_detect' (CIN-13)
# $PROJECT_HOME/../edge_detect_c/edge6.c(50): Inlining routine 'edge_detect' (CIN-14)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(13): Inlining member function 'shift_class<ac_int<90, false>, 3>::shift_class' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(32): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator<<' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(48): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(48): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(48): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(48): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(48): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(48): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/edge6.c(50): Optimizing block '/edge_detect' ... (CIN-4)
# $PROJECT_HOME/../edge_detect_c/edge6.c(50): Inout port 'vin' is only used as an input. (OPT-10)
# $PROJECT_HOME/../edge_detect_c/edge6.c(50): Inout port 'vout' is only used as an output. (OPT-11)
# Info: Optimizing partition '/edge_detect': (Total ops = 355, Real ops = 99, Vars = 80) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 355, Real ops = 99, Vars = 78) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 333, Real ops = 89, Vars = 80) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 333, Real ops = 89, Vars = 82) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 333, Real ops = 89, Vars = 82) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 333, Real ops = 89, Vars = 80) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 277, Real ops = 86, Vars = 61) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 263, Real ops = 86, Vars = 60) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 263, Real ops = 86, Vars = 60) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 263, Real ops = 86, Vars = 62) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 263, Real ops = 86, Vars = 62) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 260, Real ops = 86, Vars = 69) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 335, Real ops = 78, Vars = 23) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 335, Real ops = 78, Vars = 25) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 335, Real ops = 78, Vars = 27) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 335, Real ops = 78, Vars = 23) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 335, Real ops = 78, Vars = 25) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 335, Real ops = 78, Vars = 23) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 335, Real ops = 78, Vars = 25) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 335, Real ops = 78, Vars = 25) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 335, Real ops = 78, Vars = 23) (SOL-10)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(34): Loop '/edge_detect/core/SHIFT' iterated at most 3 times. (LOOP-2)
# $PROJECT_HOME/../edge_detect_c/edge6.c(82): Loop '/edge_detect/core/ACC_GX:for' iterated at most 3 times. (LOOP-2)
# $PROJECT_HOME/../edge_detect_c/edge6.c(81): Loop '/edge_detect/core/ACC_GX' iterated at most 3 times. (LOOP-2)
# $PROJECT_HOME/../edge_detect_c/edge6.c(90): Loop '/edge_detect/core/ACC_GY:for' iterated at most 3 times. (LOOP-2)
# $PROJECT_HOME/../edge_detect_c/edge6.c(89): Loop '/edge_detect/core/ACC_GY' iterated at most 3 times. (LOOP-2)
# $PROJECT_HOME/../edge_detect_c/edge6.c(67): Loop '/edge_detect/core/FRAME' iterated at most 1 times. (LOOP-2)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 344, Real ops = 74, Vars = 25) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 296, Real ops = 69, Vars = 25) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 296, Real ops = 69, Vars = 27) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 291, Real ops = 69, Vars = 30) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 285, Real ops = 69, Vars = 25) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 285, Real ops = 69, Vars = 27) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 285, Real ops = 69, Vars = 25) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 285, Real ops = 69, Vars = 27) (SOL-10)
# Design 'edge_detect' was read (SOL-1)
# Input file has changed
go new
solution file set {$PROJECT_HOME/../edge_detect_c/edge6.c} -updated
# Info: Branching solution 'solution.v3' at state 'new' (PRJ-2)
# Info: Completed transformation 'compile' on solution 'edge_detect.v21': elapsed time 16.13 seconds, memory usage 383472kB, peak memory usage 450784kB (SOL-9)
# Info: Starting transformation 'architect' on solution 'edge_detect.v21' (SOL-8)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(34): Loop '/edge_detect/core/SHIFT' is being fully unrolled (3 times). (LOOP-7)
# $PROJECT_HOME/../edge_detect_c/edge6.c(82): Loop '/edge_detect/core/ACC_GX:for' is being fully unrolled (3 times). (LOOP-7)
# $PROJECT_HOME/../edge_detect_c/edge6.c(90): Loop '/edge_detect/core/ACC_GY:for' is being fully unrolled (3 times). (LOOP-7)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 448, Real ops = 138, Vars = 25) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 309, Real ops = 69, Vars = 30) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 313, Real ops = 63, Vars = 26) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 289, Real ops = 63, Vars = 26) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 289, Real ops = 63, Vars = 26) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 274, Real ops = 61, Vars = 22) (SOL-10)
# $PROJECT_HOME/../edge_detect_c/edge6.c(81): Loop '/edge_detect/core/ACC_GX' is left rolled. (LOOP-4)
# $PROJECT_HOME/../edge_detect_c/edge6.c(89): Loop '/edge_detect/core/ACC_GY' is left rolled. (LOOP-4)
# $PROJECT_HOME/../edge_detect_c/edge6.c(50): Loop '/edge_detect/core/main' is left rolled. (LOOP-4)
# Info: Optimizing partition '/edge_detect': (Total ops = 274, Real ops = 61, Vars = 27) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 274, Real ops = 61, Vars = 22) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 274, Real ops = 61, Vars = 27) (SOL-10)
# Loop 'ACC_GY' is merged and folded into Loop 'ACC_GX' (LOOP-9)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 279, Real ops = 62, Vars = 24) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 277, Real ops = 62, Vars = 24) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 272, Real ops = 60, Vars = 22) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 271, Real ops = 60, Vars = 21) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 271, Real ops = 60, Vars = 26) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 271, Real ops = 60, Vars = 21) (SOL-10)
# $PROJECT_HOME/../edge_detect_c/edge6.c(50): I/O-Port inferred - resource 'vin:rsc' (from var: vin) mapped to 'mgc_ioport.mgc_in_wire' (size: 90). (MEM-2)
# $PROJECT_HOME/../edge_detect_c/edge6.c(50): I/O-Port inferred - resource 'vout:rsc' (from var: vout) mapped to 'mgc_ioport.mgc_out_stdreg' (size: 30). (MEM-2)
# Info: Optimizing partition '/edge_detect': (Total ops = 273, Real ops = 60, Vars = 26) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 273, Real ops = 60, Vars = 21) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 273, Real ops = 60, Vars = 28) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 273, Real ops = 60, Vars = 23) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 272, Real ops = 60, Vars = 23) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 272, Real ops = 60, Vars = 28) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 272, Real ops = 60, Vars = 23) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 272, Real ops = 60, Vars = 28) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 275, Real ops = 60, Vars = 24) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 274, Real ops = 60, Vars = 24) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 494, Real ops = 79, Vars = 153) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 312, Real ops = 79, Vars = 39) (SOL-10)
# Design 'edge_detect' contains '144' real operations. (SOL-11)
# Info: Completed transformation 'architect' on solution 'edge_detect.v21': elapsed time 25.54 seconds, memory usage 383988kB, peak memory usage 450784kB (SOL-9)
# Info: Starting transformation 'allocate' on solution 'edge_detect.v21' (SOL-8)
# Performing concurrent resource allocation and scheduling on '/edge_detect/core' (CRAAS-1)
# Info: Select qualified components for data operations ... (CRAAS-3)
# Info: Apply resource constraints on data operations ... (CRAAS-4)
# $PROJECT_HOME/../edge_detect_c/edge6.c(50): Prescheduled LOOP 'main' (3 c-steps) (SCHD-7)
# $PROJECT_HOME/../edge_detect_c/edge6.c(50): Prescheduled LOOP 'core:rlp' (0 c-steps) (SCHD-7)
# $PROJECT_HOME/../edge_detect_c/edge6.c(50): Prescheduled SEQUENTIAL 'core' (total length 3 c-steps) (SCHD-8)
# Info: Initial schedule of SEQUENTIAL 'core': Latency = 4, Area (Datapath, Register, Total) = 6180.33, 0.00, 6180.33 (CRAAS-11)
# At least one feasible schedule exists. (CRAAS-9)
# Info: Optimized LOOP 'main': Latency = 4, Area (Datapath, Register, Total) = 6146.92, 0.00, 6146.92 (CRAAS-10)
# Info: Optimized LOOP 'main': Latency = 4, Area (Datapath, Register, Total) = 6145.40, 0.00, 6145.40 (CRAAS-10)
# Info: Final schedule of SEQUENTIAL 'core': Latency = 4, Area (Datapath, Register, Total) = 6145.40, 0.00, 6145.40 (CRAAS-12)
# Resource allocation and scheduling done. (CRAAS-2)
# Netlist written to file 'schedule.gnt' (NET-4)
# Info: Completed transformation 'allocate' on solution 'edge_detect.v21': elapsed time 4.37 seconds, memory usage 387620kB, peak memory usage 450784kB (SOL-9)
# File '$PROJECT_HOME/../edge_detect_c/edge6.c' saved
# Input file has changed
go new
solution file set {$PROJECT_HOME/../edge_detect_c/edge6.c} -updated
# Info: Branching solution 'solution.v4' at state 'new' (PRJ-2)
go compile
# Info: Starting transformation 'analyze' on solution 'solution.v4' (SOL-8)
# Front End called with arguments: -- {C:\fpga-catapult-c-spring\edge_detect_c\edge6.c} {C:\fpga-catapult-c-spring\edge_detect_c\shift_class.h} {C:\fpga-catapult-c-spring\edge_detect_c\edge.h} (CIN-69)
# Edison Design Group C++/C Front End - Version 3.10.1 (CIN-1)
# Warning: $PROJECT_HOME/../edge_detect_c/edge6.c(137): $PROJECT_HOME/../edge_detect_c/edge6.c(137): last line of file ends without a newline (CRD-1)
# $PROJECT_HOME/../edge_detect_c/edge6.c(49): Pragma 'hls_design<top>' detected on routine 'edge_detect' (CIN-6)
# Source file analysis completed (CIN-68)
# Info: Completed transformation 'analyze' on solution 'solution.v4': elapsed time 1.84 seconds, memory usage 418852kB, peak memory usage 459616kB (SOL-9)
# Info: Starting transformation 'compile' on solution 'solution.v4' (SOL-8)
# Generating synthesis internal form... (CIN-3)
# $PROJECT_HOME/../edge_detect_c/edge6.c(50): Found top design routine 'edge_detect' specified by directive (CIN-52)
# $PROJECT_HOME/../edge_detect_c/edge6.c(50): Synthesizing routine 'edge_detect' (CIN-13)
# $PROJECT_HOME/../edge_detect_c/edge6.c(50): Inlining routine 'edge_detect' (CIN-14)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(13): Inlining member function 'shift_class<ac_int<90, false>, 3>::shift_class' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(32): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator<<' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(48): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(48): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(48): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(48): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(48): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(48): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/edge6.c(50): Optimizing block '/edge_detect' ... (CIN-4)
# $PROJECT_HOME/../edge_detect_c/edge6.c(50): Inout port 'vin' is only used as an input. (OPT-10)
# $PROJECT_HOME/../edge_detect_c/edge6.c(50): Inout port 'vout' is only used as an output. (OPT-11)
# Info: Optimizing partition '/edge_detect': (Total ops = 353, Real ops = 96, Vars = 84) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 353, Real ops = 96, Vars = 82) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 331, Real ops = 86, Vars = 84) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 331, Real ops = 86, Vars = 86) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 331, Real ops = 86, Vars = 86) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 331, Real ops = 86, Vars = 84) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 271, Real ops = 83, Vars = 65) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 257, Real ops = 83, Vars = 64) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 257, Real ops = 83, Vars = 64) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 257, Real ops = 83, Vars = 66) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 257, Real ops = 83, Vars = 66) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 254, Real ops = 83, Vars = 73) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 302, Real ops = 75, Vars = 23) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 302, Real ops = 75, Vars = 25) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 302, Real ops = 75, Vars = 27) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 302, Real ops = 75, Vars = 23) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 302, Real ops = 75, Vars = 25) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 302, Real ops = 75, Vars = 23) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 302, Real ops = 75, Vars = 25) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 302, Real ops = 75, Vars = 25) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 302, Real ops = 75, Vars = 23) (SOL-10)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(34): Loop '/edge_detect/core/SHIFT' iterated at most 3 times. (LOOP-2)
# $PROJECT_HOME/../edge_detect_c/edge6.c(82): Loop '/edge_detect/core/ACC_GX:for' iterated at most 3 times. (LOOP-2)
# $PROJECT_HOME/../edge_detect_c/edge6.c(81): Loop '/edge_detect/core/ACC_GX' iterated at most 3 times. (LOOP-2)
# $PROJECT_HOME/../edge_detect_c/edge6.c(90): Loop '/edge_detect/core/ACC_GY:for' iterated at most 3 times. (LOOP-2)
# $PROJECT_HOME/../edge_detect_c/edge6.c(89): Loop '/edge_detect/core/ACC_GY' iterated at most 3 times. (LOOP-2)
# $PROJECT_HOME/../edge_detect_c/edge6.c(67): Loop '/edge_detect/core/FRAME' iterated at most 1 times. (LOOP-2)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 311, Real ops = 71, Vars = 25) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 263, Real ops = 66, Vars = 25) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 263, Real ops = 66, Vars = 27) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 258, Real ops = 66, Vars = 30) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 252, Real ops = 66, Vars = 25) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 252, Real ops = 66, Vars = 27) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 252, Real ops = 66, Vars = 25) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 252, Real ops = 66, Vars = 27) (SOL-10)
# Design 'edge_detect' was read (SOL-1)
# Info: Completed transformation 'compile' on solution 'edge_detect.v22': elapsed time 9.19 seconds, memory usage 422716kB, peak memory usage 459616kB (SOL-9)
go allocate
# Info: Starting transformation 'architect' on solution 'edge_detect.v22' (SOL-8)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(34): Loop '/edge_detect/core/SHIFT' is being fully unrolled (3 times). (LOOP-7)
# $PROJECT_HOME/../edge_detect_c/edge6.c(82): Loop '/edge_detect/core/ACC_GX:for' is being fully unrolled (3 times). (LOOP-7)
# $PROJECT_HOME/../edge_detect_c/edge6.c(90): Loop '/edge_detect/core/ACC_GY:for' is being fully unrolled (3 times). (LOOP-7)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 415, Real ops = 135, Vars = 25) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 276, Real ops = 66, Vars = 30) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 280, Real ops = 60, Vars = 26) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 256, Real ops = 60, Vars = 26) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 256, Real ops = 60, Vars = 26) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 241, Real ops = 58, Vars = 22) (SOL-10)
# $PROJECT_HOME/../edge_detect_c/edge6.c(81): Loop '/edge_detect/core/ACC_GX' is left rolled. (LOOP-4)
# $PROJECT_HOME/../edge_detect_c/edge6.c(89): Loop '/edge_detect/core/ACC_GY' is left rolled. (LOOP-4)
# $PROJECT_HOME/../edge_detect_c/edge6.c(50): Loop '/edge_detect/core/main' is left rolled. (LOOP-4)
# Info: Optimizing partition '/edge_detect': (Total ops = 241, Real ops = 58, Vars = 27) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 241, Real ops = 58, Vars = 22) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 241, Real ops = 58, Vars = 27) (SOL-10)
# Loop 'ACC_GY' is merged and folded into Loop 'ACC_GX' (LOOP-9)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 246, Real ops = 59, Vars = 24) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 244, Real ops = 59, Vars = 24) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 239, Real ops = 57, Vars = 22) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 238, Real ops = 57, Vars = 21) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 238, Real ops = 57, Vars = 26) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 238, Real ops = 57, Vars = 21) (SOL-10)
# $PROJECT_HOME/../edge_detect_c/edge6.c(50): I/O-Port inferred - resource 'vin:rsc' (from var: vin) mapped to 'mgc_ioport.mgc_in_wire' (size: 90). (MEM-2)
# $PROJECT_HOME/../edge_detect_c/edge6.c(50): I/O-Port inferred - resource 'vout:rsc' (from var: vout) mapped to 'mgc_ioport.mgc_out_stdreg' (size: 30). (MEM-2)
# Info: Optimizing partition '/edge_detect': (Total ops = 240, Real ops = 57, Vars = 26) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 240, Real ops = 57, Vars = 21) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 240, Real ops = 57, Vars = 28) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 240, Real ops = 57, Vars = 23) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 239, Real ops = 57, Vars = 23) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 239, Real ops = 57, Vars = 28) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 239, Real ops = 57, Vars = 23) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 239, Real ops = 57, Vars = 28) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 242, Real ops = 57, Vars = 24) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 241, Real ops = 57, Vars = 24) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 461, Real ops = 76, Vars = 153) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 279, Real ops = 76, Vars = 39) (SOL-10)
# Design 'edge_detect' contains '137' real operations. (SOL-11)
# Info: Completed transformation 'architect' on solution 'edge_detect.v22': elapsed time 26.52 seconds, memory usage 422716kB, peak memory usage 459616kB (SOL-9)
# Info: Starting transformation 'allocate' on solution 'edge_detect.v22' (SOL-8)
# Performing concurrent resource allocation and scheduling on '/edge_detect/core' (CRAAS-1)
# Info: Select qualified components for data operations ... (CRAAS-3)
# Info: Apply resource constraints on data operations ... (CRAAS-4)
# $PROJECT_HOME/../edge_detect_c/edge6.c(50): Prescheduled LOOP 'main' (3 c-steps) (SCHD-7)
# $PROJECT_HOME/../edge_detect_c/edge6.c(50): Prescheduled LOOP 'core:rlp' (0 c-steps) (SCHD-7)
# $PROJECT_HOME/../edge_detect_c/edge6.c(50): Prescheduled SEQUENTIAL 'core' (total length 3 c-steps) (SCHD-8)
# Info: Initial schedule of SEQUENTIAL 'core': Latency = 4, Area (Datapath, Register, Total) = 6115.88, 0.00, 6115.88 (CRAAS-11)
# At least one feasible schedule exists. (CRAAS-9)
# Info: Optimized LOOP 'main': Latency = 4, Area (Datapath, Register, Total) = 6086.00, 0.00, 6086.00 (CRAAS-10)
# Info: Optimized LOOP 'main': Latency = 4, Area (Datapath, Register, Total) = 6084.49, 0.00, 6084.49 (CRAAS-10)
# Info: Final schedule of SEQUENTIAL 'core': Latency = 4, Area (Datapath, Register, Total) = 6084.49, 0.00, 6084.49 (CRAAS-12)
# Resource allocation and scheduling done. (CRAAS-2)
# Netlist written to file 'schedule.gnt' (NET-4)
# Info: Completed transformation 'allocate' on solution 'edge_detect.v22': elapsed time 3.62 seconds, memory usage 423708kB, peak memory usage 459616kB (SOL-9)
go analyze
directive set -CLOCKS {clk {-CLOCK_PERIOD 10.0 -CLOCK_EDGE rising -CLOCK_HIGH_TIME 5.00 -CLOCK_OFFSET 0.000000 -CLOCK_UNCERTAINTY 0.0 -RESET_KIND async -RESET_SYNC_NAME rst -RESET_SYNC_ACTIVE high -RESET_ASYNC_NAME arst_n -RESET_ASYNC_ACTIVE low -ENABLE_NAME en -ENABLE_ACTIVE high}}
# Info: Branching solution 'solution.v4' at state 'analyze' (PRJ-2)
# /CLOCKS {clk {-CLOCK_PERIOD 10.0 -CLOCK_EDGE rising -CLOCK_UNCERTAINTY 0.0 -CLOCK_HIGH_TIME 5.0 -RESET_SYNC_NAME rst -RESET_ASYNC_NAME arst_n -RESET_KIND async -RESET_SYNC_ACTIVE high -RESET_ASYNC_ACTIVE low -ENABLE_NAME en -ENABLE_ACTIVE high}}
directive set -CLOCKS {clk {-CLOCK_PERIOD 10.0 -CLOCK_EDGE rising -CLOCK_HIGH_TIME 5.00 -CLOCK_OFFSET 0.000000 -CLOCK_UNCERTAINTY 0.0 -RESET_KIND async -RESET_SYNC_NAME rst -RESET_SYNC_ACTIVE high -RESET_ASYNC_NAME arst_n -RESET_ASYNC_ACTIVE low -ENABLE_NAME en -ENABLE_ACTIVE high}}
# /CLOCKS {clk {-CLOCK_PERIOD 10.0 -CLOCK_EDGE rising -CLOCK_UNCERTAINTY 0.0 -CLOCK_HIGH_TIME 5.0 -RESET_SYNC_NAME rst -RESET_ASYNC_NAME arst_n -RESET_KIND async -RESET_SYNC_ACTIVE high -RESET_ASYNC_ACTIVE low -ENABLE_NAME en -ENABLE_ACTIVE high}}
go compile
# Info: Starting transformation 'compile' on solution 'solution.v4' (SOL-8)
# Generating synthesis internal form... (CIN-3)
# $PROJECT_HOME/../edge_detect_c/edge6.c(50): Found top design routine 'edge_detect' specified by directive (CIN-52)
# $PROJECT_HOME/../edge_detect_c/edge6.c(50): Synthesizing routine 'edge_detect' (CIN-13)
# $PROJECT_HOME/../edge_detect_c/edge6.c(50): Inlining routine 'edge_detect' (CIN-14)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(13): Inlining member function 'shift_class<ac_int<90, false>, 3>::shift_class' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(32): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator<<' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(48): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(48): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(48): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(48): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(48): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(48): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/edge6.c(50): Optimizing block '/edge_detect' ... (CIN-4)
# $PROJECT_HOME/../edge_detect_c/edge6.c(50): Inout port 'vin' is only used as an input. (OPT-10)
# $PROJECT_HOME/../edge_detect_c/edge6.c(50): Inout port 'vout' is only used as an output. (OPT-11)
# Info: Optimizing partition '/edge_detect': (Total ops = 353, Real ops = 96, Vars = 84) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 353, Real ops = 96, Vars = 82) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 331, Real ops = 86, Vars = 84) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 331, Real ops = 86, Vars = 86) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 331, Real ops = 86, Vars = 86) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 331, Real ops = 86, Vars = 84) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 271, Real ops = 83, Vars = 65) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 257, Real ops = 83, Vars = 64) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 257, Real ops = 83, Vars = 64) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 257, Real ops = 83, Vars = 66) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 257, Real ops = 83, Vars = 66) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 254, Real ops = 83, Vars = 73) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 302, Real ops = 75, Vars = 23) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 302, Real ops = 75, Vars = 25) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 302, Real ops = 75, Vars = 27) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 302, Real ops = 75, Vars = 23) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 302, Real ops = 75, Vars = 25) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 302, Real ops = 75, Vars = 23) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 302, Real ops = 75, Vars = 25) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 302, Real ops = 75, Vars = 25) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 302, Real ops = 75, Vars = 23) (SOL-10)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(34): Loop '/edge_detect/core/SHIFT' iterated at most 3 times. (LOOP-2)
# $PROJECT_HOME/../edge_detect_c/edge6.c(82): Loop '/edge_detect/core/ACC_GX:for' iterated at most 3 times. (LOOP-2)
# $PROJECT_HOME/../edge_detect_c/edge6.c(81): Loop '/edge_detect/core/ACC_GX' iterated at most 3 times. (LOOP-2)
# $PROJECT_HOME/../edge_detect_c/edge6.c(90): Loop '/edge_detect/core/ACC_GY:for' iterated at most 3 times. (LOOP-2)
# $PROJECT_HOME/../edge_detect_c/edge6.c(89): Loop '/edge_detect/core/ACC_GY' iterated at most 3 times. (LOOP-2)
# $PROJECT_HOME/../edge_detect_c/edge6.c(67): Loop '/edge_detect/core/FRAME' iterated at most 1 times. (LOOP-2)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 311, Real ops = 71, Vars = 25) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 263, Real ops = 66, Vars = 25) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 263, Real ops = 66, Vars = 27) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 258, Real ops = 66, Vars = 30) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 252, Real ops = 66, Vars = 25) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 252, Real ops = 66, Vars = 27) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 252, Real ops = 66, Vars = 25) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 252, Real ops = 66, Vars = 27) (SOL-10)
# Design 'edge_detect' was read (SOL-1)
# Info: Completed transformation 'compile' on solution 'edge_detect.v23': elapsed time 9.49 seconds, memory usage 436732kB, peak memory usage 459616kB (SOL-9)
go allocate
# Info: Starting transformation 'architect' on solution 'edge_detect.v23' (SOL-8)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(34): Loop '/edge_detect/core/SHIFT' is being fully unrolled (3 times). (LOOP-7)
# $PROJECT_HOME/../edge_detect_c/edge6.c(82): Loop '/edge_detect/core/ACC_GX:for' is being fully unrolled (3 times). (LOOP-7)
# $PROJECT_HOME/../edge_detect_c/edge6.c(90): Loop '/edge_detect/core/ACC_GY:for' is being fully unrolled (3 times). (LOOP-7)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 415, Real ops = 135, Vars = 25) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 276, Real ops = 66, Vars = 30) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 280, Real ops = 60, Vars = 26) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 256, Real ops = 60, Vars = 26) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 256, Real ops = 60, Vars = 26) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 241, Real ops = 58, Vars = 22) (SOL-10)
# $PROJECT_HOME/../edge_detect_c/edge6.c(81): Loop '/edge_detect/core/ACC_GX' is left rolled. (LOOP-4)
# $PROJECT_HOME/../edge_detect_c/edge6.c(89): Loop '/edge_detect/core/ACC_GY' is left rolled. (LOOP-4)
# $PROJECT_HOME/../edge_detect_c/edge6.c(50): Loop '/edge_detect/core/main' is left rolled. (LOOP-4)
# Info: Optimizing partition '/edge_detect': (Total ops = 241, Real ops = 58, Vars = 27) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 241, Real ops = 58, Vars = 22) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 241, Real ops = 58, Vars = 27) (SOL-10)
# Loop 'ACC_GY' is merged and folded into Loop 'ACC_GX' (LOOP-9)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 246, Real ops = 59, Vars = 24) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 244, Real ops = 59, Vars = 24) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 239, Real ops = 57, Vars = 22) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 238, Real ops = 57, Vars = 21) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 238, Real ops = 57, Vars = 26) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 238, Real ops = 57, Vars = 21) (SOL-10)
# $PROJECT_HOME/../edge_detect_c/edge6.c(50): I/O-Port inferred - resource 'vin:rsc' (from var: vin) mapped to 'mgc_ioport.mgc_in_wire' (size: 90). (MEM-2)
# $PROJECT_HOME/../edge_detect_c/edge6.c(50): I/O-Port inferred - resource 'vout:rsc' (from var: vout) mapped to 'mgc_ioport.mgc_out_stdreg' (size: 30). (MEM-2)
# Info: Optimizing partition '/edge_detect': (Total ops = 240, Real ops = 57, Vars = 26) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 240, Real ops = 57, Vars = 21) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 240, Real ops = 57, Vars = 28) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 240, Real ops = 57, Vars = 23) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 239, Real ops = 57, Vars = 23) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 239, Real ops = 57, Vars = 28) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 239, Real ops = 57, Vars = 23) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 239, Real ops = 57, Vars = 28) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 242, Real ops = 57, Vars = 24) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 241, Real ops = 57, Vars = 24) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 461, Real ops = 76, Vars = 153) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 279, Real ops = 76, Vars = 39) (SOL-10)
# Design 'edge_detect' contains '137' real operations. (SOL-11)
# Info: Completed transformation 'architect' on solution 'edge_detect.v23': elapsed time 27.92 seconds, memory usage 436732kB, peak memory usage 459616kB (SOL-9)
# Info: Starting transformation 'allocate' on solution 'edge_detect.v23' (SOL-8)
# Performing concurrent resource allocation and scheduling on '/edge_detect/core' (CRAAS-1)
# Info: Select qualified components for data operations ... (CRAAS-3)
# Info: Apply resource constraints on data operations ... (CRAAS-4)
# $PROJECT_HOME/../edge_detect_c/edge6.c(50): Prescheduled LOOP 'main' (5 c-steps) (SCHD-7)
# $PROJECT_HOME/../edge_detect_c/edge6.c(50): Prescheduled LOOP 'core:rlp' (0 c-steps) (SCHD-7)
# $PROJECT_HOME/../edge_detect_c/edge6.c(50): Prescheduled SEQUENTIAL 'core' (total length 5 c-steps) (SCHD-8)
# Info: Initial schedule of SEQUENTIAL 'core': Latency = 6, Area (Datapath, Register, Total) = 6115.88, 0.00, 6115.88 (CRAAS-11)
# At least one feasible schedule exists. (CRAAS-9)
# Info: Optimized LOOP 'main': Latency = 6, Area (Datapath, Register, Total) = 6086.00, 0.00, 6086.00 (CRAAS-10)
# Info: Optimized LOOP 'main': Latency = 7, Area (Datapath, Register, Total) = 6084.49, 0.00, 6084.49 (CRAAS-10)
# Info: Final schedule of SEQUENTIAL 'core': Latency = 7, Area (Datapath, Register, Total) = 6084.49, 0.00, 6084.49 (CRAAS-12)
# Resource allocation and scheduling done. (CRAAS-2)
# Netlist written to file 'schedule.gnt' (NET-4)
# Info: Completed transformation 'allocate' on solution 'edge_detect.v23': elapsed time 4.04 seconds, memory usage 436732kB, peak memory usage 459616kB (SOL-9)
go compile
directive set /edge_detect/core/main/SHIFT -UNROLL no
# Info: Branching solution 'edge_detect.v24' at state 'compile' (PRJ-2)
# /edge_detect/core/main/SHIFT/UNROLL no
directive set /edge_detect/core/main/ACC_GX/ACC_GX:for -UNROLL no
# /edge_detect/core/main/ACC_GX/ACC_GX:for/UNROLL no
directive set /edge_detect/core/main/ACC_GY/ACC_GY:for -UNROLL no
# /edge_detect/core/main/ACC_GY/ACC_GY:for/UNROLL no
go allocate
# Info: Starting transformation 'architect' on solution 'edge_detect.v24' (SOL-8)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(34): Loop '/edge_detect/core/SHIFT' is left rolled. (LOOP-4)
# $PROJECT_HOME/../edge_detect_c/edge6.c(82): Loop '/edge_detect/core/ACC_GX:for' is left rolled. (LOOP-4)
# $PROJECT_HOME/../edge_detect_c/edge6.c(81): Loop '/edge_detect/core/ACC_GX' is left rolled. (LOOP-4)
# $PROJECT_HOME/../edge_detect_c/edge6.c(90): Loop '/edge_detect/core/ACC_GY:for' is left rolled. (LOOP-4)
# $PROJECT_HOME/../edge_detect_c/edge6.c(89): Loop '/edge_detect/core/ACC_GY' is left rolled. (LOOP-4)
# $PROJECT_HOME/../edge_detect_c/edge6.c(50): Loop '/edge_detect/core/main' is left rolled. (LOOP-4)
# Loop 'ACC_GY' is merged and folded into Loop 'ACC_GX' (LOOP-9)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 258, Real ops = 68, Vars = 27) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 256, Real ops = 68, Vars = 27) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 252, Real ops = 66, Vars = 25) (SOL-10)
# Loop 'ACC_GY:for' is merged and folded into Loop 'ACC_GX:for' (LOOP-9)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 257, Real ops = 67, Vars = 27) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 255, Real ops = 67, Vars = 27) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 251, Real ops = 65, Vars = 25) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 251, Real ops = 65, Vars = 30) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 251, Real ops = 65, Vars = 25) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 251, Real ops = 65, Vars = 30) (SOL-10)
# $PROJECT_HOME/../edge_detect_c/edge6.c(50): I/O-Port inferred - resource 'vin:rsc' (from var: vin) mapped to 'mgc_ioport.mgc_in_wire' (size: 90). (MEM-2)
# $PROJECT_HOME/../edge_detect_c/edge6.c(50): I/O-Port inferred - resource 'vout:rsc' (from var: vout) mapped to 'mgc_ioport.mgc_out_stdreg' (size: 30). (MEM-2)
# Info: Optimizing partition '/edge_detect': (Total ops = 253, Real ops = 65, Vars = 30) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 253, Real ops = 65, Vars = 25) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 252, Real ops = 65, Vars = 25) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 252, Real ops = 65, Vars = 30) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 265, Real ops = 68, Vars = 35) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 262, Real ops = 68, Vars = 32) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 259, Real ops = 67, Vars = 28) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 259, Real ops = 67, Vars = 33) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 270, Real ops = 68, Vars = 32) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 269, Real ops = 68, Vars = 32) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 665, Real ops = 140, Vars = 262) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 353, Real ops = 117, Vars = 64) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 352, Real ops = 117, Vars = 63) (SOL-10)
# Design 'edge_detect' contains '153' real operations. (SOL-11)
# Info: Completed transformation 'architect' on solution 'edge_detect.v24': elapsed time 28.86 seconds, memory usage 441268kB, peak memory usage 459616kB (SOL-9)
# Info: Starting transformation 'allocate' on solution 'edge_detect.v24' (SOL-8)
# Performing concurrent resource allocation and scheduling on '/edge_detect/core' (CRAAS-1)
# Info: Select qualified components for data operations ... (CRAAS-3)
# Info: Apply resource constraints on data operations ... (CRAAS-4)
# $PROJECT_HOME/../edge_detect_c/edge6.c(50): Prescheduled LOOP 'main' (6 c-steps) (SCHD-7)
# $PROJECT_HOME/../edge_detect_c/edge6.c(50): Prescheduled LOOP 'core:rlp' (0 c-steps) (SCHD-7)
# $PROJECT_HOME/../edge_detect_c/edge6.c(50): Prescheduled SEQUENTIAL 'core' (total length 6 c-steps) (SCHD-8)
# Info: Initial schedule of SEQUENTIAL 'core': Latency = 16, Area (Datapath, Register, Total) = 5070.45, 0.00, 5070.45 (CRAAS-11)
# At least one feasible schedule exists. (CRAAS-9)
# Info: Optimized LOOP 'main': Latency = 16, Area (Datapath, Register, Total) = 5067.66, 0.00, 5067.66 (CRAAS-10)
# Info: Optimized LOOP 'main': Latency = 16, Area (Datapath, Register, Total) = 4978.70, 0.00, 4978.70 (CRAAS-10)
# Info: Optimized LOOP 'main': Latency = 16, Area (Datapath, Register, Total) = 4977.18, 0.00, 4977.18 (CRAAS-10)
# Info: Final schedule of SEQUENTIAL 'core': Latency = 16, Area (Datapath, Register, Total) = 4977.18, 0.00, 4977.18 (CRAAS-12)
# Resource allocation and scheduling done. (CRAAS-2)
# Netlist written to file 'schedule.gnt' (NET-4)
# Info: Completed transformation 'allocate' on solution 'edge_detect.v24': elapsed time 3.88 seconds, memory usage 441272kB, peak memory usage 459616kB (SOL-9)
# File '$PROJECT_HOME/../edge_detect_c/edge6.c' saved
# Input file has changed
go new
solution file set {$PROJECT_HOME/../edge_detect_c/edge6.c} -updated
# Info: Branching solution 'solution.v4' at state 'new' (PRJ-2)
go allocate
# Info: Starting transformation 'analyze' on solution 'solution.v4' (SOL-8)
# Front End called with arguments: -- {C:\fpga-catapult-c-spring\edge_detect_c\edge6.c} {C:\fpga-catapult-c-spring\edge_detect_c\shift_class.h} {C:\fpga-catapult-c-spring\edge_detect_c\edge.h} (CIN-69)
# Edison Design Group C++/C Front End - Version 3.10.1 (CIN-1)
# Error: $PROJECT_HOME/../edge_detect_c/edge6.c(127): $PROJECT_HOME/../edge_detect_c/edge6.c(127): expected a ";" (CRD-65)
# Warning: $PROJECT_HOME/../edge_detect_c/edge6.c(136): $PROJECT_HOME/../edge_detect_c/edge6.c(136): last line of file ends without a newline (CRD-1)
# Warning: $PROJECT_HOME/../edge_detect_c/edge6.c(136): $PROJECT_HOME/../edge_detect_c/edge6.c(136): parsing restarts here after previous syntax error (CRD-12)
# Error: $PROJECT_HOME/../edge_detect_c/edge6.c(136): $PROJECT_HOME/../edge_detect_c/edge6.c(136): expected a "}" (CRD-67)
# Error: Compilation aborted (CIN-5)
# Error: go analyze: Failed analyze
# File '$PROJECT_HOME/../edge_detect_c/edge6.c' saved
go compile
# Info: Starting transformation 'analyze' on solution 'solution.v4' (SOL-8)
# Front End called with arguments: -- {C:\fpga-catapult-c-spring\edge_detect_c\edge6.c} {C:\fpga-catapult-c-spring\edge_detect_c\shift_class.h} {C:\fpga-catapult-c-spring\edge_detect_c\edge.h} (CIN-69)
# Edison Design Group C++/C Front End - Version 3.10.1 (CIN-1)
# Error: $PROJECT_HOME/../edge_detect_c/edge6.c(127): $PROJECT_HOME/../edge_detect_c/edge6.c(127): expected a ";" (CRD-65)
# Warning: $PROJECT_HOME/../edge_detect_c/edge6.c(136): $PROJECT_HOME/../edge_detect_c/edge6.c(136): last line of file ends without a newline (CRD-1)
# Warning: $PROJECT_HOME/../edge_detect_c/edge6.c(136): $PROJECT_HOME/../edge_detect_c/edge6.c(136): parsing restarts here after previous syntax error (CRD-12)
# Error: $PROJECT_HOME/../edge_detect_c/edge6.c(136): $PROJECT_HOME/../edge_detect_c/edge6.c(136): expected a "}" (CRD-67)
# Error: $PROJECT_HOME/../edge_detect_c/edge6.c(136): $PROJECT_HOME/../edge_detect_c/edge6.c(136): expected a "}" (CRD-67)
# Error: Compilation aborted (CIN-5)
# Error: go analyze: Failed analyze
go allocate
# Info: Starting transformation 'analyze' on solution 'solution.v4' (SOL-8)
# Front End called with arguments: -- {C:\fpga-catapult-c-spring\edge_detect_c\edge6.c} {C:\fpga-catapult-c-spring\edge_detect_c\shift_class.h} {C:\fpga-catapult-c-spring\edge_detect_c\edge.h} (CIN-69)
# Edison Design Group C++/C Front End - Version 3.10.1 (CIN-1)
# Error: $PROJECT_HOME/../edge_detect_c/edge6.c(127): $PROJECT_HOME/../edge_detect_c/edge6.c(127): expected a ";" (CRD-65)
# Warning: $PROJECT_HOME/../edge_detect_c/edge6.c(136): $PROJECT_HOME/../edge_detect_c/edge6.c(136): last line of file ends without a newline (CRD-1)
# Warning: $PROJECT_HOME/../edge_detect_c/edge6.c(136): $PROJECT_HOME/../edge_detect_c/edge6.c(136): parsing restarts here after previous syntax error (CRD-12)
# Error: $PROJECT_HOME/../edge_detect_c/edge6.c(136): $PROJECT_HOME/../edge_detect_c/edge6.c(136): expected a "}" (CRD-67)
# Error: $PROJECT_HOME/../edge_detect_c/edge6.c(136): $PROJECT_HOME/../edge_detect_c/edge6.c(136): expected a "}" (CRD-67)
# Error: Compilation aborted (CIN-5)
# Error: go analyze: Failed analyze
# File '$PROJECT_HOME/../edge_detect_c/edge6.c' saved
# File '$PROJECT_HOME/../edge_detect_c/edge6.c' saved
go analyze
# Info: Starting transformation 'analyze' on solution 'solution.v4' (SOL-8)
# Front End called with arguments: -- {C:\fpga-catapult-c-spring\edge_detect_c\edge6.c} {C:\fpga-catapult-c-spring\edge_detect_c\shift_class.h} {C:\fpga-catapult-c-spring\edge_detect_c\edge.h} (CIN-69)
# Edison Design Group C++/C Front End - Version 3.10.1 (CIN-1)
# Error: $PROJECT_HOME/../edge_detect_c/edge6.c(127): $PROJECT_HOME/../edge_detect_c/edge6.c(127): expected a ";" (CRD-65)
# Warning: $PROJECT_HOME/../edge_detect_c/edge6.c(136): $PROJECT_HOME/../edge_detect_c/edge6.c(136): last line of file ends without a newline (CRD-1)
# Warning: $PROJECT_HOME/../edge_detect_c/edge6.c(136): $PROJECT_HOME/../edge_detect_c/edge6.c(136): parsing restarts here after previous syntax error (CRD-12)
# Error: $PROJECT_HOME/../edge_detect_c/edge6.c(136): $PROJECT_HOME/../edge_detect_c/edge6.c(136): expected a "}" (CRD-67)
# Error: Compilation aborted (CIN-5)
# Error: go analyze: Failed analyze
# File '$PROJECT_HOME/../edge_detect_c/edge6.c' saved
# File '$PROJECT_HOME/../edge_detect_c/edge6.c' saved
go analyze
# Info: Starting transformation 'analyze' on solution 'solution.v4' (SOL-8)
# Front End called with arguments: -- {C:\fpga-catapult-c-spring\edge_detect_c\edge6.c} {C:\fpga-catapult-c-spring\edge_detect_c\shift_class.h} {C:\fpga-catapult-c-spring\edge_detect_c\edge.h} (CIN-69)
# Edison Design Group C++/C Front End - Version 3.10.1 (CIN-1)
# Warning: $PROJECT_HOME/../edge_detect_c/edge6.c(135): $PROJECT_HOME/../edge_detect_c/edge6.c(135): last line of file ends without a newline (CRD-1)
# $PROJECT_HOME/../edge_detect_c/edge6.c(49): Pragma 'hls_design<top>' detected on routine 'edge_detect' (CIN-6)
# Source file analysis completed (CIN-68)
# Info: Completed transformation 'analyze' on solution 'solution.v4': elapsed time 1.83 seconds, memory usage 442524kB, peak memory usage 493232kB (SOL-9)
# Input file has changed
go new
solution file set {$PROJECT_HOME/../edge_detect_c/edge6.c} -updated
# Info: Branching solution 'solution.v5' at state 'new' (PRJ-2)
go allocate
# Info: Starting transformation 'analyze' on solution 'solution.v5' (SOL-8)
# Front End called with arguments: -- {C:\fpga-catapult-c-spring\edge_detect_c\edge6.c} {C:\fpga-catapult-c-spring\edge_detect_c\shift_class.h} {C:\fpga-catapult-c-spring\edge_detect_c\edge.h} (CIN-69)
# Edison Design Group C++/C Front End - Version 3.10.1 (CIN-1)
# Warning: $PROJECT_HOME/../edge_detect_c/edge6.c(135): $PROJECT_HOME/../edge_detect_c/edge6.c(135): last line of file ends without a newline (CRD-1)
# $PROJECT_HOME/../edge_detect_c/edge6.c(49): Pragma 'hls_design<top>' detected on routine 'edge_detect' (CIN-6)
# Source file analysis completed (CIN-68)
# Info: Completed transformation 'analyze' on solution 'solution.v5': elapsed time 1.81 seconds, memory usage 444420kB, peak memory usage 494264kB (SOL-9)
# Info: Starting transformation 'compile' on solution 'solution.v5' (SOL-8)
# Generating synthesis internal form... (CIN-3)
# $PROJECT_HOME/../edge_detect_c/edge6.c(50): Found top design routine 'edge_detect' specified by directive (CIN-52)
# $PROJECT_HOME/../edge_detect_c/edge6.c(50): Synthesizing routine 'edge_detect' (CIN-13)
# $PROJECT_HOME/../edge_detect_c/edge6.c(50): Inlining routine 'edge_detect' (CIN-14)
# $PROJECT_HOME/../edge_detect_c/edge6.c(50): Optimizing block '/edge_detect' ... (CIN-4)
# $PROJECT_HOME/../edge_detect_c/edge6.c(50): Inout port 'vin' is only used as an input. (OPT-10)
# $PROJECT_HOME/../edge_detect_c/edge6.c(50): Inout port 'vout' is only used as an output. (OPT-11)
# Info: Optimizing partition '/edge_detect': (Total ops = 299, Real ops = 93, Vars = 70) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 299, Real ops = 93, Vars = 68) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 277, Real ops = 79, Vars = 70) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 277, Real ops = 79, Vars = 72) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 277, Real ops = 79, Vars = 72) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 277, Real ops = 79, Vars = 70) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 219, Real ops = 76, Vars = 53) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 219, Real ops = 76, Vars = 55) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 219, Real ops = 76, Vars = 55) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 216, Real ops = 76, Vars = 56) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 240, Real ops = 69, Vars = 19) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 240, Real ops = 69, Vars = 21) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 240, Real ops = 69, Vars = 23) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 240, Real ops = 69, Vars = 19) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 240, Real ops = 69, Vars = 21) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 240, Real ops = 69, Vars = 19) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 240, Real ops = 69, Vars = 21) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 240, Real ops = 69, Vars = 21) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 240, Real ops = 69, Vars = 19) (SOL-10)
# $PROJECT_HOME/../edge_detect_c/edge6.c(80): Loop '/edge_detect/core/ACC_GX:for' iterated at most 3 times. (LOOP-2)
# $PROJECT_HOME/../edge_detect_c/edge6.c(79): Loop '/edge_detect/core/ACC_GX' iterated at most 3 times. (LOOP-2)
# $PROJECT_HOME/../edge_detect_c/edge6.c(88): Loop '/edge_detect/core/ACC_GY:for' iterated at most 3 times. (LOOP-2)
# $PROJECT_HOME/../edge_detect_c/edge6.c(87): Loop '/edge_detect/core/ACC_GY' iterated at most 3 times. (LOOP-2)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 288, Real ops = 68, Vars = 20) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 245, Real ops = 64, Vars = 20) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 245, Real ops = 64, Vars = 22) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 240, Real ops = 64, Vars = 24) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 234, Real ops = 64, Vars = 20) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 234, Real ops = 64, Vars = 22) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 234, Real ops = 64, Vars = 20) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 234, Real ops = 64, Vars = 22) (SOL-10)
# Design 'edge_detect' was read (SOL-1)
# Info: Completed transformation 'compile' on solution 'edge_detect.v25': elapsed time 9.83 seconds, memory usage 449224kB, peak memory usage 494264kB (SOL-9)
# Info: Starting transformation 'architect' on solution 'edge_detect.v25' (SOL-8)
# $PROJECT_HOME/../edge_detect_c/edge6.c(80): Loop '/edge_detect/core/ACC_GX:for' is left rolled. (LOOP-4)
# $PROJECT_HOME/../edge_detect_c/edge6.c(79): Loop '/edge_detect/core/ACC_GX' is left rolled. (LOOP-4)
# $PROJECT_HOME/../edge_detect_c/edge6.c(88): Loop '/edge_detect/core/ACC_GY:for' is left rolled. (LOOP-4)
# $PROJECT_HOME/../edge_detect_c/edge6.c(87): Loop '/edge_detect/core/ACC_GY' is left rolled. (LOOP-4)
# $PROJECT_HOME/../edge_detect_c/edge6.c(50): Loop '/edge_detect/core/main' is left rolled. (LOOP-4)
# Loop 'ACC_GY' is merged and folded into Loop 'ACC_GX' (LOOP-9)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 240, Real ops = 66, Vars = 22) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 238, Real ops = 66, Vars = 22) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 234, Real ops = 64, Vars = 20) (SOL-10)
# Loop 'ACC_GY:for' is merged and folded into Loop 'ACC_GX:for' (LOOP-9)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 239, Real ops = 65, Vars = 22) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 237, Real ops = 65, Vars = 22) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 230, Real ops = 62, Vars = 22) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 230, Real ops = 62, Vars = 27) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 230, Real ops = 62, Vars = 22) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 230, Real ops = 62, Vars = 27) (SOL-10)
# $PROJECT_HOME/../edge_detect_c/edge6.c(50): I/O-Port inferred - resource 'vin:rsc' (from var: vin) mapped to 'mgc_ioport.mgc_in_wire' (size: 90). (MEM-2)
# $PROJECT_HOME/../edge_detect_c/edge6.c(50): I/O-Port inferred - resource 'vout:rsc' (from var: vout) mapped to 'mgc_ioport.mgc_out_stdreg' (size: 30). (MEM-2)
# Info: Optimizing partition '/edge_detect': (Total ops = 237, Real ops = 62, Vars = 27) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 237, Real ops = 62, Vars = 22) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 235, Real ops = 62, Vars = 23) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 232, Real ops = 62, Vars = 23) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 232, Real ops = 62, Vars = 28) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 232, Real ops = 62, Vars = 28) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 232, Real ops = 62, Vars = 23) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 240, Real ops = 63, Vars = 26) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 239, Real ops = 63, Vars = 26) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 446, Real ops = 92, Vars = 152) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 287, Real ops = 90, Vars = 45) (SOL-10)
# Design 'edge_detect' contains '122' real operations. (SOL-11)
# Info: Completed transformation 'architect' on solution 'edge_detect.v25': elapsed time 28.16 seconds, memory usage 449240kB, peak memory usage 494264kB (SOL-9)
# Info: Starting transformation 'allocate' on solution 'edge_detect.v25' (SOL-8)
# Performing concurrent resource allocation and scheduling on '/edge_detect/core' (CRAAS-1)
# Info: Select qualified components for data operations ... (CRAAS-3)
# Info: Apply resource constraints on data operations ... (CRAAS-4)
# $PROJECT_HOME/../edge_detect_c/edge6.c(50): Prescheduled LOOP 'main' (6 c-steps) (SCHD-7)
# $PROJECT_HOME/../edge_detect_c/edge6.c(50): Prescheduled SEQUENTIAL 'core' (total length 6 c-steps) (SCHD-8)
# Info: Initial schedule of SEQUENTIAL 'core': Latency = 13, Area (Datapath, Register, Total) = 3730.95, 0.00, 3730.95 (CRAAS-11)
# At least one feasible schedule exists. (CRAAS-9)
# Info: Optimized LOOP 'main': Latency = 13, Area (Datapath, Register, Total) = 3728.15, 0.00, 3728.15 (CRAAS-10)
# Info: Optimized LOOP 'main': Latency = 13, Area (Datapath, Register, Total) = 3639.20, 0.00, 3639.20 (CRAAS-10)
# Info: Optimized LOOP 'main': Latency = 13, Area (Datapath, Register, Total) = 3637.68, 0.00, 3637.68 (CRAAS-10)
# Info: Final schedule of SEQUENTIAL 'core': Latency = 13, Area (Datapath, Register, Total) = 3637.68, 0.00, 3637.68 (CRAAS-12)
# Resource allocation and scheduling done. (CRAAS-2)
# Netlist written to file 'schedule.gnt' (NET-4)
# Info: Completed transformation 'allocate' on solution 'edge_detect.v25': elapsed time 3.48 seconds, memory usage 449784kB, peak memory usage 494264kB (SOL-9)
go analyze
directive set -CLOCKS {clk {-CLOCK_PERIOD 20.0 -CLOCK_EDGE rising -CLOCK_HIGH_TIME 10.00 -CLOCK_OFFSET 0.000000 -CLOCK_UNCERTAINTY 0.0 -RESET_KIND async -RESET_SYNC_NAME rst -RESET_SYNC_ACTIVE high -RESET_ASYNC_NAME arst_n -RESET_ASYNC_ACTIVE low -ENABLE_NAME en -ENABLE_ACTIVE high}}
# Info: Branching solution 'solution.v5' at state 'analyze' (PRJ-2)
# /CLOCKS {clk {-CLOCK_PERIOD 20.0 -CLOCK_EDGE rising -CLOCK_UNCERTAINTY 0.0 -CLOCK_HIGH_TIME 10.0 -RESET_SYNC_NAME rst -RESET_ASYNC_NAME arst_n -RESET_KIND async -RESET_SYNC_ACTIVE high -RESET_ASYNC_ACTIVE low -ENABLE_NAME en -ENABLE_ACTIVE high}}
go compile
# Info: Starting transformation 'compile' on solution 'solution.v5' (SOL-8)
# Generating synthesis internal form... (CIN-3)
# $PROJECT_HOME/../edge_detect_c/edge6.c(50): Found top design routine 'edge_detect' specified by directive (CIN-52)
# $PROJECT_HOME/../edge_detect_c/edge6.c(50): Synthesizing routine 'edge_detect' (CIN-13)
# $PROJECT_HOME/../edge_detect_c/edge6.c(50): Inlining routine 'edge_detect' (CIN-14)
# $PROJECT_HOME/../edge_detect_c/edge6.c(50): Optimizing block '/edge_detect' ... (CIN-4)
# $PROJECT_HOME/../edge_detect_c/edge6.c(50): Inout port 'vin' is only used as an input. (OPT-10)
# $PROJECT_HOME/../edge_detect_c/edge6.c(50): Inout port 'vout' is only used as an output. (OPT-11)
# Info: Optimizing partition '/edge_detect': (Total ops = 299, Real ops = 93, Vars = 70) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 299, Real ops = 93, Vars = 68) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 277, Real ops = 79, Vars = 70) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 277, Real ops = 79, Vars = 72) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 277, Real ops = 79, Vars = 72) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 277, Real ops = 79, Vars = 70) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 219, Real ops = 76, Vars = 53) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 219, Real ops = 76, Vars = 55) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 219, Real ops = 76, Vars = 55) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 216, Real ops = 76, Vars = 56) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 240, Real ops = 69, Vars = 19) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 240, Real ops = 69, Vars = 21) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 240, Real ops = 69, Vars = 23) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 240, Real ops = 69, Vars = 19) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 240, Real ops = 69, Vars = 21) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 240, Real ops = 69, Vars = 19) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 240, Real ops = 69, Vars = 21) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 240, Real ops = 69, Vars = 21) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 240, Real ops = 69, Vars = 19) (SOL-10)
# $PROJECT_HOME/../edge_detect_c/edge6.c(80): Loop '/edge_detect/core/ACC_GX:for' iterated at most 3 times. (LOOP-2)
# $PROJECT_HOME/../edge_detect_c/edge6.c(79): Loop '/edge_detect/core/ACC_GX' iterated at most 3 times. (LOOP-2)
# $PROJECT_HOME/../edge_detect_c/edge6.c(88): Loop '/edge_detect/core/ACC_GY:for' iterated at most 3 times. (LOOP-2)
# $PROJECT_HOME/../edge_detect_c/edge6.c(87): Loop '/edge_detect/core/ACC_GY' iterated at most 3 times. (LOOP-2)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 288, Real ops = 68, Vars = 20) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 245, Real ops = 64, Vars = 20) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 245, Real ops = 64, Vars = 22) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 240, Real ops = 64, Vars = 24) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 234, Real ops = 64, Vars = 20) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 234, Real ops = 64, Vars = 22) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 234, Real ops = 64, Vars = 20) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 234, Real ops = 64, Vars = 22) (SOL-10)
# Design 'edge_detect' was read (SOL-1)
# Info: Completed transformation 'compile' on solution 'edge_detect.v26': elapsed time 10.23 seconds, memory usage 465380kB, peak memory usage 494264kB (SOL-9)
directive set /edge_detect/vin -STREAM 90
# /edge_detect/vin/STREAM 90
directive set /edge_detect/vout -STREAM 30
# /edge_detect/vout/STREAM 30
go allocate
# Info: Starting transformation 'architect' on solution 'edge_detect.v26' (SOL-8)
# $PROJECT_HOME/../edge_detect_c/edge6.c(80): Loop '/edge_detect/core/ACC_GX:for' is left rolled. (LOOP-4)
# $PROJECT_HOME/../edge_detect_c/edge6.c(79): Loop '/edge_detect/core/ACC_GX' is left rolled. (LOOP-4)
# $PROJECT_HOME/../edge_detect_c/edge6.c(88): Loop '/edge_detect/core/ACC_GY:for' is left rolled. (LOOP-4)
# $PROJECT_HOME/../edge_detect_c/edge6.c(87): Loop '/edge_detect/core/ACC_GY' is left rolled. (LOOP-4)
# $PROJECT_HOME/../edge_detect_c/edge6.c(50): Loop '/edge_detect/core/main' is left rolled. (LOOP-4)
# Loop 'ACC_GY' is merged and folded into Loop 'ACC_GX' (LOOP-9)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 240, Real ops = 66, Vars = 22) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 238, Real ops = 66, Vars = 22) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 234, Real ops = 64, Vars = 20) (SOL-10)
# Loop 'ACC_GY:for' is merged and folded into Loop 'ACC_GX:for' (LOOP-9)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 239, Real ops = 65, Vars = 22) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 237, Real ops = 65, Vars = 22) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 230, Real ops = 62, Vars = 22) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 230, Real ops = 62, Vars = 27) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 230, Real ops = 62, Vars = 22) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 230, Real ops = 62, Vars = 27) (SOL-10)
# $PROJECT_HOME/../edge_detect_c/edge6.c(50): I/O-Port inferred - resource 'vin:rsc' (from var: vin) mapped to 'mgc_ioport.mgc_in_wire' (size: 90). (MEM-2)
# $PROJECT_HOME/../edge_detect_c/edge6.c(50): I/O-Port inferred - resource 'vout:rsc' (from var: vout) mapped to 'mgc_ioport.mgc_out_stdreg' (size: 30). (MEM-2)
# Info: Optimizing partition '/edge_detect': (Total ops = 237, Real ops = 62, Vars = 27) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 237, Real ops = 62, Vars = 22) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 235, Real ops = 62, Vars = 23) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 232, Real ops = 62, Vars = 23) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 232, Real ops = 62, Vars = 28) (SOL-10)
# Info: Optimizing partition '/edge_detect': (Total ops = 232, Real ops = 62, Vars = 28) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 232, Real ops = 62, Vars = 23) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 240, Real ops = 63, Vars = 26) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 239, Real ops = 63, Vars = 26) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 446, Real ops = 92, Vars = 152) (SOL-10)
# Info: Optimizing partition '/edge_detect/core': (Total ops = 287, Real ops = 90, Vars = 45) (SOL-10)
# Design 'edge_detect' contains '122' real operations. (SOL-11)
# Info: Completed transformation 'architect' on solution 'edge_detect.v26': elapsed time 28.91 seconds, memory usage 465380kB, peak memory usage 494264kB (SOL-9)
# Info: Starting transformation 'allocate' on solution 'edge_detect.v26' (SOL-8)
# Performing concurrent resource allocation and scheduling on '/edge_detect/core' (CRAAS-1)
# Info: Select qualified components for data operations ... (CRAAS-3)
# Info: Apply resource constraints on data operations ... (CRAAS-4)
# $PROJECT_HOME/../edge_detect_c/edge6.c(50): Prescheduled LOOP 'main' (3 c-steps) (SCHD-7)
# $PROJECT_HOME/../edge_detect_c/edge6.c(50): Prescheduled SEQUENTIAL 'core' (total length 3 c-steps) (SCHD-8)
# Info: Initial schedule of SEQUENTIAL 'core': Latency = 10, Area (Datapath, Register, Total) = 3730.95, 0.00, 3730.95 (CRAAS-11)
# At least one feasible schedule exists. (CRAAS-9)
# Info: Optimized LOOP 'main': Latency = 10, Area (Datapath, Register, Total) = 3728.15, 0.00, 3728.15 (CRAAS-10)
# Info: Optimized LOOP 'main': Latency = 10, Area (Datapath, Register, Total) = 3639.20, 0.00, 3639.20 (CRAAS-10)
# Info: Optimized LOOP 'main': Latency = 10, Area (Datapath, Register, Total) = 3637.68, 0.00, 3637.68 (CRAAS-10)
# Info: Final schedule of SEQUENTIAL 'core': Latency = 10, Area (Datapath, Register, Total) = 3637.68, 0.00, 3637.68 (CRAAS-12)
# Resource allocation and scheduling done. (CRAAS-2)
# Netlist written to file 'schedule.gnt' (NET-4)
# Info: Completed transformation 'allocate' on solution 'edge_detect.v26': elapsed time 3.79 seconds, memory usage 465860kB, peak memory usage 494264kB (SOL-9)
go new
solution file add ../edge_detect_c/edge3.c
# Info: Branching solution 'solution.v5' at state 'new' (PRJ-2)
# /INPUTFILES/4
solution file remove {$PROJECT_HOME/../edge_detect_c/edge6.c}
go analyze
# Info: Starting transformation 'analyze' on solution 'solution.v5' (SOL-8)
# Front End called with arguments: -- {C:\fpga-catapult-c-spring\edge_detect_c\edge3.c} {C:\fpga-catapult-c-spring\edge_detect_c\shift_class.h} {C:\fpga-catapult-c-spring\edge_detect_c\edge.h} (CIN-69)
# Edison Design Group C++/C Front End - Version 3.10.1 (CIN-1)
# Error: $PROJECT_HOME/../edge_detect_c/edge3.c(118): $PROJECT_HOME/../edge_detect_c/edge3.c(118): identifier "AbsAndMax" is undefined (CRD-20)
# Error: $PROJECT_HOME/../edge_detect_c/edge3.c(125): $PROJECT_HOME/../edge_detect_c/edge3.c(125): expected a ")" (CRD-18)
# Error: Compilation aborted (CIN-5)
# Error: go analyze: Failed analyze
# File '$PROJECT_HOME/../edge_detect_c/sharpen.c' saved
# File '$PROJECT_HOME/../edge_detect_c/sharpen.c' saved
# File '$PROJECT_HOME/../edge_detect_c/edge.h' saved
solution file remove {$PROJECT_HOME/../edge_detect_c/edge3.c}
solution file add ../edge_detect_c/sharpen.c
# /INPUTFILES/5
go analyze
# Info: Starting transformation 'analyze' on solution 'solution.v5' (SOL-8)
# Front End called with arguments: -- {C:\fpga-catapult-c-spring\edge_detect_c\sharpen.c} {C:\fpga-catapult-c-spring\edge_detect_c\shift_class.h} {C:\fpga-catapult-c-spring\edge_detect_c\edge.h} (CIN-69)
# Edison Design Group C++/C Front End - Version 3.10.1 (CIN-1)
# $PROJECT_HOME/../edge_detect_c/sharpen.c(49): Pragma 'hls_design<top>' detected on routine 'sharpen' (CIN-6)
# Source file analysis completed (CIN-68)
# Info: Completed transformation 'analyze' on solution 'solution.v5': elapsed time 1.87 seconds, memory usage 471596kB, peak memory usage 526592kB (SOL-9)
directive set -DESIGN_HIERARCHY sharpen
# /DESIGN_HIERARCHY sharpen
go compile
# Info: Starting transformation 'compile' on solution 'solution.v5' (SOL-8)
# Generating synthesis internal form... (CIN-3)
# $PROJECT_HOME/../edge_detect_c/sharpen.c(50): Found top design routine 'sharpen' specified by directive (CIN-52)
# $PROJECT_HOME/../edge_detect_c/sharpen.c(50): Synthesizing routine 'sharpen' (CIN-13)
# $PROJECT_HOME/../edge_detect_c/sharpen.c(50): Inlining routine 'sharpen' (CIN-14)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(13): Inlining member function 'shift_class<ac_int<90, false>, 3>::shift_class' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(32): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator<<' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(48): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(48): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(48): Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
# $PROJECT_HOME/../edge_detect_c/sharpen.c(116): Inlining routine 'AbsAndMax' (CIN-14)
# $PROJECT_HOME/../edge_detect_c/sharpen.c(116): Inlining routine 'AbsAndMax' (CIN-14)
# $PROJECT_HOME/../edge_detect_c/sharpen.c(116): Inlining routine 'AbsAndMax' (CIN-14)
# $PROJECT_HOME/../edge_detect_c/sharpen.c(50): Optimizing block '/sharpen' ... (CIN-4)
# $PROJECT_HOME/../edge_detect_c/sharpen.c(50): Inout port 'vin' is only used as an input. (OPT-10)
# $PROJECT_HOME/../edge_detect_c/sharpen.c(50): Inout port 'vout' is only used as an output. (OPT-11)
# Info: Optimizing partition '/sharpen': (Total ops = 327, Real ops = 83, Vars = 89) (SOL-10)
# Info: Optimizing partition '/sharpen/core': (Total ops = 327, Real ops = 83, Vars = 87) (SOL-10)
# Info: Optimizing partition '/sharpen/core': (Total ops = 319, Real ops = 79, Vars = 88) (SOL-10)
# Info: Optimizing partition '/sharpen': (Total ops = 319, Real ops = 79, Vars = 90) (SOL-10)
# Info: Optimizing partition '/sharpen': (Total ops = 319, Real ops = 79, Vars = 90) (SOL-10)
# Info: Optimizing partition '/sharpen/core': (Total ops = 319, Real ops = 79, Vars = 88) (SOL-10)
# Info: Optimizing partition '/sharpen/core': (Total ops = 260, Real ops = 76, Vars = 60) (SOL-10)
# Info: Optimizing partition '/sharpen/core': (Total ops = 249, Real ops = 76, Vars = 59) (SOL-10)
# Info: Optimizing partition '/sharpen/core': (Total ops = 249, Real ops = 76, Vars = 59) (SOL-10)
# Info: Optimizing partition '/sharpen': (Total ops = 249, Real ops = 76, Vars = 61) (SOL-10)
# Info: Optimizing partition '/sharpen': (Total ops = 249, Real ops = 76, Vars = 61) (SOL-10)
# Info: Optimizing partition '/sharpen/core': (Total ops = 246, Real ops = 76, Vars = 65) (SOL-10)
# Info: Optimizing partition '/sharpen/core': (Total ops = 305, Real ops = 68, Vars = 19) (SOL-10)
# Info: Optimizing partition '/sharpen': (Total ops = 305, Real ops = 68, Vars = 21) (SOL-10)
# Info: Optimizing partition '/sharpen/core': (Total ops = 305, Real ops = 68, Vars = 22) (SOL-10)
# Info: Optimizing partition '/sharpen/core': (Total ops = 305, Real ops = 68, Vars = 19) (SOL-10)
# Info: Optimizing partition '/sharpen': (Total ops = 305, Real ops = 68, Vars = 21) (SOL-10)
# Info: Optimizing partition '/sharpen/core': (Total ops = 305, Real ops = 68, Vars = 19) (SOL-10)
# Info: Optimizing partition '/sharpen': (Total ops = 305, Real ops = 68, Vars = 21) (SOL-10)
# Info: Optimizing partition '/sharpen': (Total ops = 305, Real ops = 68, Vars = 21) (SOL-10)
# Info: Optimizing partition '/sharpen/core': (Total ops = 305, Real ops = 68, Vars = 19) (SOL-10)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(34): Loop '/sharpen/core/SHIFT' iterated at most 3 times. (LOOP-2)
# $PROJECT_HOME/../edge_detect_c/sharpen.c(81): Loop '/sharpen/core/ACC_GX:for' iterated at most 3 times. (LOOP-2)
# $PROJECT_HOME/../edge_detect_c/sharpen.c(80): Loop '/sharpen/core/ACC_GX' iterated at most 3 times. (LOOP-2)
# $PROJECT_HOME/../edge_detect_c/sharpen.c(65): Loop '/sharpen/core/FRAME' iterated at most 1 times. (LOOP-2)
# Info: Optimizing partition '/sharpen/core': (Total ops = 301, Real ops = 64, Vars = 20) (SOL-10)
# Info: Optimizing partition '/sharpen/core': (Total ops = 271, Real ops = 61, Vars = 20) (SOL-10)
# Info: Optimizing partition '/sharpen': (Total ops = 271, Real ops = 61, Vars = 22) (SOL-10)
# Info: Optimizing partition '/sharpen/core': (Total ops = 269, Real ops = 61, Vars = 23) (SOL-10)
# Info: Optimizing partition '/sharpen/core': (Total ops = 266, Real ops = 61, Vars = 20) (SOL-10)
# Info: Optimizing partition '/sharpen': (Total ops = 266, Real ops = 61, Vars = 22) (SOL-10)
# Info: Optimizing partition '/sharpen/core': (Total ops = 266, Real ops = 61, Vars = 20) (SOL-10)
# Info: Optimizing partition '/sharpen': (Total ops = 266, Real ops = 61, Vars = 22) (SOL-10)
# Design 'sharpen' was read (SOL-1)
# Info: Completed transformation 'compile' on solution 'sharpen.v1': elapsed time 10.45 seconds, memory usage 486096kB, peak memory usage 526592kB (SOL-9)
directive set /sharpen/core/main -PIPELINE_INIT_INTERVAL 1
# /sharpen/core/main/PIPELINE_INIT_INTERVAL 1
directive set /sharpen/core/main -DISTRIBUTED_PIPELINE true
# /sharpen/core/main/DISTRIBUTED_PIPELINE true
go allocate
# Info: Starting transformation 'architect' on solution 'sharpen.v1' (SOL-8)
# $PROJECT_HOME/../edge_detect_c/shift_class.h(34): Loop '/sharpen/core/SHIFT' is left rolled. (LOOP-4)
# $PROJECT_HOME/../edge_detect_c/sharpen.c(81): Loop '/sharpen/core/ACC_GX:for' is left rolled. (LOOP-4)
# $PROJECT_HOME/../edge_detect_c/sharpen.c(80): Loop '/sharpen/core/ACC_GX' is left rolled. (LOOP-4)
# $PROJECT_HOME/../edge_detect_c/sharpen.c(50): Loop '/sharpen/core/main' is left rolled. (LOOP-4)
# $PROJECT_HOME/../edge_detect_c/sharpen.c(50): I/O-Port inferred - resource 'vin:rsc' (from var: vin) mapped to 'mgc_ioport.mgc_in_wire' (size: 90). (MEM-2)
# $PROJECT_HOME/../edge_detect_c/sharpen.c(50): I/O-Port inferred - resource 'vout:rsc' (from var: vout) mapped to 'mgc_ioport.mgc_out_stdreg' (size: 30). (MEM-2)
# Info: Optimizing partition '/sharpen': (Total ops = 269, Real ops = 62, Vars = 25) (SOL-10)
# Info: Optimizing partition '/sharpen/core': (Total ops = 269, Real ops = 62, Vars = 20) (SOL-10)
# Info: Optimizing partition '/sharpen/core': (Total ops = 268, Real ops = 62, Vars = 20) (SOL-10)
# Info: Optimizing partition '/sharpen': (Total ops = 268, Real ops = 62, Vars = 25) (SOL-10)
# Info: Optimizing partition '/sharpen': (Total ops = 280, Real ops = 65, Vars = 30) (SOL-10)
# Info: Optimizing partition '/sharpen/core': (Total ops = 277, Real ops = 65, Vars = 27) (SOL-10)
# Info: Optimizing partition '/sharpen/core': (Total ops = 274, Real ops = 64, Vars = 23) (SOL-10)
# Info: Optimizing partition '/sharpen': (Total ops = 274, Real ops = 64, Vars = 28) (SOL-10)
# Info: Optimizing partition '/sharpen/core': (Total ops = 284, Real ops = 65, Vars = 27) (SOL-10)
# Info: Optimizing partition '/sharpen/core': (Total ops = 286, Real ops = 65, Vars = 27) (SOL-10)
# Info: Optimizing partition '/sharpen/core': (Total ops = 283, Real ops = 65, Vars = 27) (SOL-10)
# Info: Optimizing partition '/sharpen/core': (Total ops = 648, Real ops = 139, Vars = 245) (SOL-10)
# Info: Optimizing partition '/sharpen/core': (Total ops = 336, Real ops = 101, Vars = 51) (SOL-10)
# Info: Optimizing partition '/sharpen/core': (Total ops = 335, Real ops = 101, Vars = 50) (SOL-10)
# Design 'sharpen' contains '132' real operations. (SOL-11)
# Info: Completed transformation 'architect' on solution 'sharpen.v1': elapsed time 29.42 seconds, memory usage 486268kB, peak memory usage 526592kB (SOL-9)
# Info: Starting transformation 'allocate' on solution 'sharpen.v1' (SOL-8)
# Performing concurrent resource allocation and scheduling on '/sharpen/core' (CRAAS-1)
# Info: Select qualified components for data operations ... (CRAAS-3)
# Info: Apply resource constraints on data operations ... (CRAAS-4)
# $PROJECT_HOME/../edge_detect_c/sharpen.c(50): Prescheduled LOOP 'main' (3 c-steps) (SCHD-7)
# $PROJECT_HOME/../edge_detect_c/sharpen.c(50): Prescheduled LOOP 'core:rlp' (0 c-steps) (SCHD-7)
# $PROJECT_HOME/../edge_detect_c/sharpen.c(50): Prescheduled SEQUENTIAL 'core' (total length 3 c-steps) (SCHD-8)
# Info: Initial schedule of SEQUENTIAL 'core': Latency = 13, Area (Datapath, Register, Total) = 3118.24, 0.00, 3118.24 (CRAAS-11)
# At least one feasible schedule exists. (CRAAS-9)
# Info: Optimized LOOP 'main': Latency = 13, Area (Datapath, Register, Total) = 3116.85, 0.00, 3116.85 (CRAAS-10)
# Info: Optimized LOOP 'main': Latency = 13, Area (Datapath, Register, Total) = 3060.17, 0.00, 3060.17 (CRAAS-10)
# Info: Optimized LOOP 'main': Latency = 13, Area (Datapath, Register, Total) = 3058.65, 0.00, 3058.65 (CRAAS-10)
# Info: Final schedule of SEQUENTIAL 'core': Latency = 13, Area (Datapath, Register, Total) = 3058.65, 0.00, 3058.65 (CRAAS-12)
# Resource allocation and scheduling done. (CRAAS-2)
# Netlist written to file 'schedule.gnt' (NET-4)
# Info: Completed transformation 'allocate' on solution 'sharpen.v1': elapsed time 4.48 seconds, memory usage 487164kB, peak memory usage 526592kB (SOL-9)
quit -f
