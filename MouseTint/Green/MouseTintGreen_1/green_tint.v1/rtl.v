// ----------------------------------------------------------------------
//  HLS HDL:        Verilog Netlister
//  HLS Version:    2011a.126 Production Release
//  HLS Date:       Wed Aug  8 00:52:07 PDT 2012
// 
//  Generated by:   jb914@EEWS104A-014
//  Generated date: Wed May 06 14:30:17 2015
// ----------------------------------------------------------------------

// 
// ------------------------------------------------------------------
//  Design Unit:    green_tint_core
// ------------------------------------------------------------------


module green_tint_core (
  clk, en, arst_n, video_in_rsc_mgc_in_wire_d, video_out_rsc_mgc_out_stdreg_d, mouse_xy_rsc_mgc_in_wire_d
);
  input clk;
  input en;
  input arst_n;
  input [29:0] video_in_rsc_mgc_in_wire_d;
  output [29:0] video_out_rsc_mgc_out_stdreg_d;
  input [19:0] mouse_xy_rsc_mgc_in_wire_d;


  // Interconnect Declarations
  reg [8:0] reg_video_out_rsc_mgc_out_stdreg_d_tmp;
  reg reg_video_out_rsc_mgc_out_stdreg_d_tmp_1;
  reg [9:0] reg_video_out_rsc_mgc_out_stdreg_d_tmp_2;
  reg [8:0] reg_video_out_rsc_mgc_out_stdreg_d_tmp_3;
  reg reg_video_out_rsc_mgc_out_stdreg_d_tmp_4;
  wire [10:0] else_else_acc_4_itm;
  wire [11:0] nl_else_else_acc_4_itm;
  wire [10:0] else_else_acc_6_itm;
  wire [11:0] nl_else_else_acc_6_itm;


  // Interconnect Declarations for Component Instantiations 
  assign video_out_rsc_mgc_out_stdreg_d = {reg_video_out_rsc_mgc_out_stdreg_d_tmp
      , reg_video_out_rsc_mgc_out_stdreg_d_tmp_1 , reg_video_out_rsc_mgc_out_stdreg_d_tmp_2
      , reg_video_out_rsc_mgc_out_stdreg_d_tmp_3 , reg_video_out_rsc_mgc_out_stdreg_d_tmp_4};
  assign nl_else_else_acc_4_itm = conv_u2u_10_11({(video_in_rsc_mgc_in_wire_d[29:21])
      , 1'b1}) + conv_s2u_10_11({1'b1 , (~ (mouse_xy_rsc_mgc_in_wire_d[8:1])) , 1'b1});
  assign else_else_acc_4_itm = nl_else_else_acc_4_itm[10:0];
  assign nl_else_else_acc_6_itm = conv_u2u_10_11({(video_in_rsc_mgc_in_wire_d[9:1])
      , 1'b1}) + conv_s2u_10_11({1'b1 , (~ (mouse_xy_rsc_mgc_in_wire_d[8:1])) , 1'b1});
  assign else_else_acc_6_itm = nl_else_else_acc_6_itm[10:0];
  always @(posedge clk or negedge arst_n) begin
    if ( ~ arst_n ) begin
      reg_video_out_rsc_mgc_out_stdreg_d_tmp <= 9'b0;
      reg_video_out_rsc_mgc_out_stdreg_d_tmp_1 <= 1'b0;
      reg_video_out_rsc_mgc_out_stdreg_d_tmp_2 <= 10'b0;
      reg_video_out_rsc_mgc_out_stdreg_d_tmp_3 <= 9'b0;
      reg_video_out_rsc_mgc_out_stdreg_d_tmp_4 <= 1'b0;
    end
    else begin
      if ( en ) begin
        reg_video_out_rsc_mgc_out_stdreg_d_tmp <= (else_else_acc_4_itm[9:1]) & (signext_9_1(~
            (else_else_acc_4_itm[10])));
        reg_video_out_rsc_mgc_out_stdreg_d_tmp_1 <= (readslicef_2_1_1((({(video_in_rsc_mgc_in_wire_d[20])
            , 1'b1}) + 2'b11))) & (~ (else_else_acc_4_itm[10]));
        reg_video_out_rsc_mgc_out_stdreg_d_tmp_2 <= video_in_rsc_mgc_in_wire_d[19:10];
        reg_video_out_rsc_mgc_out_stdreg_d_tmp_3 <= (else_else_acc_6_itm[9:1]) &
            (signext_9_1(~ (else_else_acc_6_itm[10])));
        reg_video_out_rsc_mgc_out_stdreg_d_tmp_4 <= (readslicef_2_1_1((({(video_in_rsc_mgc_in_wire_d[0])
            , 1'b1}) + 2'b11))) & (~ (else_else_acc_6_itm[10]));
      end
    end
  end

  function [8:0] signext_9_1;
    input [0:0] vector;
  begin
    signext_9_1= {{8{vector[0]}}, vector};
  end
  endfunction


  function [0:0] readslicef_2_1_1;
    input [1:0] vector;
    reg [1:0] tmp;
  begin
    tmp = vector >> 1;
    readslicef_2_1_1 = tmp[0:0];
  end
  endfunction


  function  [10:0] conv_u2u_10_11 ;
    input [9:0]  vector ;
  begin
    conv_u2u_10_11 = {1'b0, vector};
  end
  endfunction


  function  [10:0] conv_s2u_10_11 ;
    input signed [9:0]  vector ;
  begin
    conv_s2u_10_11 = {vector[9], vector};
  end
  endfunction

endmodule

// ------------------------------------------------------------------
//  Design Unit:    green_tint
//  Generated from file(s):
//    3) $PROJECT_HOME/MouseTintGreen.c
// ------------------------------------------------------------------


module green_tint (
  video_in_rsc_z, video_out_rsc_z, mouse_xy_rsc_z, clk, en, arst_n
);
  input [29:0] video_in_rsc_z;
  output [29:0] video_out_rsc_z;
  input [19:0] mouse_xy_rsc_z;
  input clk;
  input en;
  input arst_n;


  // Interconnect Declarations
  wire [29:0] video_in_rsc_mgc_in_wire_d;
  wire [29:0] video_out_rsc_mgc_out_stdreg_d;
  wire [19:0] mouse_xy_rsc_mgc_in_wire_d;


  // Interconnect Declarations for Component Instantiations 
  mgc_in_wire #(.rscid(1),
  .width(30)) video_in_rsc_mgc_in_wire (
      .d(video_in_rsc_mgc_in_wire_d),
      .z(video_in_rsc_z)
    );
  mgc_out_stdreg #(.rscid(2),
  .width(30)) video_out_rsc_mgc_out_stdreg (
      .d(video_out_rsc_mgc_out_stdreg_d),
      .z(video_out_rsc_z)
    );
  mgc_in_wire #(.rscid(3),
  .width(20)) mouse_xy_rsc_mgc_in_wire (
      .d(mouse_xy_rsc_mgc_in_wire_d),
      .z(mouse_xy_rsc_z)
    );
  green_tint_core green_tint_core_inst (
      .clk(clk),
      .en(en),
      .arst_n(arst_n),
      .video_in_rsc_mgc_in_wire_d(video_in_rsc_mgc_in_wire_d),
      .video_out_rsc_mgc_out_stdreg_d(video_out_rsc_mgc_out_stdreg_d),
      .mouse_xy_rsc_mgc_in_wire_d(mouse_xy_rsc_mgc_in_wire_d)
    );
endmodule



