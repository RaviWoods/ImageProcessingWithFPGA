-- ----------------------------------------------------------------------
--  HLS HDL:        VHDL Netlister
--  HLS Version:    2011a.126 Production Release
--  HLS Date:       Wed Aug  8 00:52:07 PDT 2012
-- 
--  Generated by:   rbw14@EEWS104A-005
--  Generated date: Tue May 05 13:48:21 2015
-- ----------------------------------------------------------------------

-- 
-- ------------------------------------------------------------------
--  Design Unit:    red_tint_core
-- ------------------------------------------------------------------

LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
USE IEEE.STD_LOGIC_ARITH.ALL;
LIBRARY mgc_hls;
USE mgc_hls.funcs.ALL;
USE work.red_tint_mux_pkg.ALL;


ENTITY red_tint_core IS
  PORT(
    clk : IN STD_LOGIC;
    en : IN STD_LOGIC;
    arst_n : IN STD_LOGIC;
    video_in_rsc_mgc_in_wire_d : IN STD_LOGIC_VECTOR (29 DOWNTO 0);
    video_out_rsc_mgc_out_stdreg_d : OUT STD_LOGIC_VECTOR (29 DOWNTO 0);
    mouse_xy_rsc_mgc_in_wire_d : IN STD_LOGIC_VECTOR (19 DOWNTO 0)
  );
END red_tint_core;

ARCHITECTURE v1 OF red_tint_core IS
  -- Default Constants

  -- Interconnect Declarations
  SIGNAL reg_video_out_rsc_mgc_out_stdreg_d_tmp : STD_LOGIC_VECTOR (9 DOWNTO 0);
  SIGNAL reg_video_out_rsc_mgc_out_stdreg_d_tmp_1 : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL reg_video_out_rsc_mgc_out_stdreg_d_tmp_2 : STD_LOGIC;
  SIGNAL reg_video_out_rsc_mgc_out_stdreg_d_tmp_3 : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL reg_video_out_rsc_mgc_out_stdreg_d_tmp_4 : STD_LOGIC;
  SIGNAL makepos_acc_1_itm : STD_LOGIC_VECTOR (11 DOWNTO 0);
  SIGNAL makepos_1_acc_1_itm : STD_LOGIC_VECTOR (11 DOWNTO 0);
  SIGNAL acc_5_itm : STD_LOGIC_VECTOR (11 DOWNTO 0);
  SIGNAL acc_4_itm : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL acc_7_itm : STD_LOGIC_VECTOR (11 DOWNTO 0);
  SIGNAL acc_6_itm : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL acc_2_itm : STD_LOGIC_VECTOR (6 DOWNTO 0);

BEGIN
  -- Default Constant Signal Assignments

  makepos_acc_1_itm <= STD_LOGIC_VECTOR(CONV_SIGNED(SIGNED((NOT (acc_5_itm(11 DOWNTO
      1))) & TO_STDLOGICVECTOR(NOT (acc_4_itm(1)))) + CONV_SIGNED(CONV_UNSIGNED('1',
      1), 12), 12));
  makepos_1_acc_1_itm <= STD_LOGIC_VECTOR(CONV_SIGNED(SIGNED((NOT (acc_7_itm(11 DOWNTO
      1))) & TO_STDLOGICVECTOR(NOT (acc_6_itm(1)))) + CONV_SIGNED(CONV_UNSIGNED('1',
      1), 12), 12));
  video_out_rsc_mgc_out_stdreg_d <= reg_video_out_rsc_mgc_out_stdreg_d_tmp & reg_video_out_rsc_mgc_out_stdreg_d_tmp_1
      & TO_STDLOGICVECTOR(reg_video_out_rsc_mgc_out_stdreg_d_tmp_2) & reg_video_out_rsc_mgc_out_stdreg_d_tmp_3
      & TO_STDLOGICVECTOR(reg_video_out_rsc_mgc_out_stdreg_d_tmp_4);
  acc_5_itm <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED((video_in_rsc_mgc_in_wire_d(19
      DOWNTO 11)) & TO_STDLOGICVECTOR('1')), 12) + CONV_UNSIGNED(SIGNED((NOT acc_2_itm)
      & (NOT (mouse_xy_rsc_mgc_in_wire_d(1 DOWNTO 0))) & TO_STDLOGICVECTOR('1')),
      12), 12));
  acc_4_itm <= STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED'((video_in_rsc_mgc_in_wire_d(10))
      & '1') + CONV_UNSIGNED(CONV_SIGNED('1', 1), 2), 2));
  acc_7_itm <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED((video_in_rsc_mgc_in_wire_d(9
      DOWNTO 1)) & TO_STDLOGICVECTOR('1')), 12) + CONV_UNSIGNED(SIGNED((NOT acc_2_itm)
      & (NOT (mouse_xy_rsc_mgc_in_wire_d(1 DOWNTO 0))) & TO_STDLOGICVECTOR('1')),
      12), 12));
  acc_6_itm <= STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED'((video_in_rsc_mgc_in_wire_d(0))
      & '1') + CONV_UNSIGNED(CONV_SIGNED('1', 1), 2), 2));
  acc_2_itm <= STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED(mouse_xy_rsc_mgc_in_wire_d(8
      DOWNTO 2)) + UNSIGNED(mouse_xy_rsc_mgc_in_wire_d(6 DOWNTO 0)), 7));
  PROCESS (clk, arst_n)
  BEGIN
    IF ( arst_n = '0' ) THEN
      reg_video_out_rsc_mgc_out_stdreg_d_tmp <= STD_LOGIC_VECTOR'("0000000000");
      reg_video_out_rsc_mgc_out_stdreg_d_tmp_1 <= STD_LOGIC_VECTOR'("000000000");
      reg_video_out_rsc_mgc_out_stdreg_d_tmp_2 <= '0';
      reg_video_out_rsc_mgc_out_stdreg_d_tmp_3 <= STD_LOGIC_VECTOR'("000000000");
      reg_video_out_rsc_mgc_out_stdreg_d_tmp_4 <= '0';
    ELSIF clk'EVENT AND ( clk = '1' ) THEN
      IF ( en = '1' ) THEN
        reg_video_out_rsc_mgc_out_stdreg_d_tmp <= video_in_rsc_mgc_in_wire_d(29 DOWNTO
            20);
        reg_video_out_rsc_mgc_out_stdreg_d_tmp_1 <= MUX_v_9_2_2(STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(NOT
            (acc_5_itm(11)), 1),9)) & (acc_5_itm(9 DOWNTO 1)), makepos_acc_1_itm(11));
        reg_video_out_rsc_mgc_out_stdreg_d_tmp_2 <= MUX_s_1_2_2(STD_LOGIC_VECTOR'((NOT
            (acc_5_itm(11))) & (acc_4_itm(1))), makepos_acc_1_itm(11));
        reg_video_out_rsc_mgc_out_stdreg_d_tmp_3 <= MUX_v_9_2_2(STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(NOT
            (acc_7_itm(11)), 1),9)) & (acc_7_itm(9 DOWNTO 1)), makepos_1_acc_1_itm(11));
        reg_video_out_rsc_mgc_out_stdreg_d_tmp_4 <= MUX_s_1_2_2(STD_LOGIC_VECTOR'((NOT
            (acc_7_itm(11))) & (acc_6_itm(1))), makepos_1_acc_1_itm(11));
      END IF;
    END IF;
  END PROCESS;
END v1;

-- ------------------------------------------------------------------
--  Design Unit:    red_tint
--  Generated from file(s):
--    2) $PROJECT_HOME/edge3.c
-- ------------------------------------------------------------------

LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
USE IEEE.STD_LOGIC_ARITH.ALL;
LIBRARY mgc_hls;
USE mgc_hls.funcs.ALL;
USE work.red_tint_mux_pkg.ALL;


ENTITY red_tint IS
  PORT(
    video_in_rsc_z : IN STD_LOGIC_VECTOR (29 DOWNTO 0);
    video_out_rsc_z : OUT STD_LOGIC_VECTOR (29 DOWNTO 0);
    mouse_xy_rsc_z : IN STD_LOGIC_VECTOR (19 DOWNTO 0);
    clk : IN STD_LOGIC;
    en : IN STD_LOGIC;
    arst_n : IN STD_LOGIC
  );
END red_tint;

ARCHITECTURE v1 OF red_tint IS
  -- Default Constants

  -- Interconnect Declarations
  SIGNAL video_in_rsc_mgc_in_wire_d : STD_LOGIC_VECTOR (29 DOWNTO 0);
  SIGNAL video_out_rsc_mgc_out_stdreg_d : STD_LOGIC_VECTOR (29 DOWNTO 0);
  SIGNAL mouse_xy_rsc_mgc_in_wire_d : STD_LOGIC_VECTOR (19 DOWNTO 0);

  SIGNAL video_in_rsc_mgc_in_wire_d_1 : STD_LOGIC_VECTOR (29 DOWNTO 0);
  SIGNAL video_in_rsc_mgc_in_wire_z : STD_LOGIC_VECTOR (29 DOWNTO 0);

  SIGNAL video_out_rsc_mgc_out_stdreg_d_1 : STD_LOGIC_VECTOR (29 DOWNTO 0);
  SIGNAL video_out_rsc_mgc_out_stdreg_z : STD_LOGIC_VECTOR (29 DOWNTO 0);

  SIGNAL mouse_xy_rsc_mgc_in_wire_d_1 : STD_LOGIC_VECTOR (19 DOWNTO 0);
  SIGNAL mouse_xy_rsc_mgc_in_wire_z : STD_LOGIC_VECTOR (19 DOWNTO 0);

  COMPONENT red_tint_core
    PORT(
      clk : IN STD_LOGIC;
      en : IN STD_LOGIC;
      arst_n : IN STD_LOGIC;
      video_in_rsc_mgc_in_wire_d : IN STD_LOGIC_VECTOR (29 DOWNTO 0);
      video_out_rsc_mgc_out_stdreg_d : OUT STD_LOGIC_VECTOR (29 DOWNTO 0);
      mouse_xy_rsc_mgc_in_wire_d : IN STD_LOGIC_VECTOR (19 DOWNTO 0)
    );
  END COMPONENT;
  SIGNAL red_tint_core_inst_video_in_rsc_mgc_in_wire_d : STD_LOGIC_VECTOR (29 DOWNTO
      0);
  SIGNAL red_tint_core_inst_video_out_rsc_mgc_out_stdreg_d : STD_LOGIC_VECTOR (29
      DOWNTO 0);
  SIGNAL red_tint_core_inst_mouse_xy_rsc_mgc_in_wire_d : STD_LOGIC_VECTOR (19 DOWNTO
      0);

BEGIN
  -- Default Constant Signal Assignments

  video_in_rsc_mgc_in_wire : mgc_hls.mgc_ioport_comps.mgc_in_wire
    GENERIC MAP(
      rscid => 1,
      width => 30
      )
    PORT MAP(
      d => video_in_rsc_mgc_in_wire_d_1,
      z => video_in_rsc_mgc_in_wire_z
    );
  video_in_rsc_mgc_in_wire_d <= video_in_rsc_mgc_in_wire_d_1;
  video_in_rsc_mgc_in_wire_z <= video_in_rsc_z;

  video_out_rsc_mgc_out_stdreg : mgc_hls.mgc_ioport_comps.mgc_out_stdreg
    GENERIC MAP(
      rscid => 2,
      width => 30
      )
    PORT MAP(
      d => video_out_rsc_mgc_out_stdreg_d_1,
      z => video_out_rsc_mgc_out_stdreg_z
    );
  video_out_rsc_mgc_out_stdreg_d_1 <= video_out_rsc_mgc_out_stdreg_d;
  video_out_rsc_z <= video_out_rsc_mgc_out_stdreg_z;

  mouse_xy_rsc_mgc_in_wire : mgc_hls.mgc_ioport_comps.mgc_in_wire
    GENERIC MAP(
      rscid => 3,
      width => 20
      )
    PORT MAP(
      d => mouse_xy_rsc_mgc_in_wire_d_1,
      z => mouse_xy_rsc_mgc_in_wire_z
    );
  mouse_xy_rsc_mgc_in_wire_d <= mouse_xy_rsc_mgc_in_wire_d_1;
  mouse_xy_rsc_mgc_in_wire_z <= mouse_xy_rsc_z;

  red_tint_core_inst : red_tint_core
    PORT MAP(
      clk => clk,
      en => en,
      arst_n => arst_n,
      video_in_rsc_mgc_in_wire_d => red_tint_core_inst_video_in_rsc_mgc_in_wire_d,
      video_out_rsc_mgc_out_stdreg_d => red_tint_core_inst_video_out_rsc_mgc_out_stdreg_d,
      mouse_xy_rsc_mgc_in_wire_d => red_tint_core_inst_mouse_xy_rsc_mgc_in_wire_d
    );
  red_tint_core_inst_video_in_rsc_mgc_in_wire_d <= video_in_rsc_mgc_in_wire_d;
  video_out_rsc_mgc_out_stdreg_d <= red_tint_core_inst_video_out_rsc_mgc_out_stdreg_d;
  red_tint_core_inst_mouse_xy_rsc_mgc_in_wire_d <= mouse_xy_rsc_mgc_in_wire_d;

END v1;



