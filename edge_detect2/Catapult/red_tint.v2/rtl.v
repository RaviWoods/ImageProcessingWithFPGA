// ----------------------------------------------------------------------
//  HLS HDL:        Verilog Netlister
//  HLS Version:    2011a.126 Production Release
//  HLS Date:       Wed Aug  8 00:52:07 PDT 2012
// 
//  Generated by:   rbw14@EEWS104A-005
//  Generated date: Tue May 05 14:45:21 2015
// ----------------------------------------------------------------------

// 
// ------------------------------------------------------------------
//  Design Unit:    red_tint_core
// ------------------------------------------------------------------


module red_tint_core (
  clk, en, arst_n, video_in_rsc_mgc_in_wire_d, video_out_rsc_mgc_out_stdreg_d, mouse_xy_rsc_mgc_in_wire_d
);
  input clk;
  input en;
  input arst_n;
  input [29:0] video_in_rsc_mgc_in_wire_d;
  output [29:0] video_out_rsc_mgc_out_stdreg_d;
  input [19:0] mouse_xy_rsc_mgc_in_wire_d;


  // Interconnect Declarations
  reg [9:0] reg_video_out_rsc_mgc_out_stdreg_d_tmp;
  reg [8:0] reg_video_out_rsc_mgc_out_stdreg_d_tmp_1;
  reg reg_video_out_rsc_mgc_out_stdreg_d_tmp_2;
  reg [8:0] reg_video_out_rsc_mgc_out_stdreg_d_tmp_3;
  reg reg_video_out_rsc_mgc_out_stdreg_d_tmp_4;
  wire [11:0] makepos_acc_1_itm;
  wire [12:0] nl_makepos_acc_1_itm;
  wire [11:0] makepos_1_acc_1_itm;
  wire [12:0] nl_makepos_1_acc_1_itm;
  wire [11:0] acc_5_itm;
  wire [12:0] nl_acc_5_itm;
  wire [1:0] acc_4_itm;
  wire [2:0] nl_acc_4_itm;
  wire [11:0] acc_7_itm;
  wire [12:0] nl_acc_7_itm;
  wire [1:0] acc_6_itm;
  wire [2:0] nl_acc_6_itm;
  wire [6:0] acc_2_itm;
  wire [7:0] nl_acc_2_itm;


  // Interconnect Declarations for Component Instantiations 
  assign nl_makepos_acc_1_itm = ({(~ (acc_5_itm[11:1])) , (~ (acc_4_itm[1]))}) +
      12'b1;
  assign makepos_acc_1_itm = nl_makepos_acc_1_itm[11:0];
  assign nl_makepos_1_acc_1_itm = ({(~ (acc_7_itm[11:1])) , (~ (acc_6_itm[1]))})
      + 12'b1;
  assign makepos_1_acc_1_itm = nl_makepos_1_acc_1_itm[11:0];
  assign video_out_rsc_mgc_out_stdreg_d = {reg_video_out_rsc_mgc_out_stdreg_d_tmp
      , reg_video_out_rsc_mgc_out_stdreg_d_tmp_1 , reg_video_out_rsc_mgc_out_stdreg_d_tmp_2
      , reg_video_out_rsc_mgc_out_stdreg_d_tmp_3 , reg_video_out_rsc_mgc_out_stdreg_d_tmp_4};
  assign nl_acc_5_itm = conv_u2u_10_12({(video_in_rsc_mgc_in_wire_d[19:11]) , 1'b1})
      + conv_s2u_10_12({(~ acc_2_itm) , (~ (mouse_xy_rsc_mgc_in_wire_d[1:0])) , 1'b1});
  assign acc_5_itm = nl_acc_5_itm[11:0];
  assign nl_acc_4_itm = ({(video_in_rsc_mgc_in_wire_d[10]) , 1'b1}) + 2'b11;
  assign acc_4_itm = nl_acc_4_itm[1:0];
  assign nl_acc_7_itm = conv_u2u_10_12({(video_in_rsc_mgc_in_wire_d[9:1]) , 1'b1})
      + conv_s2u_10_12({(~ acc_2_itm) , (~ (mouse_xy_rsc_mgc_in_wire_d[1:0])) , 1'b1});
  assign acc_7_itm = nl_acc_7_itm[11:0];
  assign nl_acc_6_itm = ({(video_in_rsc_mgc_in_wire_d[0]) , 1'b1}) + 2'b11;
  assign acc_6_itm = nl_acc_6_itm[1:0];
  assign nl_acc_2_itm = (mouse_xy_rsc_mgc_in_wire_d[8:2]) + (mouse_xy_rsc_mgc_in_wire_d[6:0]);
  assign acc_2_itm = nl_acc_2_itm[6:0];
  always @(posedge clk or negedge arst_n) begin
    if ( ~ arst_n ) begin
      reg_video_out_rsc_mgc_out_stdreg_d_tmp <= 10'b0;
      reg_video_out_rsc_mgc_out_stdreg_d_tmp_1 <= 9'b0;
      reg_video_out_rsc_mgc_out_stdreg_d_tmp_2 <= 1'b0;
      reg_video_out_rsc_mgc_out_stdreg_d_tmp_3 <= 9'b0;
      reg_video_out_rsc_mgc_out_stdreg_d_tmp_4 <= 1'b0;
    end
    else begin
      if ( en ) begin
        reg_video_out_rsc_mgc_out_stdreg_d_tmp <= video_in_rsc_mgc_in_wire_d[29:20];
        reg_video_out_rsc_mgc_out_stdreg_d_tmp_1 <= MUX_v_9_2_2({(signext_9_1(~ (acc_5_itm[11])))
            , (acc_5_itm[9:1])}, makepos_acc_1_itm[11]);
        reg_video_out_rsc_mgc_out_stdreg_d_tmp_2 <= MUX_s_1_2_2({(~ (acc_5_itm[11]))
            , (acc_4_itm[1])}, makepos_acc_1_itm[11]);
        reg_video_out_rsc_mgc_out_stdreg_d_tmp_3 <= MUX_v_9_2_2({(signext_9_1(~ (acc_7_itm[11])))
            , (acc_7_itm[9:1])}, makepos_1_acc_1_itm[11]);
        reg_video_out_rsc_mgc_out_stdreg_d_tmp_4 <= MUX_s_1_2_2({(~ (acc_7_itm[11]))
            , (acc_6_itm[1])}, makepos_1_acc_1_itm[11]);
      end
    end
  end

  function [8:0] MUX_v_9_2_2;
    input [17:0] inputs;
    input [0:0] sel;
    reg [8:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = inputs[17:9];
      end
      1'b1 : begin
        result = inputs[8:0];
      end
      default : begin
        result = inputs[17:9];
      end
    endcase
    MUX_v_9_2_2 = result;
  end
  endfunction


  function [8:0] signext_9_1;
    input [0:0] vector;
  begin
    signext_9_1= {{8{vector[0]}}, vector};
  end
  endfunction


  function [0:0] MUX_s_1_2_2;
    input [1:0] inputs;
    input [0:0] sel;
    reg [0:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = inputs[1:1];
      end
      1'b1 : begin
        result = inputs[0:0];
      end
      default : begin
        result = inputs[1:1];
      end
    endcase
    MUX_s_1_2_2 = result;
  end
  endfunction


  function  [11:0] conv_u2u_10_12 ;
    input [9:0]  vector ;
  begin
    conv_u2u_10_12 = {{2{1'b0}}, vector};
  end
  endfunction


  function  [11:0] conv_s2u_10_12 ;
    input signed [9:0]  vector ;
  begin
    conv_s2u_10_12 = {{2{vector[9]}}, vector};
  end
  endfunction

endmodule

// ------------------------------------------------------------------
//  Design Unit:    red_tint
//  Generated from file(s):
//    2) $PROJECT_HOME/edge3.c
// ------------------------------------------------------------------


module red_tint (
  video_in_rsc_z, video_out_rsc_z, mouse_xy_rsc_z, clk, en, arst_n
);
  input [29:0] video_in_rsc_z;
  output [29:0] video_out_rsc_z;
  input [19:0] mouse_xy_rsc_z;
  input clk;
  input en;
  input arst_n;


  // Interconnect Declarations
  wire [29:0] video_in_rsc_mgc_in_wire_d;
  wire [29:0] video_out_rsc_mgc_out_stdreg_d;
  wire [19:0] mouse_xy_rsc_mgc_in_wire_d;


  // Interconnect Declarations for Component Instantiations 
  mgc_in_wire #(.rscid(1),
  .width(30)) video_in_rsc_mgc_in_wire (
      .d(video_in_rsc_mgc_in_wire_d),
      .z(video_in_rsc_z)
    );
  mgc_out_stdreg #(.rscid(2),
  .width(30)) video_out_rsc_mgc_out_stdreg (
      .d(video_out_rsc_mgc_out_stdreg_d),
      .z(video_out_rsc_z)
    );
  mgc_in_wire #(.rscid(3),
  .width(20)) mouse_xy_rsc_mgc_in_wire (
      .d(mouse_xy_rsc_mgc_in_wire_d),
      .z(mouse_xy_rsc_z)
    );
  red_tint_core red_tint_core_inst (
      .clk(clk),
      .en(en),
      .arst_n(arst_n),
      .video_in_rsc_mgc_in_wire_d(video_in_rsc_mgc_in_wire_d),
      .video_out_rsc_mgc_out_stdreg_d(video_out_rsc_mgc_out_stdreg_d),
      .mouse_xy_rsc_mgc_in_wire_d(mouse_xy_rsc_mgc_in_wire_d)
    );
endmodule



