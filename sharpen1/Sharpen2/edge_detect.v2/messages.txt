
# Messages from "go new"

Creating project directory 'C:\fpga-catapult-c-spring\sharpen1\Sharpen2'. (PRJ-1)
Branching solution 'solution.v1' at state 'new' (PRJ-2)

# Messages from "go analyze"

Front End called with arguments: -- {C:\fpga-catapult-c-spring\edge_detect_c\edge3.c} {C:\fpga-catapult-c-spring\edge_detect_c\edge.h} {C:\fpga-catapult-c-spring\edge_detect_c\shift_class.h} (CIN-69)
Edison Design Group C++/C Front End - Version 3.10.1 (CIN-1)
Pragma 'hls_design<top>' detected on routine 'edge_detect' (CIN-6)
Source file analysis completed (CIN-68)
Starting transformation 'analyze' on solution 'solution.v1' (SOL-8)
Completed transformation 'analyze' on solution 'solution.v1': elapsed time 1.87 seconds, memory usage 177968kB, peak memory usage 236480kB (SOL-9)

# Messages from "go compile"

Starting transformation 'compile' on solution 'solution.v1' (SOL-8)
Generating synthesis internal form... (CIN-3)
Found top design routine 'edge_detect' specified by directive (CIN-52)
Synthesizing routine 'edge_detect' (CIN-13)
Inlining routine 'edge_detect' (CIN-14)
Inlining member function 'shift_class<ac_int<90, false>, 3>::shift_class' on object 'regs' (CIN-64)
Inlining member function 'shift_class<ac_int<90, false>, 3>::operator<<' on object 'regs' (CIN-64)
Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
Inlining member function 'shift_class<ac_int<90, false>, 3>::operator[]' on object 'regs' (CIN-64)
Inlining routine 'AbsAndMax' (CIN-14)
Inlining routine 'AbsAndMax' (CIN-14)
Inlining routine 'AbsAndMax' (CIN-14)
Inlining routine 'AbsAndMax' (CIN-14)
Inlining routine 'AbsAndMax' (CIN-14)
Inlining routine 'AbsAndMax' (CIN-14)
Inlining routine 'AbsAndMax' (CIN-14)
Inlining routine 'AbsAndMax' (CIN-14)
Inlining routine 'AbsAndMax' (CIN-14)
Optimizing block '/edge_detect' ... (CIN-4)
Inout port 'vin' is only used as an input. (OPT-10)
Inout port 'vout' is only used as an output. (OPT-11)
Loop '/edge_detect/core/RESET' iterated at most 3 times. (LOOP-2)
Loop '/edge_detect/core/SHIFT' iterated at most 3 times. (LOOP-2)
Loop '/edge_detect/core/ACC_GX:for' iterated at most 3 times. (LOOP-2)
Loop '/edge_detect/core/ACC_GX' iterated at most 3 times. (LOOP-2)
Loop '/edge_detect/core/ACC_GY:for' iterated at most 3 times. (LOOP-2)
Loop '/edge_detect/core/ACC_GY' iterated at most 3 times. (LOOP-2)
Loop '/edge_detect/core/ACC3' iterated at most 3 times. (LOOP-2)
Loop '/edge_detect/core/FRAME' iterated at most 1 times. (LOOP-2)
Detected constant initialization of array 'red_x', optimizing loop 'RESET' (LOOP-12)
Detected constant initialization of array 'green_x', optimizing loop 'RESET' (LOOP-12)
Detected constant initialization of array 'blue_x', optimizing loop 'RESET' (LOOP-12)
Detected constant initialization of array 'red_y', optimizing loop 'RESET' (LOOP-12)
Detected constant initialization of array 'green_y', optimizing loop 'RESET' (LOOP-12)
Detected constant initialization of array 'blue_y', optimizing loop 'RESET' (LOOP-12)
Design 'edge_detect' was read (SOL-1)
Optimizing partition '/edge_detect': (Total ops = 584, Real ops = 150, Vars = 150) (SOL-10)
Optimizing partition '/edge_detect/core': (Total ops = 584, Real ops = 150, Vars = 148) (SOL-10)
Optimizing partition '/edge_detect/core': (Total ops = 562, Real ops = 140, Vars = 150) (SOL-10)
Optimizing partition '/edge_detect': (Total ops = 562, Real ops = 140, Vars = 152) (SOL-10)
Optimizing partition '/edge_detect': (Total ops = 562, Real ops = 140, Vars = 152) (SOL-10)
Optimizing partition '/edge_detect/core': (Total ops = 562, Real ops = 140, Vars = 150) (SOL-10)
Optimizing partition '/edge_detect/core': (Total ops = 472, Real ops = 137, Vars = 113) (SOL-10)
Optimizing partition '/edge_detect/core': (Total ops = 458, Real ops = 137, Vars = 112) (SOL-10)
Optimizing partition '/edge_detect/core': (Total ops = 458, Real ops = 137, Vars = 112) (SOL-10)
Optimizing partition '/edge_detect': (Total ops = 458, Real ops = 137, Vars = 114) (SOL-10)
Optimizing partition '/edge_detect': (Total ops = 458, Real ops = 137, Vars = 114) (SOL-10)
Optimizing partition '/edge_detect/core': (Total ops = 456, Real ops = 137, Vars = 122) (SOL-10)
Optimizing partition '/edge_detect/core': (Total ops = 470, Real ops = 125, Vars = 42) (SOL-10)
Optimizing partition '/edge_detect': (Total ops = 470, Real ops = 125, Vars = 44) (SOL-10)
Optimizing partition '/edge_detect/core': (Total ops = 470, Real ops = 125, Vars = 46) (SOL-10)
Optimizing partition '/edge_detect/core': (Total ops = 470, Real ops = 125, Vars = 42) (SOL-10)
Optimizing partition '/edge_detect': (Total ops = 470, Real ops = 125, Vars = 44) (SOL-10)
Optimizing partition '/edge_detect/core': (Total ops = 470, Real ops = 125, Vars = 42) (SOL-10)
Optimizing partition '/edge_detect': (Total ops = 470, Real ops = 125, Vars = 44) (SOL-10)
Optimizing partition '/edge_detect': (Total ops = 470, Real ops = 125, Vars = 44) (SOL-10)
Optimizing partition '/edge_detect/core': (Total ops = 470, Real ops = 125, Vars = 42) (SOL-10)
Optimizing partition '/edge_detect/core': (Total ops = 680, Real ops = 121, Vars = 44) (SOL-10)
Optimizing partition '/edge_detect/core': (Total ops = 423, Real ops = 112, Vars = 43) (SOL-10)
Optimizing partition '/edge_detect': (Total ops = 423, Real ops = 112, Vars = 45) (SOL-10)
Optimizing partition '/edge_detect/core': (Total ops = 417, Real ops = 112, Vars = 49) (SOL-10)
Optimizing partition '/edge_detect/core': (Total ops = 410, Real ops = 112, Vars = 43) (SOL-10)
Optimizing partition '/edge_detect': (Total ops = 410, Real ops = 112, Vars = 45) (SOL-10)
Optimizing partition '/edge_detect/core': (Total ops = 410, Real ops = 112, Vars = 43) (SOL-10)
Optimizing partition '/edge_detect': (Total ops = 410, Real ops = 112, Vars = 45) (SOL-10)
Completed transformation 'compile' on solution 'edge_detect.v1': elapsed time 2.39 seconds, memory usage 173496kB, peak memory usage 236480kB (SOL-9)
Branching solution 'edge_detect.v2' at state 'compile' (PRJ-2)

# Messages from "go architect"

Starting transformation 'architect' on solution 'edge_detect.v2' (SOL-8)
Loop '/edge_detect/core/SHIFT' is left rolled. (LOOP-4)
Loop '/edge_detect/core/ACC_GX:for' is left rolled. (LOOP-4)
Loop '/edge_detect/core/ACC_GX' is left rolled. (LOOP-4)
Loop '/edge_detect/core/ACC_GY:for' is left rolled. (LOOP-4)
Loop '/edge_detect/core/ACC_GY' is left rolled. (LOOP-4)
Loop '/edge_detect/core/ACC3' is left rolled. (LOOP-4)
Loop '/edge_detect/core/main' is left rolled. (LOOP-4)
Loop 'ACC_GY' is merged and folded into Loop 'ACC_GX' (LOOP-9)
Loop 'ACC_GY:for' is merged and folded into Loop 'ACC_GX:for' (LOOP-9)
Optimizing partition '/edge_detect/core': (Total ops = 416, Real ops = 114, Vars = 45) (SOL-10)
Optimizing partition '/edge_detect/core': (Total ops = 414, Real ops = 114, Vars = 45) (SOL-10)
Optimizing partition '/edge_detect/core': (Total ops = 410, Real ops = 112, Vars = 43) (SOL-10)
Optimizing partition '/edge_detect/core': (Total ops = 415, Real ops = 113, Vars = 45) (SOL-10)
Optimizing partition '/edge_detect/core': (Total ops = 413, Real ops = 113, Vars = 45) (SOL-10)
Optimizing partition '/edge_detect/core': (Total ops = 409, Real ops = 111, Vars = 43) (SOL-10)
Optimizing partition '/edge_detect': (Total ops = 409, Real ops = 111, Vars = 48) (SOL-10)
Optimizing partition '/edge_detect/core': (Total ops = 409, Real ops = 111, Vars = 43) (SOL-10)
Optimizing partition '/edge_detect': (Total ops = 409, Real ops = 111, Vars = 48) (SOL-10)
I/O-Port inferred - resource 'vin:rsc' (from var: vin) mapped to 'mgc_ioport.mgc_in_wire' (size: 90). (MEM-2)
I/O-Port inferred - resource 'vout:rsc' (from var: vout) mapped to 'mgc_ioport.mgc_out_stdreg' (size: 30). (MEM-2)
Optimizing partition '/edge_detect': (Total ops = 411, Real ops = 111, Vars = 48) (SOL-10)
Optimizing partition '/edge_detect/core': (Total ops = 411, Real ops = 111, Vars = 43) (SOL-10)
Optimizing partition '/edge_detect/core': (Total ops = 410, Real ops = 111, Vars = 43) (SOL-10)
Optimizing partition '/edge_detect': (Total ops = 410, Real ops = 111, Vars = 48) (SOL-10)
Optimizing partition '/edge_detect': (Total ops = 549, Real ops = 150, Vars = 89) (SOL-10)
Optimizing partition '/edge_detect/core': (Total ops = 510, Real ops = 162, Vars = 122) (SOL-10)
Optimizing partition '/edge_detect/core': (Total ops = 513, Real ops = 161, Vars = 64) (SOL-10)
Optimizing partition '/edge_detect/core': (Total ops = 469, Real ops = 141, Vars = 70) (SOL-10)
Optimizing partition '/edge_detect': (Total ops = 469, Real ops = 141, Vars = 75) (SOL-10)
Optimizing partition '/edge_detect/core': (Total ops = 469, Real ops = 141, Vars = 70) (SOL-10)
Optimizing partition '/edge_detect': (Total ops = 469, Real ops = 141, Vars = 75) (SOL-10)
Design 'edge_detect' contains '332' real operations. (SOL-11)
Optimizing partition '/edge_detect/core': (Total ops = 482, Real ops = 142, Vars = 75) (SOL-10)
Optimizing partition '/edge_detect/core': (Total ops = 486, Real ops = 142, Vars = 75) (SOL-10)
Optimizing partition '/edge_detect/core': (Total ops = 480, Real ops = 142, Vars = 75) (SOL-10)
Optimizing partition '/edge_detect/core': (Total ops = 1577, Real ops = 394, Vars = 715) (SOL-10)
Optimizing partition '/edge_detect/core': (Total ops = 700, Real ops = 286, Vars = 141) (SOL-10)
Optimizing partition '/edge_detect/core': (Total ops = 699, Real ops = 286, Vars = 140) (SOL-10)
Completed transformation 'architect' on solution 'edge_detect.v2': elapsed time 6.88 seconds, memory usage 189548kB, peak memory usage 236480kB (SOL-9)

# Messages from "go allocate"

Performing concurrent resource allocation and scheduling on '/edge_detect/core' (CRAAS-1)
Prescheduled LOOP 'main' (3 c-steps) (SCHD-7)
Prescheduled LOOP 'core:rlp' (0 c-steps) (SCHD-7)
Prescheduled SEQUENTIAL 'core' (total length 3 c-steps) (SCHD-8)
At least one feasible schedule exists. (CRAAS-9)
Resource allocation and scheduling done. (CRAAS-2)
Netlist written to file 'schedule.gnt' (NET-4)
Starting transformation 'allocate' on solution 'edge_detect.v2' (SOL-8)
Select qualified components for data operations ... (CRAAS-3)
Apply resource constraints on data operations ... (CRAAS-4)
Initial schedule of SEQUENTIAL 'core': Latency = 16, Area (Datapath, Register, Total) = 6629.96, 0.00, 6629.96 (CRAAS-11)
Optimized LOOP 'main': Latency = 16, Area (Datapath, Register, Total) = 6591.66, 0.00, 6591.66 (CRAAS-10)
Optimized LOOP 'main': Latency = 16, Area (Datapath, Register, Total) = 6553.35, 0.00, 6553.35 (CRAAS-10)
Optimized LOOP 'main': Latency = 16, Area (Datapath, Register, Total) = 6549.17, 0.00, 6549.17 (CRAAS-10)
Optimized LOOP 'main': Latency = 16, Area (Datapath, Register, Total) = 6540.51, 0.00, 6540.51 (CRAAS-10)
Optimized LOOP 'main': Latency = 16, Area (Datapath, Register, Total) = 6537.99, 0.00, 6537.99 (CRAAS-10)
Final schedule of SEQUENTIAL 'core': Latency = 16, Area (Datapath, Register, Total) = 6537.99, 0.00, 6537.99 (CRAAS-12)
Completed transformation 'allocate' on solution 'edge_detect.v2': elapsed time 1.33 seconds, memory usage 193356kB, peak memory usage 236480kB (SOL-9)
